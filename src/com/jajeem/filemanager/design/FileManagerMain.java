/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jajeem.filemanager.design;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;

import com.alee.laf.tabbedpane.WebTabbedPane;
import com.jajeem.exception.JajeemExcetionHandler;
import com.jajeem.util.i18n;

/**
 * 
 * @author Armin
 */
public class FileManagerMain extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private FileSendTab fileSendTab;
	private FileCollect fileCollectTab;
	private FileInbox fileInboxTab;
	private FileAssignmentTab fileAssignmentTab;

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private com.alee.laf.panel.WebPanel webPanel1;
	private WebTabbedPane webTabbedPane;
	private ArrayList<String> receivingIps;

	/**
	 * Creates new form FileManagerMain
	 */
	public FileManagerMain() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		setLookAndFeel();
		webPanel1 = new com.alee.laf.panel.WebPanel();
		try {
			fileSendTab = new FileSendTab(this);
		} catch (Exception e3) {
			e3.printStackTrace();
		}
		try {
			fileCollectTab = new FileCollect();
		} catch (Exception e2) {
			e2.printStackTrace();
		}
		try {
			fileInboxTab = new FileInbox();
		} catch (Exception e1) {
			e1.printStackTrace();
		}
		try {
			fileAssignmentTab = new FileAssignmentTab(this);
		} catch (Exception e) {
			e.printStackTrace();
		}

		fileAssignmentTab.setParent(this);

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		webTabbedPane = new WebTabbedPane();
		try{
			webTabbedPane.addTab(i18n.getParam("File Send"), fileSendTab);
			webTabbedPane.addTab(i18n.getParam("File Assignments"), fileAssignmentTab);
			webTabbedPane.addTab(i18n.getParam("File Collect"), fileCollectTab);
			webTabbedPane.addTab(i18n.getParam("File Inbox"), fileInboxTab);
		}
		catch(Exception e){
		}

		javax.swing.GroupLayout webPanel1Layout = new javax.swing.GroupLayout(
				webPanel1);
		webPanel1Layout.setHorizontalGroup(webPanel1Layout.createParallelGroup(
				Alignment.LEADING).addGroup(
				webPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(webTabbedPane, GroupLayout.DEFAULT_SIZE,
								778, Short.MAX_VALUE).addContainerGap()));
		webPanel1Layout.setVerticalGroup(webPanel1Layout.createParallelGroup(
				Alignment.LEADING).addGroup(
				webPanel1Layout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(webTabbedPane, GroupLayout.DEFAULT_SIZE,
								384, Short.MAX_VALUE).addContainerGap()));
		webPanel1.setLayout(webPanel1Layout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				webPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				webPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
				javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();

		initEvents();
	}// </editor-fold>//GEN-END:initComponents

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new FileManagerMain().setVisible(true);
			}
		});
	}

	public void initEvents() {
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent arg0) {
				fileInboxTab.SaveRequests();
			}
		});
	}

	protected static final void setLookAndFeel() {
		String lookAndFeelClassName = null;
		LookAndFeelInfo[] lookAndFeelInfos = UIManager
				.getInstalledLookAndFeels();
		for (LookAndFeelInfo lookAndFeel : lookAndFeelInfos) {
			if ("Windows".equals(lookAndFeel.getName())) {
				lookAndFeelClassName = lookAndFeel.getClassName();
			}
		}
		if (lookAndFeelClassName == null) {
			lookAndFeelClassName = UIManager.getSystemLookAndFeelClassName();
		}
		try {
			UIManager.setLookAndFeel(lookAndFeelClassName);
		} catch (Exception e) {
			JajeemExcetionHandler.logError(e);
		}
	}

	public void invokeFileCollect() {
		fileCollectTab.CollectFiles();
	}

	public void setReceivingIps(ArrayList<String> arrayList) {
		receivingIps = arrayList;
	}

	public ArrayList<String> getReceivingIps() {
		return receivingIps;
	}
}
