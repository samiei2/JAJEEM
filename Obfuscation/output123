com.jajeem.command.handler.ChatCommandHanlder -> com.jajeem.command.handler.a:
    com.jajeem.quiz.design.client.alt.Quiz_Window quizWindowHndl -> a
    com.jajeem.survey.design.client.alt.Survey_Window surveyWindowHndl -> b
    com.jajeem.recorder.design.CaptureScreenToFile recorder -> c
    java.lang.String recordingFileName -> d
    java.lang.String recordingServerAddress -> e
    org.jitsi.util.swing.TransparentIntercomInProgressFrame studentIntercomPanel -> f
    com.jajeem.core.model.Student currentStudent -> g
    com.jajeem.quiz.design.client.alt.Quiz_Window getQuizWindowHndl() -> a
    void setQuizWindowHndl(com.jajeem.quiz.design.client.alt.Quiz_Window) -> a
    void setSurvey_WindowHndl(com.jajeem.survey.design.client.alt.Survey_Window) -> a
    com.jajeem.survey.design.client.alt.Survey_Window getSurvey_WindowHndl() -> b
    com.jajeem.recorder.design.CaptureScreenToFile getRecorder() -> c
    void setRecorder(com.jajeem.recorder.design.CaptureScreenToFile) -> a
    void setRecordedFileName(java.lang.String) -> a
    java.lang.String getRecordedFileName() -> d
    void setReturnRecordedFileServer(java.lang.String) -> b
    java.lang.String getReturnRecordedFileServer() -> e
    org.jitsi.util.swing.TransparentIntercomInProgressFrame getStudentIntercomPanel() -> f
    void setStudentIntercomInProgress(org.jitsi.util.swing.TransparentIntercomInProgressFrame) -> a
    com.jajeem.core.model.Student getCurrentStudent() -> g
    void setCurrentStudent(com.jajeem.core.model.Student) -> a
    void generate(java.lang.String,java.lang.String,java.lang.String) -> a
    java.util.Hashtable getLocalProperties() -> h
    void display(java.util.Hashtable) -> a
    void clear() -> i
    void setSSLProps() -> j
    void clearSSLProps() -> k
    void clearDefaultAdr() -> l
    void clearProxyProps() -> m
    float getJavaVersion() -> n
    java.net.InetAddress getLocalHost() -> o
    int getPort(java.lang.String,int) -> a
    java.lang.String[] getLocalIPAdresses() -> p
com.jajeem.command.handler.FinishedQuizCommandHandler -> com.jajeem.command.handler.b:
com.jajeem.command.handler.FinishedSurveyCommandHandler -> com.jajeem.command.handler.c:
com.jajeem.command.handler.GetCourseListCommandHandler -> com.jajeem.command.handler.d:
com.jajeem.command.handler.IntercomRequestCommandHanlder -> com.jajeem.command.handler.e:
com.jajeem.command.handler.MessageCommandHanlder -> com.jajeem.command.handler.f:
com.jajeem.command.handler.OpenWebsiteCommandHandler -> com.jajeem.command.handler.g:
com.jajeem.command.handler.RequestCourseListCommandHandler -> com.jajeem.command.handler.h:
com.jajeem.command.handler.RestartStudentProgramCommandHandler -> com.jajeem.command.handler.i:
    java.lang.Object lock -> a
    void run$4c0397f6() -> a
com.jajeem.command.handler.SendFileAssignmentCommandHandler -> com.jajeem.command.handler.j:
    void run(com.jajeem.command.model.Command) -> a
com.jajeem.command.handler.SendFileAssignmentCommandHandler$1 -> com.jajeem.command.handler.k:
    java.lang.String val$file -> a
    java.lang.String val$time -> b
    void run() -> run
com.jajeem.command.handler.SendFileAssignmentCommandHandler$2 -> com.jajeem.command.handler.l:
    java.lang.String val$time -> a
    void run() -> run
com.jajeem.command.handler.SendFileCollectCommandHandler -> com.jajeem.command.handler.m:
    void run(com.jajeem.command.model.Command) -> a
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
com.jajeem.command.handler.SendFileCollectCommandHandler$1 -> com.jajeem.command.handler.n:
    java.lang.String val$server -> a
    java.io.File val$file -> b
    void run() -> run
com.jajeem.command.handler.SendQuizResponseCommandHandler -> com.jajeem.command.handler.o:
com.jajeem.command.handler.SendRecordingErrorCommandHandler -> com.jajeem.command.handler.p:
com.jajeem.command.handler.SendRecordingSuccessCommandHandler -> com.jajeem.command.handler.q:
com.jajeem.command.handler.SendSpeechFileCommandHandler -> com.jajeem.command.handler.r:
com.jajeem.command.handler.SendSurveyResponseCommandHandler -> com.jajeem.command.handler.s:
com.jajeem.command.handler.SetAuthenticateCommandHanlder -> com.jajeem.command.handler.t:
    java.lang.Object authenticateLock -> a
    void run(com.jajeem.command.model.Command) -> a
com.jajeem.command.handler.SetDuplicateLoginCommandHanlder -> com.jajeem.command.handler.u:
com.jajeem.command.handler.SetGrantCommandHanlder -> com.jajeem.command.handler.v:
com.jajeem.command.handler.SetInternetCommandHandler -> com.jajeem.command.handler.w:
com.jajeem.command.handler.SetLockCommandHandler -> com.jajeem.command.handler.x:
com.jajeem.command.handler.SetPowerCommandHandler -> com.jajeem.command.handler.y:
com.jajeem.command.handler.SetStudentLogoutCommandHanlder -> com.jajeem.command.handler.z:
com.jajeem.command.handler.SetTeacherLogoutCommandHanlder -> com.jajeem.command.handler.A:
com.jajeem.command.handler.SetVolumeCommandHandler -> com.jajeem.command.handler.B:
    void run(com.jajeem.command.model.Command) -> a
com.jajeem.command.handler.SetWhiteBlackAppCommandHandler -> com.jajeem.command.handler.C:
com.jajeem.command.handler.StartApplicationCommandHanlder -> com.jajeem.command.handler.D:
    void run(com.jajeem.command.model.Command) -> a
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
    java.util.Collection getPath(java.util.ArrayList) -> a
com.jajeem.command.handler.StartCallAllCommandHanlder -> com.jajeem.command.handler.E:
com.jajeem.command.handler.StartCaptureCommandHandler -> com.jajeem.command.handler.F:
    void run$4c0397f6() -> a
com.jajeem.command.handler.StartConversationCommandHanlder -> com.jajeem.command.handler.G:
com.jajeem.command.handler.StartIntercomCommandHandler -> com.jajeem.command.handler.H:
com.jajeem.command.handler.StartModelCommandHanlder -> com.jajeem.command.handler.I:
com.jajeem.command.handler.StartMoviePlayerCommandHandler -> com.jajeem.command.handler.J:
com.jajeem.command.handler.StartQuizCommandHandler -> com.jajeem.command.handler.K:
com.jajeem.command.handler.StartRecorderCommandHandler -> com.jajeem.command.handler.L:
com.jajeem.command.handler.StartSpeechCommandHandler -> com.jajeem.command.handler.StartSpeechCommandHandler:
    void run(com.jajeem.command.model.Command) -> a
    void main(java.lang.String[]) -> main
com.jajeem.command.handler.StartSurveyCommandHandler -> com.jajeem.command.handler.M:
com.jajeem.command.handler.StartUpCommandHandler -> com.jajeem.command.handler.N:
com.jajeem.command.handler.StartVideoChatCommandHandler -> com.jajeem.command.handler.O:
com.jajeem.command.handler.StartViewerCommandHandler -> com.jajeem.command.handler.P:
com.jajeem.command.handler.StartWhiteBoardCommandHandler -> com.jajeem.command.handler.Q:
    void run(com.jajeem.command.model.Command) -> a
com.jajeem.command.handler.StartWhiteBoardCommandHandler$1 -> com.jajeem.command.handler.R:
    com.jajeem.command.model.StartWhiteBoardCommand val$command -> a
    void run() -> run
com.jajeem.command.handler.StartWhiteBoardCommandHandler$1$1 -> com.jajeem.command.handler.S:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.command.handler.StopCallAllCommandHanlder -> com.jajeem.command.handler.T:
com.jajeem.command.handler.StopCaptureCommandHandler -> com.jajeem.command.handler.U:
com.jajeem.command.handler.StopConversationCommandHanlder -> com.jajeem.command.handler.V:
com.jajeem.command.handler.StopIntercomCommandHandler -> com.jajeem.command.handler.W:
com.jajeem.command.handler.StopModelCommandHanlder -> com.jajeem.command.handler.X:
com.jajeem.command.handler.StopQuizCommandHanlder -> com.jajeem.command.handler.Y:
com.jajeem.command.handler.StopRecorderCommandHandler -> com.jajeem.command.handler.Z:
com.jajeem.command.handler.StopSurveyCommandHanlder -> com.jajeem.command.handler.aa:
com.jajeem.command.handler.StopVideoChatCommandHandler -> com.jajeem.command.handler.ab:
com.jajeem.command.handler.StopWhiteBoardCommandHanlder -> com.jajeem.command.handler.ac:
com.jajeem.command.model.AuthenticateCommand -> com.jajeem.command.a.a:
    java.lang.String username -> a
    char[] password -> b
    java.lang.String getUsername() -> a
    char[] getPassword() -> b
com.jajeem.command.model.ChatCommand -> com.jajeem.command.a.b:
    java.lang.String message -> a
    boolean mutli -> b
    int groupId -> c
    java.lang.String getMessage() -> a
    boolean isMutli() -> b
    int getGroupId() -> c
com.jajeem.command.model.Command -> com.jajeem.command.a.c:
    java.lang.String to -> a
    java.lang.String from -> b
    int port -> c
    int getPort() -> d
    void setPort(int) -> a
    java.lang.String getFrom() -> e
    java.lang.String getTo() -> f
    void setTo(java.lang.String) -> a
com.jajeem.command.model.DuplicateLoginCommand -> com.jajeem.command.a.d:
com.jajeem.command.model.FinishedQuizCommand -> com.jajeem.command.a.e:
    com.jajeem.quiz.model.Run run -> a
    void setRun(com.jajeem.quiz.model.Run) -> a
    com.jajeem.quiz.model.Run getRun() -> a
com.jajeem.command.model.FinishedSurveyCommand -> com.jajeem.command.a.f:
    com.jajeem.survey.model.Run run -> a
    void setRun(com.jajeem.survey.model.Run) -> a
    com.jajeem.survey.model.Run getRun() -> a
com.jajeem.command.model.GetCourseListCommand -> com.jajeem.command.a.g:
    java.util.ArrayList courseList -> a
    java.util.ArrayList getCourseList() -> a
com.jajeem.command.model.GrantCommand -> com.jajeem.command.a.h:
    boolean granted -> a
    com.jajeem.core.model.Student student -> b
    boolean isGranted() -> a
    void setGranted(boolean) -> a
    com.jajeem.core.model.Student getStudent() -> b
    void setStudent(com.jajeem.core.model.Student) -> a
com.jajeem.command.model.IntercomRequestCommand -> com.jajeem.command.a.i:
com.jajeem.command.model.InternetCommand -> com.jajeem.command.a.j:
com.jajeem.command.model.LockCommand -> com.jajeem.command.a.k:
com.jajeem.command.model.MessageCommand -> com.jajeem.command.a.l:
    java.lang.String message -> a
    java.lang.String getMessage() -> a
com.jajeem.command.model.PowerCommand -> com.jajeem.command.a.m:
    java.lang.String type -> a
    java.lang.String getType() -> a
    void setType(java.lang.String) -> b
com.jajeem.command.model.RequestCourseListCommand -> com.jajeem.command.a.n:
    com.jajeem.core.model.Student student -> a
    com.jajeem.core.model.Student getStudent() -> a
com.jajeem.command.model.RestartStudentProgramCommand -> com.jajeem.command.a.o:
com.jajeem.command.model.SendFileAssignmentCommand -> com.jajeem.command.a.p:
    java.lang.String file -> a
    java.lang.String time -> b
    void setFile(java.lang.String) -> b
    java.lang.String getFile() -> a
    java.lang.String getTime() -> b
    void setTime(java.lang.String) -> c
com.jajeem.command.model.SendFileCollectCommand -> com.jajeem.command.a.q:
com.jajeem.command.model.SendQuizResponseCommand -> com.jajeem.command.a.r:
    com.jajeem.events.QuizResponse event -> a
    void setEvent(com.jajeem.events.QuizResponse) -> a
    com.jajeem.events.QuizResponse getEvent() -> a
com.jajeem.command.model.SendRecordingErrorCommand -> com.jajeem.command.a.s:
com.jajeem.command.model.SendRecordingSuccessCommand -> com.jajeem.command.a.t:
com.jajeem.command.model.SendSpeechFileCommand -> com.jajeem.command.a.u:
    java.lang.String file -> a
    void setFile(java.lang.String) -> b
    java.lang.String getFile() -> a
com.jajeem.command.model.SendSurveyResponseCommand -> com.jajeem.command.a.v:
    com.jajeem.events.SurveyResponse event -> a
    void setEvent(com.jajeem.events.SurveyResponse) -> a
    com.jajeem.events.SurveyResponse getEvent() -> a
com.jajeem.command.model.StartApplicationCommand -> com.jajeem.command.a.w:
    java.lang.String fileName -> a
    java.lang.String getFileName() -> a
com.jajeem.command.model.StartCallAllCommand -> com.jajeem.command.a.x:
com.jajeem.command.model.StartCaptureCommand -> com.jajeem.command.a.y:
com.jajeem.command.model.StartConversationCommand -> com.jajeem.command.a.z:
    java.lang.String conversationToIP -> a
    java.lang.String getConversationTo() -> a
    void setConversationTo(java.lang.String) -> b
com.jajeem.command.model.StartIntercomCommand -> com.jajeem.command.a.A:
com.jajeem.command.model.StartModelCommand -> com.jajeem.command.a.B:
    java.lang.String leader -> a
    java.lang.String getLeader() -> a
com.jajeem.command.model.StartMoviePlayerCommand -> com.jajeem.command.a.C:
com.jajeem.command.model.StartQuizCommand -> com.jajeem.command.a.D:
    java.lang.String server -> a
    com.jajeem.quiz.model.Run run -> b
    int receivePort -> c
    java.lang.String getServer() -> a
    void setServer(java.lang.String) -> b
    void setRun(com.jajeem.quiz.model.Run) -> a
    com.jajeem.quiz.model.Run getRun() -> b
    void setReceivePort(int) -> b
    int getReceivePort() -> c
com.jajeem.command.model.StartSpeechCommand -> com.jajeem.command.a.E:
com.jajeem.command.model.StartStudentRecordCommand -> com.jajeem.command.a.F:
com.jajeem.command.model.StartSurveyCommand -> com.jajeem.command.a.G:
    java.lang.String server -> a
    com.jajeem.survey.model.Run run -> b
    int receivingPort -> c
    java.lang.String getServer() -> a
    void setServer(java.lang.String) -> b
    void setRun(com.jajeem.survey.model.Run) -> a
    com.jajeem.survey.model.Run getRun() -> b
    void setReceivingPort(int) -> b
    int getReceivingPort() -> c
com.jajeem.command.model.StartUpCommand -> com.jajeem.command.a.H:
    java.lang.String sender -> a
    java.lang.String senderName -> b
    java.lang.String getSender() -> a
    void setSender(java.lang.String) -> b
    java.lang.String getSenderName() -> b
com.jajeem.command.model.StartVideoChatCommand -> com.jajeem.command.a.I:
com.jajeem.command.model.StartViewerCommand -> com.jajeem.command.a.J:
com.jajeem.command.model.StartWhiteBoardCommand -> com.jajeem.command.a.K:
    java.lang.String SessionPort -> a
    java.lang.String WhiteboardPort -> b
    void setSessionPort(java.lang.String) -> b
    java.lang.String getSessionPort() -> a
    java.lang.String getWhiteboardPort() -> b
    void setWhiteboardPort(java.lang.String) -> c
com.jajeem.command.model.StopCallAllCommand -> com.jajeem.command.a.L:
com.jajeem.command.model.StopCaptureCommand -> com.jajeem.command.a.M:
com.jajeem.command.model.StopConversationCommand -> com.jajeem.command.a.N:
    java.lang.String conversationToIP -> a
    java.lang.String getConversationTo() -> a
    void setConversationTo(java.lang.String) -> b
com.jajeem.command.model.StopIntercomCommand -> com.jajeem.command.a.O:
com.jajeem.command.model.StopModelCommand -> com.jajeem.command.a.P:
com.jajeem.command.model.StopQuizCommand -> com.jajeem.command.a.Q:
com.jajeem.command.model.StopStudentRecordCommand -> com.jajeem.command.a.R:
com.jajeem.command.model.StopSurveyCommand -> com.jajeem.command.a.S:
com.jajeem.command.model.StopVideoChatCommand -> com.jajeem.command.a.T:
com.jajeem.command.model.StopWhiteBoardCommand -> com.jajeem.command.a.U:
com.jajeem.command.model.StudentLogoutCommand -> com.jajeem.command.a.V:
com.jajeem.command.model.TeacherLogoutCommand -> com.jajeem.command.a.W:
com.jajeem.command.model.VolumeCommand -> com.jajeem.command.a.X:
    java.lang.String type -> a
    int vol -> b
    java.lang.String getType() -> a
    int getVol() -> b
com.jajeem.command.model.WebsiteCommand -> com.jajeem.command.a.Y:
    java.lang.String URL -> a
    java.lang.String getURL() -> a
com.jajeem.command.model.WhiteBlackAppCommand -> com.jajeem.command.a.Z:
    java.lang.String appName -> a
    boolean black -> b
    java.lang.String getAppName() -> a
    boolean isBlack() -> b
com.jajeem.command.service.ClientService -> com.jajeem.command.b.a:
    java.net.MulticastSocket socket -> a
    java.net.InetAddress group -> b
    java.lang.Thread thread -> c
    java.util.concurrent.ExecutorService pool -> d
    org.apache.log4j.Logger logger -> e
    void start() -> a
    void SendFileToAll(java.io.File,java.lang.String) -> a
    void run() -> run
com.jajeem.command.service.ClientService$1 -> com.jajeem.command.b.b:
    com.jajeem.command.service.ClientService this$0 -> a
    java.lang.String val$message -> b
    void run() -> run
com.jajeem.command.service.ClientService$10 -> com.jajeem.command.b.c:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$11 -> com.jajeem.command.b.d:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$12 -> com.jajeem.command.b.e:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$13 -> com.jajeem.command.b.f:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$14 -> com.jajeem.command.b.g:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$15 -> com.jajeem.command.b.h:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$16 -> com.jajeem.command.b.i:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$17 -> com.jajeem.command.b.j:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$18 -> com.jajeem.command.b.k:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$19 -> com.jajeem.command.b.l:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$2 -> com.jajeem.command.b.m:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$20 -> com.jajeem.command.b.n:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$21 -> com.jajeem.command.b.o:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$22 -> com.jajeem.command.b.p:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$23 -> com.jajeem.command.b.q:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$24 -> com.jajeem.command.b.r:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$25 -> com.jajeem.command.b.s:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$26 -> com.jajeem.command.b.t:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$27 -> com.jajeem.command.b.u:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$28 -> com.jajeem.command.b.v:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$29 -> com.jajeem.command.b.w:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$3 -> com.jajeem.command.b.x:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$30 -> com.jajeem.command.b.y:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$31 -> com.jajeem.command.b.z:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$32 -> com.jajeem.command.b.A:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$33 -> com.jajeem.command.b.B:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$34 -> com.jajeem.command.b.C:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$35 -> com.jajeem.command.b.D:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$36 -> com.jajeem.command.b.E:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$37 -> com.jajeem.command.b.F:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$38 -> com.jajeem.command.b.G:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$39 -> com.jajeem.command.b.H:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$4 -> com.jajeem.command.b.I:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$40 -> com.jajeem.command.b.J:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$41 -> com.jajeem.command.b.K:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$42 -> com.jajeem.command.b.L:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$43 -> com.jajeem.command.b.M:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$44 -> com.jajeem.command.b.N:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$45 -> com.jajeem.command.b.O:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$46 -> com.jajeem.command.b.P:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$47 -> com.jajeem.command.b.Q:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$48 -> com.jajeem.command.b.R:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$49 -> com.jajeem.command.b.S:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$5 -> com.jajeem.command.b.T:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$50 -> com.jajeem.command.b.U:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$51 -> com.jajeem.command.b.V:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$52 -> com.jajeem.command.b.W:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$53 -> com.jajeem.command.b.X:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$6 -> com.jajeem.command.b.Y:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$7 -> com.jajeem.command.b.Z:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$8 -> com.jajeem.command.b.aa:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.ClientService$9 -> com.jajeem.command.b.ab:
    com.jajeem.command.model.Command val$cmd -> a
    void run() -> run
com.jajeem.command.service.MyThread -> com.jajeem.command.b.ac:
    java.io.File file -> a
    java.lang.String ip -> b
    java.lang.String fileName -> c
    void run() -> run
com.jajeem.command.service.ServerService -> com.jajeem.command.b.ad:
    java.net.MulticastSocket socket -> a
    int ttl -> b
    org.apache.log4j.Logger logger -> c
    void send(com.jajeem.command.model.Command) -> a
    byte[] constructMessage(com.jajeem.command.model.Command) -> b
    void run() -> run
com.jajeem.command.service.ServerServiceTimer -> com.jajeem.command.b.ae:
    java.net.MulticastSocket socket -> a
    java.util.Timer timer -> b
    java.net.InetAddress group -> c
    int ttl -> d
    int interval -> e
    com.jajeem.command.model.Command cmd -> f
    void start() -> a
    void run() -> run
    byte[] constructMessage(com.jajeem.command.model.Command) -> b
    void setCmd(com.jajeem.command.model.Command) -> a
    void setInterval(int) -> a
com.jajeem.core.dao.h2.InstructorDAO -> com.jajeem.core.a.a.a:
    org.apache.log4j.Logger logger -> a
    boolean authenticate(java.lang.String,char[]) -> a
    com.jajeem.core.model.Instructor create(com.jajeem.core.model.Instructor) -> a
    com.jajeem.core.model.Instructor getById(int) -> a
    com.jajeem.core.model.Instructor get(java.lang.String) -> a
    java.util.ArrayList getByCourseId(int) -> b
    boolean update(com.jajeem.core.model.Instructor) -> b
    boolean delete(com.jajeem.core.model.Instructor) -> c
    java.util.ArrayList list() -> a
com.jajeem.core.dao.h2.StudentCourseDAO -> com.jajeem.core.a.a.b:
    com.jajeem.core.model.StudentCourse create(com.jajeem.core.model.StudentCourse) -> a
    boolean delete(int,int) -> a
    java.util.ArrayList getCourseStudentsById(int) -> a
    java.util.ArrayList getStudentCoursesById(int) -> b
    java.util.ArrayList getStudentQuizesById(int,int) -> b
com.jajeem.core.dao.h2.StudentDAO -> com.jajeem.core.a.a.c:
    org.apache.log4j.Logger logger -> a
    boolean authenticate(java.lang.String,char[]) -> a
    com.jajeem.core.model.Student create(com.jajeem.core.model.Student) -> a
    com.jajeem.core.model.Student get(java.lang.String) -> a
    boolean update(com.jajeem.core.model.Student) -> b
    boolean delete(com.jajeem.core.model.Student) -> c
    java.util.ArrayList list() -> a
com.jajeem.core.design.account.AccountPanel -> com.jajeem.core.design.account.AccountPanel:
    com.jajeem.core.design.account.AccountPanel frame -> f
    com.jajeem.core.model.Instructor instructorModel -> a
    com.jajeem.room.model.Course courseModel -> g
    ca.odell.glazedlists.EventList courseList -> h
    ca.odell.glazedlists.swing.EventSelectionModel courseSelectionModel -> i
    ca.odell.glazedlists.EventList studentList -> j
    ca.odell.glazedlists.swing.EventSelectionModel studentSelectionModel -> k
    void main(java.lang.String[]) -> main
    void loadData() -> b
    void access$0(com.jajeem.core.design.account.AccountPanel) -> a
    com.jajeem.core.design.account.AccountPanel access$1() -> a
    ca.odell.glazedlists.swing.EventSelectionModel access$2(com.jajeem.core.design.account.AccountPanel) -> b
com.jajeem.core.design.account.AccountPanel$1 -> com.jajeem.core.design.account.a:
    void run() -> run
com.jajeem.core.design.account.AccountPanel$2 -> com.jajeem.core.design.account.b:
    com.jajeem.core.design.account.AccountPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AccountPanel$3 -> com.jajeem.core.design.account.c:
    com.jajeem.core.design.account.AccountPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AccountPanel$4 -> com.jajeem.core.design.account.d:
    com.jajeem.core.design.account.AccountPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AccountPanel$5 -> com.jajeem.core.design.account.e:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.AccountPanel$6 -> com.jajeem.core.design.account.f:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.AccountPanel$CourseTableFormat -> com.jajeem.core.design.account.g:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.AccountPanel$StudentTableFormat -> com.jajeem.core.design.account.h:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.jajeem.core.model.Student setColumnValue(com.jajeem.core.model.Student,java.lang.Object,int) -> a
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.AddNewCourseDialog -> com.jajeem.core.design.account.i:
    com.alee.laf.panel.WebPanel contentPanel -> a
    com.alee.laf.text.WebTextField courseNameTF -> f
    com.jajeem.ui.combobox.JajeemComboBox classTypeTF -> g
    com.alee.laf.label.WebLabel courseNameLabel -> h
    com.alee.laf.label.WebLabel instructorNameLabel -> i
    com.alee.laf.label.WebLabel ClassTypeLabel -> j
    com.alee.laf.label.WebLabel levelLabel -> k
    com.alee.laf.label.WebLabel startDateLabel -> l
    com.alee.extended.date.WebDateField startDateTF -> m
    com.alee.laf.label.WebLabel sessionLabel -> n
    com.alee.laf.text.WebTextField sessionTF -> o
    com.jajeem.ui.combobox.JajeemComboBox instructorNameCombo -> p
    com.alee.laf.label.WebLabel dayLabel1 -> q
    com.jajeem.ui.combobox.JajeemComboBox dayCombo1 -> r
    com.alee.laf.label.WebLabel startTimeLabel1 -> s
    com.alee.laf.label.WebLabel endTimeLabel1 -> t
    com.jajeem.ui.combobox.JajeemComboBox endTimeTF1 -> u
    com.alee.laf.label.WebLabel dayLabel2 -> v
    com.jajeem.ui.combobox.JajeemComboBox dayCombo2 -> w
    com.alee.laf.label.WebLabel startTimeLabel2 -> z
    com.jajeem.ui.combobox.JajeemComboBox startTimeTF2 -> A
    com.alee.laf.label.WebLabel endTimeLabel2 -> B
    com.jajeem.ui.combobox.JajeemComboBox endTimeTF2 -> C
    com.alee.laf.label.WebLabel dayLabel3 -> D
    com.jajeem.ui.combobox.JajeemComboBox dayCombo3 -> E
    com.alee.laf.label.WebLabel startTimeLabel3 -> F
    com.jajeem.ui.combobox.JajeemComboBox startTimeTF3 -> G
    com.alee.laf.label.WebLabel endTimeLabel3 -> H
    com.jajeem.ui.combobox.JajeemComboBox endTimeTF3 -> I
    com.alee.laf.label.WebLabel dayLabel4 -> J
    com.jajeem.ui.combobox.JajeemComboBox dayCombo4 -> K
    com.alee.laf.label.WebLabel startTimeLabel4 -> L
    com.jajeem.ui.combobox.JajeemComboBox startTimeTF4 -> M
    com.alee.laf.label.WebLabel endTimeLabel4 -> N
    com.jajeem.ui.combobox.JajeemComboBox endTimeTF4 -> O
    com.alee.laf.label.WebLabel dayLabel5 -> P
    com.jajeem.ui.combobox.JajeemComboBox dayCombo5 -> Q
    com.alee.laf.label.WebLabel startTimeLabel5 -> R
    com.jajeem.ui.combobox.JajeemComboBox startTimeTF5 -> S
    com.alee.laf.label.WebLabel endTimeLabel5 -> T
    com.jajeem.ui.combobox.JajeemComboBox endTimeTF5 -> U
    com.jajeem.ui.combobox.JajeemComboBox levelCombo -> V
    com.jajeem.ui.combobox.JajeemComboBox startTimeTF1 -> W
    com.jajeem.core.design.account.CustomAccountButton okButton_1 -> X
    com.jajeem.core.design.account.CustomAccountButton cancelButton_1 -> Y
    com.alee.laf.text.WebTextField access$0(com.jajeem.core.design.account.AddNewCourseDialog) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$1(com.jajeem.core.design.account.AddNewCourseDialog) -> b
    com.jajeem.ui.combobox.JajeemComboBox access$2(com.jajeem.core.design.account.AddNewCourseDialog) -> c
    com.jajeem.ui.combobox.JajeemComboBox access$3(com.jajeem.core.design.account.AddNewCourseDialog) -> d
    com.alee.extended.date.WebDateField access$4(com.jajeem.core.design.account.AddNewCourseDialog) -> e
    com.alee.laf.text.WebTextField access$5(com.jajeem.core.design.account.AddNewCourseDialog) -> f
    com.jajeem.ui.combobox.JajeemComboBox access$6(com.jajeem.core.design.account.AddNewCourseDialog) -> g
    com.jajeem.ui.combobox.JajeemComboBox access$7(com.jajeem.core.design.account.AddNewCourseDialog) -> h
    com.jajeem.ui.combobox.JajeemComboBox access$8(com.jajeem.core.design.account.AddNewCourseDialog) -> i
    com.jajeem.ui.combobox.JajeemComboBox access$9(com.jajeem.core.design.account.AddNewCourseDialog) -> j
    com.jajeem.ui.combobox.JajeemComboBox access$10(com.jajeem.core.design.account.AddNewCourseDialog) -> k
    com.jajeem.ui.combobox.JajeemComboBox access$11(com.jajeem.core.design.account.AddNewCourseDialog) -> l
    com.jajeem.ui.combobox.JajeemComboBox access$12(com.jajeem.core.design.account.AddNewCourseDialog) -> m
    com.jajeem.ui.combobox.JajeemComboBox access$13(com.jajeem.core.design.account.AddNewCourseDialog) -> n
    com.jajeem.ui.combobox.JajeemComboBox access$14(com.jajeem.core.design.account.AddNewCourseDialog) -> o
    com.jajeem.ui.combobox.JajeemComboBox access$15(com.jajeem.core.design.account.AddNewCourseDialog) -> p
    com.jajeem.ui.combobox.JajeemComboBox access$16(com.jajeem.core.design.account.AddNewCourseDialog) -> q
    com.jajeem.ui.combobox.JajeemComboBox access$17(com.jajeem.core.design.account.AddNewCourseDialog) -> r
    com.jajeem.ui.combobox.JajeemComboBox access$18(com.jajeem.core.design.account.AddNewCourseDialog) -> s
    com.jajeem.ui.combobox.JajeemComboBox access$19(com.jajeem.core.design.account.AddNewCourseDialog) -> t
    com.jajeem.ui.combobox.JajeemComboBox access$20(com.jajeem.core.design.account.AddNewCourseDialog) -> u
com.jajeem.core.design.account.AddNewCourseDialog$1 -> com.jajeem.core.design.account.j:
    com.jajeem.core.design.account.AddNewCourseDialog this$0 -> a
    ca.odell.glazedlists.EventList val$courseList -> b
    ca.odell.glazedlists.EventList val$instructorList -> c
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewCourseDialog$2 -> com.jajeem.core.design.account.k:
    com.jajeem.core.design.account.AddNewCourseDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewCourseDialog$3 -> com.jajeem.core.design.account.l:
    com.jajeem.core.design.account.AddNewCourseDialog this$0 -> a
    ca.odell.glazedlists.EventList val$courseList -> b
    ca.odell.glazedlists.EventList val$selectedCourse -> c
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewCourseDialog$4 -> com.jajeem.core.design.account.m:
    com.jajeem.core.design.account.AddNewCourseDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewInstructorDialog -> com.jajeem.core.design.account.n:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.text.WebTextField lastNameTF -> f
    com.alee.laf.text.WebTextField firstNameTF -> g
    com.alee.laf.text.WebTextField passwordTF -> h
    com.alee.laf.text.WebTextField usernameTF -> i
    com.jajeem.core.design.account.CustomAccountButton okButton -> j
    com.alee.laf.text.WebTextField access$0(com.jajeem.core.design.account.AddNewInstructorDialog) -> a
    com.alee.laf.text.WebTextField access$1(com.jajeem.core.design.account.AddNewInstructorDialog) -> b
    com.alee.laf.text.WebTextField access$2(com.jajeem.core.design.account.AddNewInstructorDialog) -> c
    com.alee.laf.text.WebTextField access$3(com.jajeem.core.design.account.AddNewInstructorDialog) -> d
com.jajeem.core.design.account.AddNewInstructorDialog$1 -> com.jajeem.core.design.account.o:
    com.jajeem.core.design.account.AddNewInstructorDialog this$0 -> a
    ca.odell.glazedlists.EventList val$instructorList -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewInstructorDialog$2 -> com.jajeem.core.design.account.p:
    com.jajeem.core.design.account.AddNewInstructorDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewStudentDialog -> com.jajeem.core.design.account.q:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.text.WebTextField lastNameTF -> f
    com.alee.laf.text.WebTextField firstNameTF -> g
    com.alee.laf.text.WebTextField passwordTF -> h
    com.alee.laf.text.WebTextField usernameTF -> i
    com.jajeem.core.design.account.CustomAccountButton okButton -> j
    com.alee.laf.text.WebTextField access$0(com.jajeem.core.design.account.AddNewStudentDialog) -> a
    com.alee.laf.text.WebTextField access$1(com.jajeem.core.design.account.AddNewStudentDialog) -> b
    com.alee.laf.text.WebTextField access$2(com.jajeem.core.design.account.AddNewStudentDialog) -> c
    com.alee.laf.text.WebTextField access$3(com.jajeem.core.design.account.AddNewStudentDialog) -> d
com.jajeem.core.design.account.AddNewStudentDialog$1 -> com.jajeem.core.design.account.r:
    com.jajeem.core.design.account.AddNewStudentDialog this$0 -> a
    ca.odell.glazedlists.EventList val$studentList -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AddNewStudentDialog$2 -> com.jajeem.core.design.account.s:
    com.jajeem.core.design.account.AddNewStudentDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel -> com.jajeem.core.design.account.AdminPanel:
    java.awt.Font font -> d
    com.jajeem.core.design.account.AdminPanel frame -> e
    com.alee.laf.rootpane.WebFrame mainFrame -> f
    com.jajeem.core.design.account.DatabaseManager databaseDialog -> g
    ca.odell.glazedlists.EventList courseList -> h
    ca.odell.glazedlists.swing.EventSelectionModel courseSelectionModel -> i
    ca.odell.glazedlists.EventList instructorList -> j
    ca.odell.glazedlists.swing.EventSelectionModel instructorSelectionModel -> k
    ca.odell.glazedlists.EventList studentList -> l
    ca.odell.glazedlists.swing.EventSelectionModel studentSelectionModel -> m
    void loadData() -> e
    ca.odell.glazedlists.EventList getCourseList() -> a
    ca.odell.glazedlists.EventList getInstructorList() -> b
    ca.odell.glazedlists.EventList getStudentList() -> c
    void main(java.lang.String[]) -> main
    com.jajeem.core.design.account.AdminPanel access$0() -> d
    ca.odell.glazedlists.EventList access$1(com.jajeem.core.design.account.AdminPanel) -> a
    ca.odell.glazedlists.swing.EventSelectionModel access$2(com.jajeem.core.design.account.AdminPanel) -> b
    ca.odell.glazedlists.swing.EventSelectionModel access$3(com.jajeem.core.design.account.AdminPanel) -> c
    com.jajeem.core.design.account.DatabaseManager access$4(com.jajeem.core.design.account.AdminPanel) -> d
    com.alee.laf.rootpane.WebFrame access$5(com.jajeem.core.design.account.AdminPanel) -> e
    void access$6(com.jajeem.core.design.account.AdminPanel,com.jajeem.core.design.account.DatabaseManager) -> a
    ca.odell.glazedlists.swing.EventSelectionModel access$7(com.jajeem.core.design.account.AdminPanel) -> f
    void access$8(com.jajeem.core.design.account.AdminPanel) -> g
com.jajeem.core.design.account.AdminPanel$1 -> com.jajeem.core.design.account.t:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$10 -> com.jajeem.core.design.account.u:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$11 -> com.jajeem.core.design.account.v:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$12 -> com.jajeem.core.design.account.w:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$13 -> com.jajeem.core.design.account.x:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.AdminPanel$14 -> com.jajeem.core.design.account.y:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.account.AdminPanel$15 -> com.jajeem.core.design.account.z:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$16 -> com.jajeem.core.design.account.A:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    com.alee.laf.panel.WebPanel val$panel -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$17 -> com.jajeem.core.design.account.B:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$18 -> com.jajeem.core.design.account.C:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$19 -> com.jajeem.core.design.account.D:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$2 -> com.jajeem.core.design.account.E:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$20 -> com.jajeem.core.design.account.F:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.AdminPanel$21 -> com.jajeem.core.design.account.G:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$22 -> com.jajeem.core.design.account.H:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    com.alee.laf.panel.WebPanel val$panel -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$23 -> com.jajeem.core.design.account.I:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$24 -> com.jajeem.core.design.account.J:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$25 -> com.jajeem.core.design.account.K:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.AdminPanel$26 -> com.jajeem.core.design.account.L:
    void run() -> run
com.jajeem.core.design.account.AdminPanel$3 -> com.jajeem.core.design.account.M:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$4 -> com.jajeem.core.design.account.N:
    com.jajeem.core.design.account.CustomAccountCheckBox val$chckbxNewCheckBox -> a
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox -> b
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox_1 -> c
    javax.swing.JPanel val$cards -> d
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$5 -> com.jajeem.core.design.account.O:
    com.jajeem.core.design.account.CustomAccountCheckBox val$chckbxNewCheckBox -> a
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox -> b
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox_1 -> c
    javax.swing.JPanel val$cards -> d
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$6 -> com.jajeem.core.design.account.P:
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox -> a
    com.jajeem.core.design.account.CustomAccountCheckBox val$chckbxNewCheckBox -> b
    com.jajeem.core.design.account.CustomAccountCheckBox val$checkBox_1 -> c
    javax.swing.JPanel val$cards -> d
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$7 -> com.jajeem.core.design.account.Q:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$8 -> com.jajeem.core.design.account.R:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    com.alee.laf.panel.WebPanel val$panel -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$9 -> com.jajeem.core.design.account.S:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.AdminPanel$CourseTableFormat -> com.jajeem.core.design.account.T:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.AdminPanel$InstructorTableFormat -> com.jajeem.core.design.account.U:
    com.jajeem.core.design.account.AdminPanel this$0 -> a
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.jajeem.core.model.Instructor setColumnValue(com.jajeem.core.model.Instructor,java.lang.Object,int) -> a
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.AdminPanel$StudentTableFormat -> com.jajeem.core.design.account.V:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    com.jajeem.core.model.Student setColumnValue(com.jajeem.core.model.Student,java.lang.Object,int) -> a
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.BaseAccountFrame -> com.jajeem.core.design.account.W:
    com.jajeem.util.CustomPanel panelContent -> b
    javax.swing.JFrame mainFrame -> c
    int posX -> d
    int posY -> e
    com.jajeem.core.design.account.CustomAccountButton customQuizButton -> a
com.jajeem.core.design.account.BaseAccountFrame$1 -> com.jajeem.core.design.account.X:
    com.jajeem.core.design.account.BaseAccountFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.BaseAccountFrame$2 -> com.jajeem.core.design.account.Y:
    com.jajeem.core.design.account.BaseAccountFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.account.BaseAccountFrame$3 -> com.jajeem.core.design.account.Z:
    com.jajeem.core.design.account.BaseAccountFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.account.BaseAccountFrame$4 -> com.jajeem.core.design.account.aa:
    com.jajeem.core.design.account.BaseAccountFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.account.CourseListDialog -> com.jajeem.core.design.account.ab:
    ca.odell.glazedlists.EventList courseList -> a
    ca.odell.glazedlists.swing.EventSelectionModel courseSelectionModel -> f
com.jajeem.core.design.account.CourseListDialog$1 -> com.jajeem.core.design.account.ac:
    com.jajeem.core.design.account.CourseListDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.CourseListDialog$2 -> com.jajeem.core.design.account.ad:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.CourseListDialog$CourseTableFormat -> com.jajeem.core.design.account.ae:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.CourseStudentDialog -> com.jajeem.core.design.account.af:
    ca.odell.glazedlists.EventList studentList -> a
    ca.odell.glazedlists.swing.EventSelectionModel studentSelectionModel -> f
    com.jajeem.room.model.Course course -> g
    com.jajeem.core.service.StudentCourseService studentCourseService -> h
    ca.odell.glazedlists.EventList getStudentList() -> a
    ca.odell.glazedlists.swing.EventSelectionModel access$0(com.jajeem.core.design.account.CourseStudentDialog) -> a
    com.jajeem.core.service.StudentCourseService access$1(com.jajeem.core.design.account.CourseStudentDialog) -> b
com.jajeem.core.design.account.CourseStudentDialog$1 -> com.jajeem.core.design.account.ag:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.CourseStudentDialog$2 -> com.jajeem.core.design.account.ah:
    com.jajeem.core.design.account.CourseStudentDialog this$0 -> a
    com.jajeem.room.model.Course val$course -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.CourseStudentDialog$3 -> com.jajeem.core.design.account.ai:
    com.jajeem.room.model.Course val$course -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.CourseStudentDialog$4 -> com.jajeem.core.design.account.aj:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.CourseStudentDialog$StudentTableFormat -> com.jajeem.core.design.account.ak:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.CustomAccountButton -> com.jajeem.core.design.account.al:
    java.awt.image.BufferedImage background -> c
    boolean isRollOver -> a
    boolean isPressed -> b
    java.lang.String uri -> d
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.core.design.account.CustomAccountButton$1 -> com.jajeem.core.design.account.am:
    com.jajeem.core.design.account.CustomAccountButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.account.CustomAccountCheckBox -> com.jajeem.core.design.account.an:
    java.awt.image.BufferedImage originalImage -> b
    boolean isSelected -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
    javax.swing.ButtonModel access$0(com.jajeem.core.design.account.CustomAccountCheckBox) -> a
com.jajeem.core.design.account.CustomAccountCheckBox$1 -> com.jajeem.core.design.account.ao:
    com.jajeem.core.design.account.CustomAccountCheckBox this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.account.CustomAccountFrame -> com.jajeem.core.design.account.ap:
    com.jajeem.util.CustomPanel panelTop -> a
    com.jajeem.util.CustomPanel panelContent -> b
    com.jajeem.util.CustomPanel panelClose -> c
    int posX -> d
    int posY -> e
    void access$0(com.jajeem.core.design.account.CustomAccountFrame,int) -> a
    void access$1(com.jajeem.core.design.account.CustomAccountFrame,int) -> b
    int access$2(com.jajeem.core.design.account.CustomAccountFrame) -> a
    int access$3(com.jajeem.core.design.account.CustomAccountFrame) -> b
com.jajeem.core.design.account.CustomAccountFrame$1 -> com.jajeem.core.design.account.aq:
    com.jajeem.core.design.account.CustomAccountFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.account.CustomAccountFrame$2 -> com.jajeem.core.design.account.ar:
    com.jajeem.core.design.account.CustomAccountFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.account.CustomAccountFrame$3 -> com.jajeem.core.design.account.as:
    com.jajeem.core.design.account.CustomAccountFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.account.DatabaseManager -> com.jajeem.core.design.account.DatabaseManager:
    javax.swing.JPanel contentPanel -> a
    com.jajeem.core.design.account.CustomAccountButton okButton -> f
    void main(java.lang.String[]) -> main
com.jajeem.core.design.account.DatabaseManager$1 -> com.jajeem.core.design.account.at:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.DatabaseManager$2 -> com.jajeem.core.design.account.au:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.DatabaseManager$3 -> com.jajeem.core.design.account.av:
    com.jajeem.core.design.account.DatabaseManager this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.InstructorCourseDialog -> com.jajeem.core.design.account.aw:
    javax.swing.JPanel contentPanel -> a
    ca.odell.glazedlists.EventList instructorList -> f
    ca.odell.glazedlists.swing.EventSelectionModel instructorSelectionModel -> g
    com.jajeem.room.model.Course course -> h
    com.jajeem.core.service.InstructorService instructorService -> i
com.jajeem.core.design.account.InstructorCourseDialog$1 -> com.jajeem.core.design.account.ax:
    com.jajeem.core.design.account.InstructorCourseDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.InstructorCourseDialog$2 -> com.jajeem.core.design.account.ay:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.InstructorCourseDialog$InstructorTableFormat -> com.jajeem.core.design.account.az:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.QuizList -> com.jajeem.core.design.account.aA:
    com.alee.laf.table.WebTable wbTblQuestion -> a
    com.alee.laf.table.WebTable wbTblQuiz -> b
    java.util.ArrayList quizList -> c
    void Populate(int,java.lang.String) -> a
    java.util.ArrayList access$0(com.jajeem.core.design.account.QuizList) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.core.design.account.QuizList) -> b
    com.alee.laf.table.WebTable access$2(com.jajeem.core.design.account.QuizList) -> c
com.jajeem.core.design.account.QuizList$1 -> com.jajeem.core.design.account.aB:
    com.jajeem.core.design.account.QuizList this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.core.design.account.Quiz_OpenDialog -> com.jajeem.core.design.account.Quiz_OpenDialog:
    com.alee.laf.table.WebTable wbTblQuestion -> a
    com.alee.laf.table.WebTable wbTblQuiz -> f
    java.util.ArrayList quizList -> g
    void main(java.lang.String[]) -> main
    com.alee.laf.table.WebTable access$0(com.jajeem.core.design.account.Quiz_OpenDialog) -> a
    java.util.ArrayList access$1(com.jajeem.core.design.account.Quiz_OpenDialog) -> b
    com.alee.laf.table.WebTable access$2(com.jajeem.core.design.account.Quiz_OpenDialog) -> c
com.jajeem.core.design.account.Quiz_OpenDialog$1 -> com.jajeem.core.design.account.aC:
    com.jajeem.core.design.account.Quiz_OpenDialog this$0 -> a
    java.lang.String val$type -> b
    int val$id -> c
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.core.design.account.Quiz_OpenDialog$2 -> com.jajeem.core.design.account.aD:
    com.jajeem.core.design.account.Quiz_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.Quiz_OpenDialog$3 -> com.jajeem.core.design.account.aE:
    com.jajeem.core.design.account.Quiz_OpenDialog this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.core.design.account.StudentCourseDialog -> com.jajeem.core.design.account.aF:
    javax.swing.JPanel contentPanel -> a
    ca.odell.glazedlists.EventList courseList -> f
    ca.odell.glazedlists.swing.EventSelectionModel courseSelectionModel -> g
    com.jajeem.core.model.Student student -> h
    com.jajeem.core.service.StudentCourseService studentCourseService -> i
    ca.odell.glazedlists.swing.EventSelectionModel access$0(com.jajeem.core.design.account.StudentCourseDialog) -> a
com.jajeem.core.design.account.StudentCourseDialog$1 -> com.jajeem.core.design.account.aG:
    com.jajeem.core.design.account.StudentCourseDialog this$0 -> a
    com.jajeem.core.model.Student val$student -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentCourseDialog$2 -> com.jajeem.core.design.account.aH:
    com.jajeem.core.model.Student val$student -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentCourseDialog$3 -> com.jajeem.core.design.account.aI:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.StudentCourseDialog$CourseTableFormat -> com.jajeem.core.design.account.aJ:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.StudentDialog -> com.jajeem.core.design.account.aK:
    javax.swing.JPanel contentPanel -> a
    ca.odell.glazedlists.EventList studentList -> f
    ca.odell.glazedlists.swing.EventSelectionModel studentSelectionModel -> g
    ca.odell.glazedlists.swing.EventSelectionModel access$0(com.jajeem.core.design.account.StudentDialog) -> a
com.jajeem.core.design.account.StudentDialog$1 -> com.jajeem.core.design.account.aL:
    com.jajeem.core.design.account.StudentDialog this$0 -> a
    com.jajeem.core.design.account.StudentList val$scDialog -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentDialog$2 -> com.jajeem.core.design.account.aM:
    com.jajeem.core.design.account.StudentDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentDialog$3 -> com.jajeem.core.design.account.aN:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.StudentDialog$StudentTableFormat -> com.jajeem.core.design.account.aO:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.StudentList -> com.jajeem.core.design.account.aP:
    javax.swing.JPanel contentPanel -> a
    ca.odell.glazedlists.EventList studentList -> b
    ca.odell.glazedlists.swing.EventSelectionModel studentSelectionModel -> c
    com.jajeem.room.model.Course course -> d
    com.jajeem.core.service.StudentCourseService studentCourseService -> e
    void addStudents(ca.odell.glazedlists.EventList) -> a
    ca.odell.glazedlists.EventList getStudentList() -> a
    javax.swing.JPanel access$0(com.jajeem.core.design.account.StudentList) -> a
    ca.odell.glazedlists.swing.EventSelectionModel access$1(com.jajeem.core.design.account.StudentList) -> b
    com.jajeem.core.service.StudentCourseService access$2(com.jajeem.core.design.account.StudentList) -> c
com.jajeem.core.design.account.StudentList$1 -> com.jajeem.core.design.account.aQ:
    com.jajeem.core.design.account.StudentList val$frame -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentList$2 -> com.jajeem.core.design.account.aR:
    com.jajeem.core.design.account.StudentList this$0 -> a
    com.jajeem.room.model.Course val$course -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentList$3 -> com.jajeem.core.design.account.aS:
    com.jajeem.room.model.Course val$course -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.account.StudentList$4 -> com.jajeem.core.design.account.aT:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.StudentList$StudentTableFormat -> com.jajeem.core.design.account.aU:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.StudentQuizDialog -> com.jajeem.core.design.account.aV:
    javax.swing.JPanel contentPanel -> a
    ca.odell.glazedlists.EventList courseList -> f
    ca.odell.glazedlists.swing.EventSelectionModel courseSelectionModel -> g
    com.jajeem.core.model.Student student -> h
    com.jajeem.room.model.Course course -> i
    com.jajeem.core.service.StudentCourseService studentCourseService -> j
    com.alee.laf.text.WebTextField courseFilterTF -> k
com.jajeem.core.design.account.StudentQuizDialog$1 -> com.jajeem.core.design.account.aW:
    void getFilterStrings(java.util.List,java.lang.Object) -> getFilterStrings
com.jajeem.core.design.account.StudentQuizDialog$CourseTableFormat -> com.jajeem.core.design.account.aX:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isEditable(java.lang.Object,int) -> isEditable
    java.lang.Object getColumnValue(java.lang.Object,int) -> getColumnValue
    java.lang.Object setColumnValue(java.lang.Object,java.lang.Object,int) -> setColumnValue
com.jajeem.core.design.account.StudentsAndQuizListDialog -> com.jajeem.core.design.account.StudentsAndQuizListDialog:
    javax.swing.JPanel contentPanel -> a
    void main(java.lang.String[]) -> main
com.jajeem.core.design.account.StudentsAndQuizListDialog$1 -> com.jajeem.core.design.account.aY:
    com.jajeem.core.design.account.StudentsAndQuizListDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student -> com.jajeem.core.design.student.Student:
    javax.swing.JLabel lblNewLabel_1 -> b
    com.jajeem.util.CustomCloseButton buttonMin -> c
    com.jajeem.util.CustomCloseButton buttonClose -> d
    com.jajeem.core.design.ui.BaseStudentFrame frm -> a
    com.jajeem.core.design.ui.BaseStudentFrame jajeemProject -> e
    java.awt.Font font -> f
    com.jajeem.core.design.ui.CustomStudentButton buttonFileManager -> g
    com.jajeem.core.design.ui.CustomStudentButton buttonMoviePlayer -> h
    com.jajeem.core.design.ui.CustomStudentButton buttonRecording -> i
    com.jajeem.core.design.ui.CustomStudentButton buttonContactInstructor -> j
    com.jajeem.core.design.ui.CustomStudentButton buttonAccountManager -> k
    java.util.List chatList -> l
    org.jitsi.examples.AVReceiveOnly receiverOnly -> m
    org.jitsi.examples.AVSendOnly sendOnly -> n
    org.jitsi.examples.AVTransmit2 transmitter -> o
    org.jitsi.examples.AVTransmit2 conversationtransmitter -> p
    com.jajeem.share.service.VNCCaptureService vncViewer -> q
    com.jajeem.core.model.Student studentModel -> r
    com.jajeem.core.design.ui.CustomStudentButton recordButtonStatic -> s
    javax.swing.Timer timer -> t
    int countdown -> u
    void main(java.lang.String[]) -> main
    java.awt.Window getFrmJajeemProject() -> a
    java.util.List getChatList() -> b
    org.jitsi.examples.AVTransmit2 getTransmitter() -> c
    com.jajeem.share.service.VNCCaptureService getVncViewer() -> d
    void setVncViewer(com.jajeem.share.service.VNCCaptureService) -> a
    org.jitsi.examples.AVReceiveOnly getReceiverOnly() -> e
    void setReceiverOnly(org.jitsi.examples.AVReceiveOnly) -> a
    org.jitsi.examples.AVSendOnly getSendOnly() -> f
    void setSendOnly(org.jitsi.examples.AVSendOnly) -> a
    com.jajeem.core.model.Student getStudentModel() -> g
    void setStudentModel(com.jajeem.core.model.Student) -> a
    com.jajeem.core.design.ui.CustomStudentButton getRecordButtonStatic() -> h
    void setCountdown(int) -> a
    org.jitsi.examples.AVTransmit2 getConversationtransmitter() -> i
    int access$0() -> j
    void access$1(int) -> b
    javax.swing.JLabel access$2(com.jajeem.core.design.student.Student) -> a
    com.jajeem.core.design.ui.CustomStudentButton access$3(com.jajeem.core.design.student.Student) -> b
    com.jajeem.core.model.Student access$4() -> k
com.jajeem.core.design.student.Student$1 -> com.jajeem.core.design.student.a:
    void run() -> run
com.jajeem.core.design.student.Student$10 -> com.jajeem.core.design.student.b:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$2 -> com.jajeem.core.design.student.c:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$3 -> com.jajeem.core.design.student.d:
    com.jajeem.core.design.student.Student this$0 -> a
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
com.jajeem.core.design.student.Student$4 -> com.jajeem.core.design.student.e:
    com.jajeem.core.design.student.Student this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$5 -> com.jajeem.core.design.student.f:
    com.jajeem.core.design.student.Student this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$6 -> com.jajeem.core.design.student.g:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$7 -> com.jajeem.core.design.student.h:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$7$1 -> com.jajeem.core.design.student.i:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.student.Student$8 -> com.jajeem.core.design.student.j:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.Student$9 -> com.jajeem.core.design.student.k:
    com.jajeem.core.design.student.Student this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.StudentLogin -> com.jajeem.core.design.student.StudentLogin:
    java.lang.String serverIp -> g
    com.jajeem.util.CustomLoginFrame loginDialog -> h
    com.jajeem.util.KeyHook keyHook -> i
    com.jajeem.util.MouseHook mouseHook -> j
    java.lang.String name -> a
    com.jajeem.command.service.ServerService serverService -> k
    javax.swing.JTextField username -> b
    javax.swing.JPasswordField password -> c
    javax.swing.JTextField textField -> l
    javax.swing.JPasswordField textField_1 -> m
    void main(java.lang.String[]) -> main
    com.jajeem.util.KeyHook getKeyHook() -> a
    void setKeyHook(com.jajeem.util.KeyHook) -> a
    com.jajeem.command.service.ServerService getServerService() -> b
    com.jajeem.util.MouseHook getMouseHook() -> c
    void setMouseHook(com.jajeem.util.MouseHook) -> a
    void setLoginDialogVisible(boolean) -> a
    void setFieldsColor(java.awt.Color) -> a
    java.lang.String getServerIp() -> d
    void setServerIp(java.lang.String) -> a
    com.jajeem.util.CustomLoginFrame getLoginDialog() -> e
    java.lang.String access$0() -> f
com.jajeem.core.design.student.StudentLogin$1 -> com.jajeem.core.design.student.l:
    com.jajeem.core.design.student.StudentLogin this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.student.StudentLogin$2 -> com.jajeem.core.design.student.m:
    void run() -> run
com.jajeem.core.design.teacher.CustomLoadingPanel -> com.jajeem.core.design.teacher.a:
    java.awt.Image myImage -> a
    java.awt.image.BufferedImage originalImage -> b
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.core.design.teacher.CustomLoginButton -> com.jajeem.core.design.teacher.b:
    java.awt.image.BufferedImage background -> c
    java.awt.image.BufferedImage rollover -> d
    java.awt.image.BufferedImage selected -> e
    boolean isRollOver -> a
    boolean isPressed -> b
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.core.design.teacher.CustomLoginButton$1 -> com.jajeem.core.design.teacher.c:
    com.jajeem.core.design.teacher.CustomLoginButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.teacher.InstructorLogin -> com.jajeem.core.design.teacher.InstructorLogin:
    com.jajeem.ui.combobox.JajeemComboBox comboBox_lang -> g
    int posX -> a
    int posY -> b
    javax.swing.text.JTextComponent usernameTF -> c
    javax.swing.JPasswordField passwordTF -> d
    java.awt.Window frame -> e
    com.jajeem.room.service.RoomService roomService -> h
    javax.swing.JComboBox courseCombo -> i
    java.util.ArrayList courseList -> f
    com.jajeem.core.design.teacher.CustomLoginButton webButtonLogin -> j
    com.jajeem.core.design.teacher.CustomLoginButton webButtonSelect -> k
    void PerformLogin() -> a
    void main(java.lang.String[]) -> main
    javax.swing.JComboBox access$0(com.jajeem.core.design.teacher.InstructorLogin) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$1(com.jajeem.core.design.teacher.InstructorLogin) -> b
com.jajeem.core.design.teacher.InstructorLogin$1 -> com.jajeem.core.design.teacher.d:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorLogin$2 -> com.jajeem.core.design.teacher.e:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorLogin$3 -> com.jajeem.core.design.teacher.f:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.teacher.InstructorLogin$4 -> com.jajeem.core.design.teacher.g:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.teacher.InstructorLogin$5 -> com.jajeem.core.design.teacher.h:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorLogin$6 -> com.jajeem.core.design.teacher.i:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.teacher.InstructorLogin$7 -> com.jajeem.core.design.teacher.j:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    com.jajeem.util.CustomLoginFrame val$mainPanel -> b
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.teacher.InstructorLogin$8 -> com.jajeem.core.design.teacher.k:
    com.jajeem.core.design.teacher.InstructorLogin this$0 -> a
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
com.jajeem.core.design.teacher.InstructorLogin$9 -> com.jajeem.core.design.teacher.l:
    void run() -> run
com.jajeem.core.design.teacher.InstructorLogin$9$1 -> com.jajeem.core.design.teacher.m:
    java.lang.Object val$synchLock -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorLogin$9$1$1 -> com.jajeem.core.design.teacher.n:
    java.lang.Object val$synchLock -> a
    com.jajeem.core.design.teacher.LoadingDialog2 val$load -> b
    void run() -> run
com.jajeem.core.design.teacher.InstructorLogin$9$2 -> com.jajeem.core.design.teacher.o:
    java.lang.Object val$synchLock -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorLogin$9$2$1 -> com.jajeem.core.design.teacher.p:
    java.lang.Object val$synchLock -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoa -> com.jajeem.core.design.teacher.InstructorNoa:
    com.jajeem.core.design.ui.CustomTeacherFrame frame -> d
    java.util.Map studentList -> a
    java.util.ArrayList conversationPairs -> e
    java.util.ArrayList conversationIps -> f
    org.jscroll.JScrollDesktopPane desktopPaneScroll -> g
    com.alee.laf.panel.WebPanel centerPanel -> h
    com.alee.laf.table.WebTable studentListTable -> i
    com.jajeem.core.model.Instructor instructorModel -> j
    com.jajeem.room.model.Course courseModel -> k
    org.jitsi.examples.AVTransmit2 transmitter -> l
    org.jitsi.examples.AVReceiveOnly receiverOnly -> m
    org.jitsi.examples.AVSendOnly sendOnly -> n
    java.lang.String transmittingType -> o
    java.util.List chatList -> p
    com.jajeem.command.service.ServerService serverService -> q
    java.util.List groups -> r
    com.alee.laf.button.WebButton intercomButton -> s
    com.jajeem.util.CustomJList groupList -> t
    boolean modeling -> u
    java.util.ArrayList reportRunList -> b
    com.alee.laf.panel.WebPanel rightButtonPanel -> v
    java.awt.Font font -> w
    javax.swing.JLabel lblHour1 -> x
    javax.swing.JLabel lblHour2 -> y
    javax.swing.JLabel lblMin1 -> z
    javax.swing.JLabel lblMin2 -> A
    javax.swing.JLabel lblLogo -> B
    javax.swing.JLabel lblLogoText -> C
    javax.swing.ImageIcon _0Icon -> c
    javax.swing.ImageIcon _1Icon -> D
    javax.swing.ImageIcon _2Icon -> E
    javax.swing.ImageIcon _3Icon -> F
    javax.swing.ImageIcon _4Icon -> G
    javax.swing.ImageIcon _5Icon -> H
    javax.swing.ImageIcon _6Icon -> I
    javax.swing.ImageIcon _7Icon -> J
    javax.swing.ImageIcon _8Icon -> K
    javax.swing.ImageIcon _9Icon -> L
    javax.swing.ImageIcon _ddIcon -> M
    javax.swing.ImageIcon _ddIconScaled -> N
    void main(java.lang.String[]) -> main
    void initialize() -> A
    void LockAction() -> a
    void ListViewActionListener() -> b
    void GroupViewActionListener() -> c
    void ThumbViewActionListener() -> d
    org.jitsi.examples.AVTransmit2 getTransmitter() -> e
    java.util.List getChatList() -> f
    com.jajeem.command.service.ServerService getServerService() -> g
    void setServerService(com.jajeem.command.service.ServerService) -> a
    com.alee.laf.panel.WebPanel getCenterPanel() -> h
    void setCenterPanel(com.alee.laf.panel.WebPanel) -> a
    com.alee.laf.table.WebTable getStudentListTable() -> i
    void setStudentListTable(com.alee.laf.table.WebTable) -> a
    void setIntercomText(java.lang.String) -> a
    com.alee.laf.list.WebList getGroupList() -> j
    java.util.List getGroups() -> k
    java.util.ArrayList getAllStudentIPs() -> l
    org.jitsi.examples.AVReceiveOnly getReceiverOnly() -> m
    void setReceiverOnly(org.jitsi.examples.AVReceiveOnly) -> a
    org.jitsi.examples.AVSendOnly getSendOnly() -> n
    org.jscroll.widgets.RootDesktopPane getDesktopPane() -> o
    org.jscroll.JScrollDesktopPane getDesktopPaneScroll() -> p
    void setDesktopPaneScroll(org.jscroll.JScrollDesktopPane) -> a
    boolean isModeling() -> q
    void setModeling(boolean) -> a
    java.lang.String getTransmittingType() -> r
    void setTransmittingType(java.lang.String) -> b
    com.jajeem.core.model.Instructor getInstructorModel() -> s
    void setInstructorModel(com.jajeem.core.model.Instructor) -> a
    com.jajeem.room.model.Course getCourseModel() -> t
    void setCourseModel(com.jajeem.room.model.Course) -> a
    java.lang.String getStudentNameByIP(java.lang.String) -> c
    java.util.ArrayList getConversationPairs() -> u
    java.util.ArrayList getConversationIps() -> v
    com.jajeem.core.design.ui.CustomTeacherFrame access$0() -> w
    javax.swing.JLabel access$1(com.jajeem.core.design.teacher.InstructorNoa) -> a
    javax.swing.JLabel access$2(com.jajeem.core.design.teacher.InstructorNoa) -> b
    javax.swing.JLabel access$3(com.jajeem.core.design.teacher.InstructorNoa) -> c
    javax.swing.JLabel access$4(com.jajeem.core.design.teacher.InstructorNoa) -> d
    javax.swing.JLabel access$5(com.jajeem.core.design.teacher.InstructorNoa) -> e
    javax.swing.JLabel access$6(com.jajeem.core.design.teacher.InstructorNoa) -> f
    com.jajeem.command.service.ServerService access$7() -> x
    com.jajeem.util.CustomJList access$8() -> y
    java.util.List access$9() -> z
com.jajeem.core.design.teacher.InstructorNoa$1 -> com.jajeem.core.design.teacher.q:
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoa$10 -> com.jajeem.core.design.teacher.r:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$11 -> com.jajeem.core.design.teacher.s:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$12 -> com.jajeem.core.design.teacher.t:
    com.alee.laf.checkbox.WebCheckBox val$sendToAllWebCheckBox -> a
    com.alee.laf.text.WebTextField val$WebsiteTextField -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$13 -> com.jajeem.core.design.teacher.u:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$14 -> com.jajeem.core.design.teacher.v:
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.core.design.teacher.InstructorNoa$15 -> com.jajeem.core.design.teacher.w:
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.core.design.teacher.InstructorNoa$16 -> com.jajeem.core.design.teacher.x:
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> a
    com.alee.laf.combobox.WebComboBox val$reportComboBox -> b
    java.lang.String[] val$jasperFileNames -> c
    com.alee.laf.combobox.WebComboBox val$reportQuizComboBox -> d
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$17 -> com.jajeem.core.design.teacher.y:
    com.alee.laf.combobox.WebComboBox val$reportComboBox -> a
    com.alee.laf.combobox.WebComboBox val$listOfStudentsComboBox -> b
    com.alee.laf.combobox.WebComboBox val$reportQuizComboBox -> c
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.core.design.teacher.InstructorNoa$18 -> com.jajeem.core.design.teacher.z:
    long currentTime -> a
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> b
    java.util.HashMap val$clockIcons -> c
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    com.jajeem.core.design.teacher.InstructorNoa access$0(com.jajeem.core.design.teacher.InstructorNoa$18) -> a
com.jajeem.core.design.teacher.InstructorNoa$18$1 -> com.jajeem.core.design.teacher.A:
    com.jajeem.core.design.teacher.InstructorNoa$18 this$1 -> a
    java.util.HashMap val$clockIcons -> b
    java.lang.String val$Hour -> c
    java.lang.String val$Minute -> d
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoa$19 -> com.jajeem.core.design.teacher.B:
    java.text.DateFormat val$dateFormat -> a
    javax.swing.JLabel val$lblSystemTime -> b
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoa$19$1 -> com.jajeem.core.design.teacher.C:
    javax.swing.JLabel val$lblSystemTime -> a
    java.lang.String val$time -> b
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoa$2 -> com.jajeem.core.design.teacher.D:
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> a
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
com.jajeem.core.design.teacher.InstructorNoa$20 -> com.jajeem.core.design.teacher.E:
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.teacher.InstructorNoa$3 -> com.jajeem.core.design.teacher.F:
    com.alee.laf.rootpane.WebFrame frame -> a
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoa$4 -> com.jajeem.core.design.teacher.G:
    java.lang.String[] values -> a
    int getSize() -> getSize
    java.lang.Object getElementAt(int) -> getElementAt
com.jajeem.core.design.teacher.InstructorNoa$5 -> com.jajeem.core.design.teacher.H:
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$6 -> com.jajeem.core.design.teacher.I:
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$7 -> com.jajeem.core.design.teacher.J:
    com.jajeem.core.design.teacher.InstructorNoa this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$8 -> com.jajeem.core.design.teacher.K:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoa$9 -> com.jajeem.core.design.teacher.L:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil -> com.jajeem.core.design.teacher.M:
    com.jajeem.command.service.ServerServiceTimer serverServiceTimer -> h
    com.alee.managers.popup.WebPopup popup -> a
    java.util.List fileListModel -> b
    com.jajeem.quiz.design.alt.Quiz_Main quiz -> c
    com.jajeem.survey.design.alt.Survey_Main survey -> d
    com.jajeem.quiz.design.alt.Quiz_Main[] groupsQuizWindows -> e
    com.jajeem.survey.design.alt.Survey_Main[] groupsSurveyWindows -> f
    javax.swing.JInternalFrame previousFrame -> i
    java.lang.Thread _videoChat -> j
    java.lang.Object lock -> k
    javax.swing.JButton recorder_window -> l
    boolean callAllActive -> g
    void addEventsRightPanel(com.alee.laf.panel.WebPanel) -> a
    void addEventsBottomPanel$496a4323(com.alee.laf.panel.WebPanel) -> b
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
    java.util.Collection getPath(java.util.ArrayList) -> a
    void addEventsTopPanel(com.alee.laf.panel.WebPanel) -> c
    com.alee.laf.desktoppane.WebInternalFrame createFrame(org.jscroll.widgets.RootDesktopPane,java.lang.String,java.lang.String) -> a
    void internalFrameMouseClicked(java.awt.event.MouseEvent) -> a
    void LogoutActionListener() -> a
    void RecordActionListener() -> b
    void LockActionListener() -> c
    void ChatActionListener() -> d
    void MonitorActionListener() -> e
    void IntercomActionListener() -> f
    void SendFileActionListener() -> g
    void networkSetup() -> h
    java.awt.Component getActiveCard() -> i
    java.lang.String getSelectedStudentIp() -> j
    boolean getCallAllActive() -> k
    javax.swing.JButton getRecorder_Button() -> l
    void access$0(com.jajeem.core.design.teacher.InstructorNoaUtil,java.lang.Thread) -> a
    java.lang.Thread access$1(com.jajeem.core.design.teacher.InstructorNoaUtil) -> a
    void access$2(java.lang.String,java.lang.String) -> a
com.jajeem.core.design.teacher.InstructorNoaUtil$1 -> com.jajeem.core.design.teacher.N:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$10 -> com.jajeem.core.design.teacher.O:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$10$1 -> com.jajeem.core.design.teacher.P:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$11 -> com.jajeem.core.design.teacher.Q:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$12 -> com.jajeem.core.design.teacher.R:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$13 -> com.jajeem.core.design.teacher.S:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$14 -> com.jajeem.core.design.teacher.T:
    javax.swing.JButton val$button -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$14$1 -> com.jajeem.core.design.teacher.U:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$14$2 -> com.jajeem.core.design.teacher.V:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$14$3 -> com.jajeem.core.design.teacher.W:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$14$4 -> com.jajeem.core.design.teacher.X:
    java.lang.Process val$proc -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$15 -> com.jajeem.core.design.teacher.Y:
    java.lang.Class[] columnTypes -> a
    java.lang.Class getColumnClass(int) -> getColumnClass
com.jajeem.core.design.teacher.InstructorNoaUtil$16 -> com.jajeem.core.design.teacher.Z:
    com.alee.laf.table.WebTable val$programsList -> a
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoaUtil$17 -> com.jajeem.core.design.teacher.aa:
    com.jajeem.core.design.teacher.ProgramList fileChooser -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$18 -> com.jajeem.core.design.teacher.ab:
    com.alee.laf.list.WebList val$programsList -> a
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoaUtil$19 -> com.jajeem.core.design.teacher.ac:
    com.alee.laf.list.WebList val$programsList -> a
    com.alee.laf.checkbox.WebCheckBox val$sendToAll -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$2 -> com.jajeem.core.design.teacher.ad:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$20 -> com.jajeem.core.design.teacher.ae:
    com.alee.laf.list.DefaultListModel val$model -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$21 -> com.jajeem.core.design.teacher.af:
    com.alee.laf.list.WebList val$programsList -> a
    com.alee.laf.list.DefaultListModel val$model -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$22 -> com.jajeem.core.design.teacher.ag:
    com.alee.laf.slider.WebSlider val$slider1 -> a
    javax.swing.JButton val$button -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$23 -> com.jajeem.core.design.teacher.ah:
    javax.swing.JButton val$button -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$24 -> com.jajeem.core.design.teacher.ai:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$25 -> com.jajeem.core.design.teacher.aj:
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoaUtil$26 -> com.jajeem.core.design.teacher.ak:
    com.alee.laf.desktoppane.WebInternalFrame val$internalFrame -> a
    void internalFrameDeactivated(javax.swing.event.InternalFrameEvent) -> internalFrameDeactivated
    void internalFrameClosed(javax.swing.event.InternalFrameEvent) -> internalFrameClosed
    void internalFrameActivated(javax.swing.event.InternalFrameEvent) -> internalFrameActivated
com.jajeem.core.design.teacher.InstructorNoaUtil$27 -> com.jajeem.core.design.teacher.al:
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoaUtil$28 -> com.jajeem.core.design.teacher.am:
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
com.jajeem.core.design.teacher.InstructorNoaUtil$29 -> com.jajeem.core.design.teacher.an:
    com.alee.laf.menu.WebMenu val$menuItemConversations -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.teacher.InstructorNoaUtil$3 -> com.jajeem.core.design.teacher.ao:
    com.jajeem.core.design.teacher.InstructorNoaUtil this$0 -> a
    javax.swing.JButton val$button -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$3$1 -> com.jajeem.core.design.teacher.ap:
    javax.swing.JButton val$button -> a
    void run() -> run
com.jajeem.core.design.teacher.InstructorNoaUtil$30 -> com.jajeem.core.design.teacher.aq:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$31 -> com.jajeem.core.design.teacher.ar:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$32 -> com.jajeem.core.design.teacher.as:
    com.alee.laf.menu.WebMenu val$menuItemConversations -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.teacher.InstructorNoaUtil$32$1 -> com.jajeem.core.design.teacher.at:
    int val$index -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$33 -> com.jajeem.core.design.teacher.au:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$34 -> com.jajeem.core.design.teacher.av:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$35 -> com.jajeem.core.design.teacher.aw:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$36 -> com.jajeem.core.design.teacher.ax:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$37 -> com.jajeem.core.design.teacher.ay:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$38 -> com.jajeem.core.design.teacher.az:
    com.alee.laf.desktoppane.WebInternalFrame val$internalFrame -> a
    java.lang.String val$hostIp -> b
    java.lang.String val$hostName -> c
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$4 -> com.jajeem.core.design.teacher.aA:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$5 -> com.jajeem.core.design.teacher.aB:
    javax.swing.JButton val$button -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$6 -> com.jajeem.core.design.teacher.aC:
    com.alee.laf.panel.WebPanel val$rightButtonPanel -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$7 -> com.jajeem.core.design.teacher.aD:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$8 -> com.jajeem.core.design.teacher.aE:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.InstructorNoaUtil$9 -> com.jajeem.core.design.teacher.aF:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.LoadingDialog -> com.jajeem.core.design.teacher.LoadingDialog:
    javax.swing.ImageIcon myImage -> a
    void main(java.lang.String[]) -> main
    void paint(java.awt.Graphics) -> paint
com.jajeem.core.design.teacher.LoadingDialog$1 -> com.jajeem.core.design.teacher.aG:
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.core.design.teacher.LoadingDialog2 -> com.jajeem.core.design.teacher.LoadingDialog2:
    void main(java.lang.String[]) -> main
com.jajeem.core.design.teacher.ProgramList -> com.jajeem.core.design.teacher.ProgramList:
    com.alee.laf.list.WebList webList -> a
    javax.swing.JPanel contentPanel -> b
    void main(java.lang.String[]) -> main
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
    java.util.Collection getPath(java.util.ArrayList) -> a
    java.lang.String getSelectedFile() -> a
    com.alee.laf.list.WebList access$0(com.jajeem.core.design.teacher.ProgramList) -> a
    void access$1(com.jajeem.core.design.teacher.ProgramList,int) -> a
com.jajeem.core.design.teacher.ProgramList$1 -> com.jajeem.core.design.teacher.aH:
    com.jajeem.core.design.teacher.ProgramList this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.core.design.teacher.ProgramList$2 -> com.jajeem.core.design.teacher.aI:
    com.jajeem.core.design.teacher.ProgramList this$0 -> a
    com.alee.laf.list.DefaultListModel val$model -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.teacher.ProgramList$3 -> com.jajeem.core.design.teacher.aJ:
    com.jajeem.core.design.teacher.ProgramList this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.BaseStudentFrame -> com.jajeem.core.design.ui.BaseStudentFrame:
    int posX -> a
    int posY -> b
    javax.swing.JFrame mainFrame -> c
    com.jajeem.util.CustomPanel panelLogo -> d
    javax.swing.JPanel panelCnt -> e
    com.jajeem.util.CustomPanel panelClose -> f
    void main(java.lang.String[]) -> main
    java.awt.Container getLogoPanel() -> a
    java.awt.Container getContentPanel() -> b
    java.awt.Container getClosePanel() -> c
com.jajeem.core.design.ui.BaseStudentFrame$1 -> com.jajeem.core.design.ui.a:
    void run() -> run
com.jajeem.core.design.ui.BaseStudentFrame$2 -> com.jajeem.core.design.ui.b:
    com.jajeem.core.design.ui.BaseStudentFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.ui.BaseStudentFrame$3 -> com.jajeem.core.design.ui.c:
    com.jajeem.core.design.ui.BaseStudentFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.ui.BaseStudentFrame$4 -> com.jajeem.core.design.ui.d:
    com.jajeem.core.design.ui.BaseStudentFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.ui.BaseStudentFrame$5 -> com.jajeem.core.design.ui.e:
    com.jajeem.core.design.ui.BaseStudentFrame this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.core.design.ui.CustomMainButton -> com.jajeem.core.design.ui.f:
    int width -> c
    int height -> d
    int x -> e
    int y -> f
    java.awt.image.BufferedImage background -> g
    boolean isRollOver -> a
    boolean isPressed -> b
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.core.design.ui.CustomMainButton$2 -> com.jajeem.core.design.ui.g:
    com.jajeem.core.design.ui.CustomMainButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.ui.CustomMainPanel -> com.jajeem.core.design.ui.h:
    java.awt.image.BufferedImage originalImage -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.jajeem.core.design.ui.CustomStudentButton -> com.jajeem.core.design.ui.i:
    java.awt.image.BufferedImage background -> c
    java.awt.image.BufferedImage rollover -> d
    java.awt.image.BufferedImage selected -> e
    boolean isRollOver -> a
    boolean isPressed -> b
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.core.design.ui.CustomStudentButton$1 -> com.jajeem.core.design.ui.j:
    com.jajeem.core.design.ui.CustomStudentButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.core.design.ui.CustomStudentFrame -> com.jajeem.core.design.ui.CustomStudentFrame:
    int posX -> a
    int posY -> b
    javax.swing.JFrame mainFrame -> c
    com.jajeem.core.design.ui.CustomMainPanel panelMain -> d
    javax.swing.JPanel panelContent -> e
    void main(java.lang.String[]) -> main
com.jajeem.core.design.ui.CustomStudentFrame$1 -> com.jajeem.core.design.ui.k:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.CustomStudentFrame$2 -> com.jajeem.core.design.ui.l:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.CustomStudentFrame$3 -> com.jajeem.core.design.ui.m:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.ui.CustomStudentFrame$4 -> com.jajeem.core.design.ui.n:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.ui.CustomStudentFrame$5 -> com.jajeem.core.design.ui.o:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.ui.CustomStudentFrame$6 -> com.jajeem.core.design.ui.p:
    com.jajeem.core.design.ui.CustomStudentFrame this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.core.design.ui.CustomTeacherFrame -> com.jajeem.core.design.ui.CustomTeacherFrame:
    int posX -> a
    int posY -> b
    javax.swing.JFrame mainFrame -> c
    com.jajeem.core.design.ui.CustomMainPanel panelMain -> d
    javax.swing.JPanel panel1 -> e
    int oldHeight -> f
    int oldWidth -> g
    javax.swing.JPanel panel_1 -> h
    javax.swing.JPanel panel_2 -> i
    void main(java.lang.String[]) -> main
    java.awt.Container getTopContentPane() -> a
    java.awt.Container getMainContentPane() -> b
    int access$0(com.jajeem.core.design.ui.CustomTeacherFrame) -> a
    int access$1(com.jajeem.core.design.ui.CustomTeacherFrame) -> b
    void access$2(com.jajeem.core.design.ui.CustomTeacherFrame,int) -> a
    void access$3(com.jajeem.core.design.ui.CustomTeacherFrame,int) -> b
com.jajeem.core.design.ui.CustomTeacherFrame$1 -> com.jajeem.core.design.ui.q:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.CustomTeacherFrame$2 -> com.jajeem.core.design.ui.r:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.CustomTeacherFrame$3 -> com.jajeem.core.design.ui.s:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.core.design.ui.CustomTeacherFrame$4 -> com.jajeem.core.design.ui.t:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.core.design.ui.CustomTeacherFrame$5 -> com.jajeem.core.design.ui.u:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.core.design.ui.CustomTeacherFrame$6 -> com.jajeem.core.design.ui.v:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.core.design.ui.CustomTeacherFrame$7 -> com.jajeem.core.design.ui.w:
    com.jajeem.core.design.ui.CustomTeacherFrame this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.core.model.Instructor -> com.jajeem.core.b.a:
com.jajeem.core.model.Student -> com.jajeem.core.b.b:
com.jajeem.core.model.StudentCourse -> com.jajeem.core.b.c:
    int studentId -> a
    int courseId -> b
    int score -> c
    int getStudentId() -> a
    void setStudentId(int) -> a
    int getCourseId() -> b
    void setCourseId(int) -> b
    int getScore() -> c
    void setScore(int) -> c
com.jajeem.core.model.User -> com.jajeem.core.b.d:
    int id -> a
    java.lang.String fullName -> b
    java.lang.String firstName -> c
    java.lang.String middleName -> d
    java.lang.String lastName -> e
    java.lang.String username -> f
    java.lang.String password -> g
    java.lang.String language -> h
    int getId() -> a
    void setId(int) -> a
    java.lang.String getFirstName() -> b
    void setFirstName(java.lang.String) -> a
    java.lang.String getMiddleName() -> c
    void setMiddleName(java.lang.String) -> b
    java.lang.String getLastName() -> d
    void setLastName(java.lang.String) -> c
    java.lang.String getUsername() -> e
    void setUsername(java.lang.String) -> d
    java.lang.String getPassword() -> f
    void setPassword(java.lang.String) -> e
    java.lang.String getLanguage() -> g
    void setLanguage(java.lang.String) -> f
    java.lang.String getFullName() -> h
    void setFullName(java.lang.String) -> g
com.jajeem.core.service.InstructorService -> com.jajeem.core.c.a:
    com.jajeem.core.dao.h2.InstructorDAO instructordao -> a
    boolean authenticate(java.lang.String,char[]) -> a
    com.jajeem.core.model.Instructor create(com.jajeem.core.model.Instructor) -> a
    com.jajeem.core.model.Instructor get(java.lang.String) -> a
    com.jajeem.core.model.Instructor getById(int) -> a
    java.util.ArrayList getByCourseId(int) -> b
    boolean update(com.jajeem.core.model.Instructor) -> b
    boolean delete(com.jajeem.core.model.Instructor) -> c
    java.util.ArrayList list() -> a
com.jajeem.core.service.StudentCourseService -> com.jajeem.core.c.b:
    com.jajeem.core.dao.h2.StudentCourseDAO studentCourseDAO -> a
    com.jajeem.core.model.StudentCourse create(com.jajeem.core.model.StudentCourse) -> a
    boolean delete(int,int) -> a
    java.util.ArrayList getcourseStudentsById(int) -> a
    java.util.ArrayList getStudentCoursesById(int) -> b
    java.util.ArrayList getStudentQuizesById(int,int) -> b
com.jajeem.core.service.StudentService -> com.jajeem.core.c.c:
    com.jajeem.core.dao.h2.StudentDAO studentDAO -> a
    boolean authenticate(java.lang.String,char[]) -> a
    com.jajeem.core.model.Student get(java.lang.String) -> a
    com.jajeem.core.model.Student create(com.jajeem.core.model.Student) -> a
    boolean update(com.jajeem.core.model.Student) -> b
    boolean delete(com.jajeem.core.model.Student) -> c
    java.util.ArrayList list() -> a
com.jajeem.events.FileTransferEvent -> com.jajeem.a.a:
    javax.swing.event.EventListenerList listenerList -> a
    void addEventListener$30773969(com.jajeem.events.FileTransferEventListener) -> a
    void fireSuccess(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void fireFailure(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fireProgress(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fireFileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fireAcceptFileRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fireRejectFileRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> f
com.jajeem.events.FileTransferEventListener -> com.jajeem.a.b:
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void fail$dc9f86e(java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
com.jajeem.events.FileTransferObject -> com.jajeem.a.c:
    double progressValue -> a
    java.net.Socket clientSocket -> b
    java.lang.String fileName -> c
    void setProgressValue(double) -> a
    double getProgressValue() -> a
    java.net.Socket getClientSocket() -> b
    void setClientSocket(java.net.Socket) -> a
    java.lang.String getFileName() -> c
    void setFileName(java.lang.String) -> a
com.jajeem.events.QuizEvent -> com.jajeem.a.d:
    javax.swing.event.EventListenerList listenerList -> b
    java.util.UUID quizId -> a
    void addEventListener(com.jajeem.events.QuizEventListener) -> a
    void fireResponseEvent(com.jajeem.events.QuizResponse) -> a
    void fireQuizFinished(com.jajeem.events.QuizFinished) -> a
com.jajeem.events.QuizEventListener -> com.jajeem.a.e:
    void questionAnswered(com.jajeem.events.QuizResponse) -> a
    void quizFinished(com.jajeem.events.QuizFinished) -> a
    java.util.UUID getQuizId() -> a
com.jajeem.events.QuizFinished -> com.jajeem.a.f:
    com.jajeem.quiz.model.Run quizRun -> a
    com.jajeem.quiz.model.Run getQuizRun() -> a
    void setQuizRun(com.jajeem.quiz.model.Run) -> a
com.jajeem.events.QuizResponse -> com.jajeem.a.g:
    com.jajeem.core.model.Student student -> a
    com.jajeem.quiz.model.Question question -> b
    com.jajeem.quiz.model.Run quizRun -> c
    int receivingPort -> d
    com.jajeem.core.model.Student getStudent() -> a
    void setStudent(com.jajeem.core.model.Student) -> a
    com.jajeem.quiz.model.Question getQuestion() -> b
    void setQuestion(com.jajeem.quiz.model.Question) -> a
    com.jajeem.quiz.model.Run getQuizRun() -> c
    void setQuizRun(com.jajeem.quiz.model.Run) -> a
    void setListeningPort(int) -> a
    int getListeningPort() -> d
com.jajeem.events.SurveyEvent -> com.jajeem.a.h:
    javax.swing.event.EventListenerList listenerList -> a
    void addEventListener(com.jajeem.events.SurveyEventListener) -> a
    void fireResponseEvent(com.jajeem.events.SurveyResponse) -> a
    void fireSurveyFinished(com.jajeem.events.SurveyFinished) -> a
com.jajeem.events.SurveyEventListener -> com.jajeem.a.i:
    void questionAnswered(com.jajeem.events.SurveyResponse) -> a
    void surveyFinished(com.jajeem.events.SurveyFinished) -> a
com.jajeem.events.SurveyFinished -> com.jajeem.a.j:
    com.jajeem.survey.model.Run surveyRun -> a
    com.jajeem.survey.model.Run getSurveyRun() -> a
    void setSurveyRun(com.jajeem.survey.model.Run) -> a
com.jajeem.events.SurveyResponse -> com.jajeem.a.k:
    com.jajeem.core.model.Student student -> a
    com.jajeem.survey.model.Question question -> b
    int listenPort -> c
    com.jajeem.core.model.Student getStudent() -> a
    void setStudent(com.jajeem.core.model.Student) -> a
    com.jajeem.survey.model.Question getQuestion() -> b
    void setQuestion(com.jajeem.survey.model.Question) -> a
    int getListeningPort() -> c
    void setListeningPort(int) -> a
com.jajeem.exception.JajeemExceptionHandler -> com.jajeem.b.a:
    org.apache.log4j.Logger logger -> a
    void logError(java.lang.Exception) -> a
    void logError(java.lang.Exception,java.lang.Class) -> a
    void logMessage(java.lang.Object) -> a
com.jajeem.exception.VideoConnectionException -> com.jajeem.b.b:
com.jajeem.filemanager.InstructorProgressWindow -> com.jajeem.filemanager.InstructorProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
com.jajeem.filemanager.InstructorProgressWindow$1 -> com.jajeem.filemanager.a:
    com.jajeem.filemanager.InstructorProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.InstructorServer -> com.jajeem.filemanager.InstructorServer:
    long requestNumber -> a
    com.jajeem.events.FileTransferEvent fileEvents -> b
    void Startup() -> a
    void main(java.lang.String[]) -> main
    void access$0(com.jajeem.filemanager.InstructorServer) -> a
    void access$1(com.jajeem.filemanager.InstructorServer) -> b
com.jajeem.filemanager.InstructorServer$1 -> com.jajeem.filemanager.b:
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
com.jajeem.filemanager.InstructorServer$1$1 -> com.jajeem.filemanager.c:
    java.net.Socket val$client -> a
    com.jajeem.events.FileTransferObject val$evt -> b
    com.jajeem.filemanager.InstructorProgressWindow val$progwin -> c
    void run() -> run
com.jajeem.filemanager.InstructorServer$2 -> com.jajeem.filemanager.d:
    com.jajeem.filemanager.InstructorServer this$0 -> a
    void run() -> run
com.jajeem.filemanager.InstructorServer$3 -> com.jajeem.filemanager.e:
    com.jajeem.filemanager.InstructorServer this$0 -> a
    void run() -> run
com.jajeem.filemanager.client.AssignmentTimer -> com.jajeem.filemanager.client.AssignmentTimer:
    javax.swing.JPanel contentPane -> a
    javax.swing.Timer timer -> b
    long remaining -> c
    long lastUpdate -> d
    com.alee.laf.label.WebLabel webLabel -> e
    com.jajeem.filemanager.client.AssignmentTimer MainFrame -> f
    void main(java.lang.String[]) -> main
    void start(java.lang.String) -> a
    long access$0(com.jajeem.filemanager.client.AssignmentTimer) -> a
    long access$1(com.jajeem.filemanager.client.AssignmentTimer) -> b
    void access$2(com.jajeem.filemanager.client.AssignmentTimer,long) -> a
    void access$3(com.jajeem.filemanager.client.AssignmentTimer,long) -> b
    com.alee.laf.label.WebLabel access$4(com.jajeem.filemanager.client.AssignmentTimer) -> c
    javax.swing.Timer access$5(com.jajeem.filemanager.client.AssignmentTimer) -> d
    com.jajeem.filemanager.client.AssignmentTimer access$6(com.jajeem.filemanager.client.AssignmentTimer) -> e
com.jajeem.filemanager.client.AssignmentTimer$1 -> com.jajeem.filemanager.client.a:
    void run() -> run
com.jajeem.filemanager.client.AssignmentTimer$2 -> com.jajeem.filemanager.client.b:
    com.jajeem.filemanager.client.AssignmentTimer this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.AssignmentTimer$2$1 -> com.jajeem.filemanager.client.c:
    void run() -> run
com.jajeem.filemanager.client.ClientFileInbox -> com.jajeem.filemanager.client.d:
    com.alee.laf.table.WebTable webTable -> a
    com.alee.laf.button.WebButton wbtnOpen -> b
    com.alee.laf.button.WebButton wbtnRefresh -> c
    com.jajeem.events.FileTransferEvent fileEvents -> d
    java.util.ArrayList fileList -> e
    java.util.ArrayList files -> f
    void PopulateInbox() -> a
    java.util.ArrayList access$0(com.jajeem.filemanager.client.ClientFileInbox) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.filemanager.client.ClientFileInbox) -> b
    void access$2(com.jajeem.filemanager.client.ClientFileInbox) -> c
    java.util.ArrayList access$3(com.jajeem.filemanager.client.ClientFileInbox) -> d
com.jajeem.filemanager.client.ClientFileInbox$1 -> com.jajeem.filemanager.client.e:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.client.ClientFileInbox$2 -> com.jajeem.filemanager.client.f:
    com.jajeem.filemanager.client.ClientFileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileInbox$3 -> com.jajeem.filemanager.client.g:
    com.jajeem.filemanager.client.ClientFileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileInbox$4 -> com.jajeem.filemanager.client.h:
    com.jajeem.filemanager.client.ClientFileInbox this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.client.ClientFileManagerMain -> com.jajeem.filemanager.client.ClientFileManagerMain:
    com.jajeem.filemanager.client.ClientFileSendTab fileSendTab -> d
    com.jajeem.filemanager.client.ClientFileInbox fileInboxTab -> e
    com.alee.laf.tabbedpane.WebTabbedPane webTabbedPane -> f
    void main(java.lang.String[]) -> main
com.jajeem.filemanager.client.ClientFileManagerMain$1 -> com.jajeem.filemanager.client.i:
    void run() -> run
com.jajeem.filemanager.client.ClientFileManagerMain$2 -> com.jajeem.filemanager.client.j:
    com.jajeem.filemanager.client.ClientFileManagerMain this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileSendTab -> com.jajeem.filemanager.client.k:
    com.alee.laf.table.WebTable webTable -> a
    com.alee.laf.button.WebButton wbtnBrowse -> b
    com.alee.laf.button.WebButton wbtnSend -> c
    com.alee.laf.button.WebButton wbtnClear -> d
    com.jajeem.filemanager.client.ClientFileSendTab currentPanel -> e
    java.util.ArrayList fileNames -> f
    com.jajeem.events.FileTransferEvent fileTransferEvent -> g
    int currentIndex -> h
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
    java.util.Collection getPath(java.util.ArrayList) -> a
    com.jajeem.filemanager.client.ClientFileSendTab access$0(com.jajeem.filemanager.client.ClientFileSendTab) -> a
    java.util.ArrayList access$1(com.jajeem.filemanager.client.ClientFileSendTab) -> b
    com.alee.laf.button.WebButton access$2(com.jajeem.filemanager.client.ClientFileSendTab) -> c
    com.alee.laf.button.WebButton access$3(com.jajeem.filemanager.client.ClientFileSendTab) -> d
    com.alee.laf.table.WebTable access$4(com.jajeem.filemanager.client.ClientFileSendTab) -> e
    void access$5(com.jajeem.filemanager.client.ClientFileSendTab,int) -> a
    int access$6(com.jajeem.filemanager.client.ClientFileSendTab) -> f
com.jajeem.filemanager.client.ClientFileSendTab$1 -> com.jajeem.filemanager.client.l:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.client.ClientFileSendTab$2 -> com.jajeem.filemanager.client.m:
    com.jajeem.filemanager.client.ClientFileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileSendTab$3 -> com.jajeem.filemanager.client.n:
    com.jajeem.filemanager.client.ClientFileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileSendTab$4 -> com.jajeem.filemanager.client.o:
    com.jajeem.filemanager.client.ClientFileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.client.ClientFileSendTab$5 -> com.jajeem.filemanager.client.p:
    com.jajeem.filemanager.client.ClientFileSendTab this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fail$dc9f86e(java.lang.Class) -> a
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
com.jajeem.filemanager.client.ClientFileSendTab$6 -> com.jajeem.filemanager.client.q:
    java.io.File val$file -> a
    com.jajeem.filemanager.client.ClientSendFileProgressWindow val$progwin -> b
    void run() -> run
com.jajeem.filemanager.client.ClientFileServer -> com.jajeem.filemanager.client.ClientFileServer:
    void Startup() -> a
    void StartServer() -> b
    void main(java.lang.String[]) -> main
com.jajeem.filemanager.client.ClientFileServer$1 -> com.jajeem.filemanager.client.r:
    java.net.Socket val$client -> a
    com.jajeem.filemanager.client.ClientProgressWindow val$progwin -> b
    void run() -> run
com.jajeem.filemanager.client.ClientProgressWindow -> com.jajeem.filemanager.client.ClientProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
com.jajeem.filemanager.client.ClientProgressWindow$1 -> com.jajeem.filemanager.client.s:
    com.jajeem.filemanager.client.ClientProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.client.ClientSendFileProgressWindow -> com.jajeem.filemanager.client.ClientSendFileProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
com.jajeem.filemanager.client.ClientSendFileProgressWindow$1 -> com.jajeem.filemanager.client.t:
    com.jajeem.filemanager.client.ClientSendFileProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.client.Test -> com.jajeem.filemanager.client.Test:
    void main(java.lang.String[]) -> main
com.jajeem.filemanager.client.Test$1 -> com.jajeem.filemanager.client.u:
    void run() -> run
com.jajeem.filemanager.design.CustomFileButton -> com.jajeem.filemanager.design.a:
    java.awt.image.BufferedImage background -> c
    boolean isRollOver -> a
    boolean isPressed -> b
    java.lang.String uri -> d
    java.awt.Image scaledInstance -> e
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.filemanager.design.CustomFileButton$1 -> com.jajeem.filemanager.design.b:
    com.jajeem.filemanager.design.CustomFileButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.filemanager.design.FileAssignmentProgressWindow -> com.jajeem.filemanager.design.FileAssignmentProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
    void reset() -> a
com.jajeem.filemanager.design.FileAssignmentProgressWindow$1 -> com.jajeem.filemanager.design.c:
    com.jajeem.filemanager.design.FileAssignmentProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.design.FileAssignmentTab -> com.jajeem.filemanager.design.d:
    com.alee.laf.table.WebTable webTable -> a
    com.jajeem.filemanager.design.CustomFileButton wbtnBrowse -> b
    com.jajeem.filemanager.design.CustomFileButton wbtnClear -> c
    com.jajeem.filemanager.design.CustomFileButton wbtnSend -> d
    java.util.ArrayList fileNames -> e
    com.jajeem.events.FileTransferEvent fileTransferEvent -> f
    com.jajeem.filemanager.design.FileManagerMain parentFrame -> g
    void SendFileAssignmentCMD(java.lang.String,java.lang.String) -> a
    com.jajeem.filemanager.design.FileAssignmentTab access$0(com.jajeem.filemanager.design.FileAssignmentTab) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.filemanager.design.FileAssignmentTab) -> b
    java.util.ArrayList access$2(com.jajeem.filemanager.design.FileAssignmentTab) -> c
    com.jajeem.filemanager.design.CustomFileButton access$3(com.jajeem.filemanager.design.FileAssignmentTab) -> d
    com.jajeem.filemanager.design.CustomFileButton access$4(com.jajeem.filemanager.design.FileAssignmentTab) -> e
    com.jajeem.filemanager.design.FileManagerMain access$5(com.jajeem.filemanager.design.FileAssignmentTab) -> f
com.jajeem.filemanager.design.FileAssignmentTab$1 -> com.jajeem.filemanager.design.e:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.design.FileAssignmentTab$2 -> com.jajeem.filemanager.design.f:
    com.jajeem.filemanager.design.FileAssignmentTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileAssignmentTab$3 -> com.jajeem.filemanager.design.g:
    com.jajeem.filemanager.design.FileAssignmentTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileAssignmentTab$4 -> com.jajeem.filemanager.design.h:
    com.jajeem.filemanager.design.FileAssignmentTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileAssignmentTab$5 -> com.jajeem.filemanager.design.i:
    com.jajeem.filemanager.design.FileAssignmentTab this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fail$dc9f86e(java.lang.Class) -> a
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    com.jajeem.filemanager.design.FileAssignmentTab access$0(com.jajeem.filemanager.design.FileAssignmentTab$5) -> a
com.jajeem.filemanager.design.FileAssignmentTab$5$1 -> com.jajeem.filemanager.design.j:
    javax.swing.Timer timer -> c
    long remaining -> d
    long lastUpdate -> e
    java.lang.String timetemp -> a
    javax.swing.table.DefaultTableModel model -> b
    com.jajeem.filemanager.design.FileAssignmentTab$5 this$1 -> f
    java.lang.String val$time -> g
    int val$currentrow -> h
    void run() -> run
    long access$0(com.jajeem.filemanager.design.FileAssignmentTab$5$1) -> a
    long access$1(com.jajeem.filemanager.design.FileAssignmentTab$5$1) -> b
    void access$2(com.jajeem.filemanager.design.FileAssignmentTab$5$1,long) -> a
    void access$3(com.jajeem.filemanager.design.FileAssignmentTab$5$1,long) -> b
    javax.swing.Timer access$4(com.jajeem.filemanager.design.FileAssignmentTab$5$1) -> c
    com.jajeem.filemanager.design.FileAssignmentTab$5 access$5(com.jajeem.filemanager.design.FileAssignmentTab$5$1) -> d
com.jajeem.filemanager.design.FileAssignmentTab$5$1$1 -> com.jajeem.filemanager.design.k:
    com.jajeem.filemanager.design.FileAssignmentTab$5$1 this$2 -> a
    int val$currentrow -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileAssignmentTab$6 -> com.jajeem.filemanager.design.l:
    java.io.File val$file -> a
    com.jajeem.filemanager.design.FileAssignmentProgressWindow val$progwin -> b
    void run() -> run
com.jajeem.filemanager.design.FileCollect -> com.jajeem.filemanager.design.m:
    com.jajeem.filemanager.design.CustomFileButton wbtnOpen -> a
    com.jajeem.filemanager.design.CustomFileButton wbtnDeleteCollectedFiles -> b
    com.jajeem.filemanager.design.CustomFileButton wbtnCollectFiles -> c
    com.jajeem.events.FileTransferEvent fileEvent -> d
    java.util.ArrayList files -> e
    com.alee.laf.table.WebTable webTable -> f
    void CollectFiles() -> a
    java.util.ArrayList access$0(com.jajeem.filemanager.design.FileCollect) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.filemanager.design.FileCollect) -> b
    com.jajeem.filemanager.design.CustomFileButton access$2(com.jajeem.filemanager.design.FileCollect) -> c
    com.jajeem.filemanager.design.CustomFileButton access$3(com.jajeem.filemanager.design.FileCollect) -> d
com.jajeem.filemanager.design.FileCollect$1 -> com.jajeem.filemanager.design.n:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.design.FileCollect$2 -> com.jajeem.filemanager.design.o:
    com.jajeem.filemanager.design.FileCollect this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileCollect$3 -> com.jajeem.filemanager.design.p:
    com.jajeem.filemanager.design.FileCollect this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileCollect$4 -> com.jajeem.filemanager.design.q:
    com.jajeem.filemanager.design.FileCollect this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileCollect$5 -> com.jajeem.filemanager.design.r:
    com.jajeem.filemanager.design.FileCollect this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.design.FileInbox -> com.jajeem.filemanager.design.s:
    com.jajeem.filemanager.design.CustomFileButton wbtnRefresh -> a
    com.jajeem.filemanager.design.CustomFileButton wbtnDismissAll -> b
    com.jajeem.filemanager.design.CustomFileButton wbtnReject -> c
    com.jajeem.filemanager.design.CustomFileButton wbtnAccept -> d
    com.alee.laf.table.WebTable webTable -> e
    com.jajeem.events.FileTransferEvent fileEvent -> f
    java.util.ArrayList fileSendRequestList -> g
    void SaveRequests() -> a
    void access$0(com.jajeem.filemanager.design.FileInbox) -> a
    java.util.ArrayList access$1(com.jajeem.filemanager.design.FileInbox) -> b
    com.alee.laf.table.WebTable access$2(com.jajeem.filemanager.design.FileInbox) -> c
    com.jajeem.filemanager.design.CustomFileButton access$3(com.jajeem.filemanager.design.FileInbox) -> d
    com.jajeem.filemanager.design.CustomFileButton access$4(com.jajeem.filemanager.design.FileInbox) -> e
    com.jajeem.filemanager.design.CustomFileButton access$5(com.jajeem.filemanager.design.FileInbox) -> f
com.jajeem.filemanager.design.FileInbox$1 -> com.jajeem.filemanager.design.t:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.design.FileInbox$2 -> com.jajeem.filemanager.design.u:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void run() -> run
com.jajeem.filemanager.design.FileInbox$3 -> com.jajeem.filemanager.design.v:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileInbox$4 -> com.jajeem.filemanager.design.w:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileInbox$5 -> com.jajeem.filemanager.design.x:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileInbox$6 -> com.jajeem.filemanager.design.y:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileInbox$7 -> com.jajeem.filemanager.design.z:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.filemanager.design.FileInbox$8 -> com.jajeem.filemanager.design.A:
    com.jajeem.filemanager.design.FileInbox this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fail$dc9f86e(java.lang.Class) -> a
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
com.jajeem.filemanager.design.FileManagerBase -> com.jajeem.filemanager.design.B:
    com.jajeem.filemanager.design.CustomFileButton customFileCloseButton -> d
    com.jajeem.util.CustomPanel panel -> e
    int posX -> a
    int posY -> b
    javax.swing.JFrame mainFrame -> c
    javax.swing.JPanel panelContent -> f
    java.awt.Container getMainContentPane() -> a
    javax.swing.JButton getCloseButton() -> b
com.jajeem.filemanager.design.FileManagerBase$1 -> com.jajeem.filemanager.design.C:
    com.jajeem.filemanager.design.FileManagerBase this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.filemanager.design.FileManagerBase$2 -> com.jajeem.filemanager.design.D:
    com.jajeem.filemanager.design.FileManagerBase this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.filemanager.design.FileManagerBase$3 -> com.jajeem.filemanager.design.E:
    com.jajeem.filemanager.design.FileManagerBase this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.filemanager.design.FileManagerMain -> com.jajeem.filemanager.design.FileManagerMain:
    com.jajeem.filemanager.design.FileSendTab fileSendTab -> d
    com.jajeem.filemanager.design.FileCollect fileCollectTab -> e
    com.jajeem.filemanager.design.FileInbox fileInboxTab -> f
    com.jajeem.filemanager.design.FileAssignmentTab fileAssignmentTab -> g
    com.alee.laf.tabbedpane.WebTabbedPane webTabbedPane -> h
    void invokeFileCollect() -> c
    void main(java.lang.String[]) -> main
    com.jajeem.filemanager.design.FileInbox access$0(com.jajeem.filemanager.design.FileManagerMain) -> a
com.jajeem.filemanager.design.FileManagerMain$1 -> com.jajeem.filemanager.design.F:
    com.jajeem.filemanager.design.FileManagerMain this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.jajeem.filemanager.design.FileManagerMain$2 -> com.jajeem.filemanager.design.G:
    com.jajeem.filemanager.design.FileManagerMain this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileSendProgressWindow -> com.jajeem.filemanager.design.FileSendProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
    void reset() -> a
com.jajeem.filemanager.design.FileSendProgressWindow$1 -> com.jajeem.filemanager.design.H:
    com.jajeem.filemanager.design.FileSendProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.filemanager.design.FileSendTab -> com.jajeem.filemanager.design.I:
    com.alee.laf.table.WebTable webTable -> a
    com.jajeem.filemanager.design.CustomFileButton wbtnSend -> b
    com.jajeem.filemanager.design.CustomFileButton wbtnClear -> c
    com.jajeem.filemanager.design.CustomFileButton wbtnBrowse -> d
    com.jajeem.filemanager.design.FileSendTab currentPanel -> e
    java.util.ArrayList fileNames -> f
    com.jajeem.events.FileTransferEvent fileTransferEvent -> g
    int currentIndex -> h
    com.alee.laf.checkbox.WebCheckBox chckbxSendToAll -> i
    java.util.ArrayList getDirectoryContent(java.io.File) -> a
    java.util.Collection getPath(java.util.ArrayList) -> a
    com.jajeem.filemanager.design.FileSendTab access$0(com.jajeem.filemanager.design.FileSendTab) -> a
    java.util.ArrayList access$1(com.jajeem.filemanager.design.FileSendTab) -> b
    com.jajeem.filemanager.design.CustomFileButton access$2(com.jajeem.filemanager.design.FileSendTab) -> c
    com.jajeem.filemanager.design.CustomFileButton access$3(com.jajeem.filemanager.design.FileSendTab) -> d
    com.alee.laf.table.WebTable access$4(com.jajeem.filemanager.design.FileSendTab) -> e
    void access$5(com.jajeem.filemanager.design.FileSendTab,int) -> a
    int access$6(com.jajeem.filemanager.design.FileSendTab) -> f
    com.alee.laf.checkbox.WebCheckBox access$7(com.jajeem.filemanager.design.FileSendTab) -> g
com.jajeem.filemanager.design.FileSendTab$1 -> com.jajeem.filemanager.design.J:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.filemanager.design.FileSendTab$2 -> com.jajeem.filemanager.design.K:
    com.jajeem.filemanager.design.FileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileSendTab$3 -> com.jajeem.filemanager.design.L:
    com.jajeem.filemanager.design.FileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileSendTab$4 -> com.jajeem.filemanager.design.M:
    com.jajeem.filemanager.design.FileSendTab this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.filemanager.design.FileSendTab$5 -> com.jajeem.filemanager.design.N:
    com.jajeem.filemanager.design.FileSendTab this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fail$dc9f86e(java.lang.Class) -> a
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
com.jajeem.filemanager.design.FileSendTab$6 -> com.jajeem.filemanager.design.O:
    com.jajeem.filemanager.design.FileSendTab this$0 -> a
    com.jajeem.filemanager.design.FileSendProgressWindow val$progwin -> b
    java.io.File val$file -> c
    void run() -> run
com.jajeem.filemanager.design.Test -> com.jajeem.filemanager.design.Test:
    void main(java.lang.String[]) -> main
com.jajeem.filemanager.design.Test$1 -> com.jajeem.filemanager.design.P:
    void run() -> run
com.jajeem.groupwork.model.Group -> com.jajeem.c.a.a:
    int id -> a
    java.lang.String name -> b
    java.lang.String color -> c
    java.util.List StudentIps -> d
    java.util.List StudentNames -> e
    int getId() -> a
    java.lang.String getName() -> b
    java.util.List getStudentIps() -> c
    java.util.List getStudentNames() -> d
    java.lang.String getColor() -> e
com.jajeem.licensing.ActivationCode -> com.jajeem.licensing.a:
    java.lang.String activationCode -> a
    java.util.HashMap licenseInfo -> b
    void validate() -> a
    byte[] decrypt(byte[]) -> a
    byte[] encrypt(java.lang.String) -> a
    java.lang.String getSecureHashKey() -> b
    java.lang.String convertByteToString(byte[]) -> b
com.jajeem.licensing.HardwareKey -> com.jajeem.licensing.b:
    java.lang.String hardwareKey -> a
    java.lang.String getHardwareKeyString() -> a
com.jajeem.licensing.InvalidActivationKey -> com.jajeem.licensing.c:
com.jajeem.licensing.License -> com.jajeem.licensing.d:
    java.lang.String filePath -> a
    java.util.HashMap licenseInfo -> b
    com.jajeem.licensing.LicenseValidationContext context -> c
    boolean initialized -> d
    boolean isActivated -> e
    void createRegisteryKey(java.lang.String) -> a
    java.util.HashMap getLicenseInfo() -> a
    com.jajeem.licensing.License initLicense() -> b
    com.jajeem.licensing.License validate() -> c
    boolean isActivated() -> d
    void activateOnline(java.lang.String,java.lang.String,java.lang.String) -> a
    void saveLicenseInfo() -> e
com.jajeem.licensing.LicenseFrame -> com.jajeem.licensing.LicenseFrame:
    javax.swing.JPanel contentPane -> a
    javax.swing.JTextField textField_Activation -> b
    javax.swing.JTextField textField_Serial -> c
    javax.swing.JTextField textField_Hardware -> d
    javax.swing.JTextField textField_name -> e
    javax.swing.JTextField textField_company -> f
    javax.swing.JTextField textField_phone -> g
    javax.swing.JLabel lblTimeleft -> h
    javax.swing.JLabel lblVersion -> i
    void main(java.lang.String[]) -> main
    void setSerial(java.lang.String) -> a
    void setHardwareKey(java.lang.String) -> b
    void setActivationKey(java.lang.String) -> c
    void setCompany(java.lang.String) -> d
    void setPhone(java.lang.String) -> e
    void setLicensorName(java.lang.String) -> f
    void setTimeLeft(java.lang.String) -> g
    void setVersion(java.lang.String) -> h
    javax.swing.JTextField access$0(com.jajeem.licensing.LicenseFrame) -> a
    javax.swing.JTextField access$1(com.jajeem.licensing.LicenseFrame) -> b
    javax.swing.JTextField access$2(com.jajeem.licensing.LicenseFrame) -> c
com.jajeem.licensing.LicenseFrame$1 -> com.jajeem.licensing.e:
    void run() -> run
com.jajeem.licensing.LicenseFrame$2 -> com.jajeem.licensing.f:
    com.jajeem.licensing.LicenseFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.licensing.LicenseFrame$3 -> com.jajeem.licensing.g:
    com.jajeem.licensing.LicenseFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.licensing.LicenseFrame$4 -> com.jajeem.licensing.h:
    com.jajeem.licensing.LicenseFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.licensing.LicenseManager -> com.jajeem.licensing.LicenseManager:
    com.jajeem.licensing.LicenseManager manager -> b
    com.jajeem.licensing.LicenseFrame frame -> c
    boolean isOnlineValidationEnabled -> d
    com.jajeem.licensing.LicenseValidationContext licContext -> a
    com.jajeem.licensing.LicenseManager getInstance() -> a
    void main(java.lang.String[]) -> main
    void Validate(java.lang.String) -> a
com.jajeem.licensing.LicenseServer -> com.jajeem.licensing.LicenseServer:
    boolean Available -> a
    void main(java.lang.String[]) -> main
    java.lang.String handleServerRequest(java.lang.String,java.lang.String) -> a
    boolean isAvailable() -> a
com.jajeem.licensing.LicenseValidationContext -> com.jajeem.licensing.i:
    com.jajeem.licensing.License lic -> a
    com.jajeem.licensing.License getLicense() -> a
    com.jajeem.licensing.LicenseValidationContext validate(java.lang.String) -> a
com.jajeem.licensing.LicenseValidator -> com.jajeem.licensing.j:
    com.jajeem.licensing.License decLic -> a
    long getDateDiff(java.util.Date,java.util.Date,java.util.concurrent.TimeUnit) -> a
    com.jajeem.licensing.License validate(com.jajeem.licensing.License) -> a
com.jajeem.licensing.ServerList -> com.jajeem.licensing.k:
    java.util.ArrayList serverIps -> a
    java.lang.String getDefault() -> a
com.jajeem.licensing.exception.InvalidLicenseException -> com.jajeem.licensing.a.a:
com.jajeem.licensing.exception.LicenseServerErrorException -> com.jajeem.licensing.a.b:
com.jajeem.licensing.exception.UninitializedLicenseException -> com.jajeem.licensing.a.c:
com.jajeem.licensing.exception.UninitializedLicensingContextException -> com.jajeem.licensing.a.d:
com.jajeem.licensing.test -> com.jajeem.licensing.test:
    void main(java.lang.String[]) -> main
com.jajeem.licensing.util.Encryption -> com.jajeem.licensing.util.Encryption:
    void main(java.lang.String[]) -> main
com.jajeem.licensing.util.JsonConvert -> com.jajeem.licensing.util.a:
    java.lang.String ConvertToJson(java.lang.Object) -> a
    java.lang.Object ConvertFromJson(java.lang.String,java.lang.Class) -> a
com.jajeem.licensing.util.WindowsRegistry -> com.jajeem.licensing.util.WindowsRegistry:
    void main(java.lang.String[]) -> main
    java.lang.String getMachineGUID() -> a
    void createRootKey(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean Exists(com.sun.jna.platform.win32.WinReg$HKEY,java.lang.String) -> a
    java.lang.String ReadStringKey(com.sun.jna.platform.win32.WinReg$HKEY,java.lang.String,java.lang.String) -> a
    void setRootKey(java.lang.String,java.lang.String,java.lang.String) -> b
com.jajeem.message.design.Chat -> com.jajeem.message.design.Chat:
    javax.swing.JPanel contentPane -> a
    javax.swing.DefaultListModel listModel -> b
    com.alee.laf.list.WebList list -> c
    com.alee.laf.scroll.WebScrollPane scrollPane -> d
    java.io.File file -> e
    java.lang.String to -> f
    int port -> g
    boolean multi -> h
    int groupId -> i
    void main(java.lang.String[]) -> main
    void addLine(java.lang.String) -> a
    java.lang.String getTo() -> a
    void setTo(java.lang.String) -> b
    int getPort() -> b
    boolean isMulti() -> c
    void scrollDown() -> d
    javax.swing.DefaultListModel getListModel() -> e
    int getGroupId() -> f
    com.alee.laf.scroll.WebScrollPane access$0(com.jajeem.message.design.Chat) -> a
    java.io.File access$1(com.jajeem.message.design.Chat) -> b
com.jajeem.message.design.Chat$1 -> com.jajeem.message.design.a:
    void run() -> run
com.jajeem.message.design.Chat$2 -> com.jajeem.message.design.b:
    com.jajeem.message.design.Chat this$0 -> a
    com.alee.laf.text.WebTextArea val$textArea -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.message.design.Chat$3 -> com.jajeem.message.design.c:
    com.jajeem.message.design.Chat this$0 -> a
    com.alee.laf.text.WebTextArea val$textArea -> b
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
com.jajeem.message.design.Chat$4 -> com.jajeem.message.design.d:
    com.jajeem.message.design.Chat this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.message.design.MessageReceive -> com.jajeem.message.design.MessageReceive:
    com.alee.laf.label.WebLabel messageLabel -> a
    com.jajeem.message.design.MessageReceive$ExampleDialog exampleDialog -> b
    void main(java.lang.String[]) -> main
    com.alee.laf.label.WebLabel getMessageLabel() -> a
com.jajeem.message.design.MessageReceive$ExampleDialog -> com.jajeem.message.design.e:
com.jajeem.message.design.MessageReceive$ExampleDialog$1 -> com.jajeem.message.design.f:
    com.jajeem.message.design.MessageReceive$ExampleDialog this$1 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.message.design.MessageSend -> com.jajeem.message.design.MessageSend:
    com.alee.laf.text.WebTextArea messageField -> a
    com.jajeem.message.design.MessageSend$ExampleDialog exampleDialog -> b
    void main(java.lang.String[]) -> main
com.jajeem.message.design.MessageSend$ExampleDialog -> com.jajeem.message.design.g:
    com.jajeem.message.design.MessageSend this$0 -> a
    com.jajeem.message.design.MessageSend access$0(com.jajeem.message.design.MessageSend$ExampleDialog) -> a
com.jajeem.message.design.MessageSend$ExampleDialog$1 -> com.jajeem.message.design.h:
    com.jajeem.message.design.MessageSend$ExampleDialog this$1 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.dao.h2.QuestionDAO -> com.jajeem.quiz.a.a.a:
    com.jajeem.quiz.model.Question create(com.jajeem.quiz.model.Question) -> a
    boolean update(com.jajeem.quiz.model.Question) -> b
    java.util.Collection list(java.util.UUID) -> a
    boolean Contains(com.jajeem.quiz.model.Question) -> c
com.jajeem.quiz.dao.h2.QuizDAO -> com.jajeem.quiz.a.a.b:
    com.jajeem.quiz.model.Quiz create(com.jajeem.quiz.model.Quiz) -> a
    boolean update(com.jajeem.quiz.model.Quiz) -> b
    java.util.ArrayList listByCourseId(int) -> a
    java.util.ArrayList listByInstructorId(int) -> b
    boolean Contains(com.jajeem.quiz.model.Quiz) -> c
com.jajeem.quiz.dao.h2.ResponseDAO -> com.jajeem.quiz.a.a.c:
    com.jajeem.quiz.model.Response create(com.jajeem.quiz.model.Response) -> a
    boolean update(com.jajeem.quiz.model.Response) -> b
    boolean Contains(com.jajeem.quiz.model.Response) -> c
com.jajeem.quiz.dao.h2.RunDAO -> com.jajeem.quiz.a.a.d:
    com.jajeem.quiz.model.Run create(com.jajeem.quiz.model.Run) -> a
    boolean update(com.jajeem.quiz.model.Run) -> b
    boolean Contains(com.jajeem.quiz.model.Run) -> c
com.jajeem.quiz.design.alt.BaseQuizFrame -> com.jajeem.quiz.design.alt.a:
    javax.swing.JPanel panelTop -> a
    com.jajeem.util.CustomPanel panelContent -> b
    javax.swing.JFrame mainFrame -> c
    int posX -> d
    int posY -> e
    com.jajeem.quiz.design.alt.CustomQuizButton customQuizButton -> f
com.jajeem.quiz.design.alt.BaseQuizFrame$1 -> com.jajeem.quiz.design.alt.b:
    com.jajeem.quiz.design.alt.BaseQuizFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.quiz.design.alt.BaseQuizFrame$2 -> com.jajeem.quiz.design.alt.c:
    com.jajeem.quiz.design.alt.BaseQuizFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.quiz.design.alt.BaseQuizFrame$3 -> com.jajeem.quiz.design.alt.d:
    com.jajeem.quiz.design.alt.BaseQuizFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.quiz.design.alt.BaseQuizOpenFrame -> com.jajeem.quiz.design.alt.e:
    com.jajeem.util.CustomPanel panelContent -> a
    javax.swing.JFrame mainFrame -> b
    int posX -> c
    int posY -> d
    com.jajeem.quiz.design.alt.CustomQuizButton customQuizButton -> e
com.jajeem.quiz.design.alt.BaseQuizOpenFrame$1 -> com.jajeem.quiz.design.alt.f:
    com.jajeem.quiz.design.alt.BaseQuizOpenFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.quiz.design.alt.BaseQuizOpenFrame$2 -> com.jajeem.quiz.design.alt.g:
    com.jajeem.quiz.design.alt.BaseQuizOpenFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.quiz.design.alt.BaseQuizOpenFrame$3 -> com.jajeem.quiz.design.alt.h:
    com.jajeem.quiz.design.alt.BaseQuizOpenFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.quiz.design.alt.CustomQuizButton -> com.jajeem.quiz.design.alt.i:
    java.awt.image.BufferedImage background -> c
    boolean isRollOver -> a
    boolean isPressed -> b
    java.lang.String uri -> d
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.quiz.design.alt.CustomQuizButton$1 -> com.jajeem.quiz.design.alt.j:
    com.jajeem.quiz.design.alt.CustomQuizButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.quiz.design.alt.Quiz_AbstractViews -> com.jajeem.quiz.design.alt.k:
com.jajeem.quiz.design.alt.Quiz_FirstPage -> com.jajeem.quiz.design.alt.l:
    com.jajeem.quiz.design.alt.Quiz_QuestionListPanel webQuestionListPanel -> a
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel webQuestionDesignPanel -> b
    javax.swing.JTextField wbtxtfldDirection -> c
    javax.swing.JTextField wbtxtfldPoints -> d
    javax.swing.JTextField wbtxtfldTime -> e
    com.alee.laf.button.WebButton wbtnAdd -> f
    com.alee.laf.button.WebButton wbtnCopy -> g
    com.alee.laf.button.WebButton wbtnDelete -> h
    com.jajeem.quiz.design.alt.Quiz_Main parentPanel -> i
    javax.swing.JCheckBox wbchckbxAuto -> j
    javax.swing.JTextField textField -> k
    javax.swing.JTextField textField_1 -> l
    javax.swing.JTextField textField_2 -> m
    void CalculateQuestionPoint() -> a
    com.jajeem.quiz.design.alt.Quiz_QuestionListPanel getWebQuestionListPanel() -> b
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel getWebQuestionDesignPanel() -> c
    void clear() -> d
    com.jajeem.quiz.design.alt.Quiz_Main getParentPanel() -> e
    javax.swing.JCheckBox getWbchckbxAuto() -> f
    javax.swing.JTextField getWbtxtfldPoints() -> g
    void loadCurrentQuiz(com.jajeem.quiz.model.Quiz) -> a
    com.jajeem.quiz.design.alt.Quiz_Main access$0(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> a
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel access$1(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> b
    com.jajeem.quiz.design.alt.Quiz_QuestionListPanel access$2(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> c
    javax.swing.JTextField access$3(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> d
    javax.swing.JTextField access$4(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> e
    javax.swing.JCheckBox access$5(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> f
    javax.swing.JTextField access$6(com.jajeem.quiz.design.alt.Quiz_FirstPage) -> g
com.jajeem.quiz.design.alt.Quiz_FirstPage$1 -> com.jajeem.quiz.design.alt.m:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_FirstPage$2 -> com.jajeem.quiz.design.alt.n:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_FirstPage$3 -> com.jajeem.quiz.design.alt.o:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_FirstPage$4 -> com.jajeem.quiz.design.alt.p:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_FirstPage$5 -> com.jajeem.quiz.design.alt.q:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_FirstPage$6 -> com.jajeem.quiz.design.alt.r:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.quiz.design.alt.Quiz_FirstPage$7 -> com.jajeem.quiz.design.alt.s:
    com.jajeem.quiz.design.alt.Quiz_FirstPage this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_Main -> com.jajeem.quiz.design.alt.Quiz_Main:
    com.alee.laf.button.WebButton wbtnNew -> g
    com.alee.laf.button.WebButton wbtnContent -> h
    com.alee.laf.button.WebButton wbtnStart -> i
    com.alee.laf.button.WebButton wbtnSaveResults -> j
    com.alee.laf.button.WebButton wbtnSave -> k
    com.alee.laf.button.WebButton wbtnOpen -> l
    com.jajeem.quiz.model.Run currentRun -> m
    com.jajeem.quiz.model.Question currentQuestion -> n
    boolean eventsEnabled -> o
    com.jajeem.quiz.design.alt.Quiz_FirstPage firstPage -> p
    com.jajeem.quiz.design.alt.Quiz_SecondPage secondPage -> q
    com.jajeem.quiz.design.alt.Quiz_Main mainFrame -> r
    java.util.List studentIps -> s
    int gIndex -> t
    com.alee.laf.panel.WebPanel webPanelCards -> u
    void newQuizRun() -> a
    void StartQuizCommand() -> b
    com.jajeem.core.model.Instructor getCurrentInstructor() -> c
    com.jajeem.room.model.Course getCurrentCourse() -> i
    com.jajeem.quiz.model.Question getCurrentQuestion() -> d
    void setCurrentQuestion(com.jajeem.quiz.model.Question) -> a
    void setEventsEnabled(boolean) -> a
    com.jajeem.quiz.model.Run getCurrentRun() -> e
    boolean isEventsEnabled() -> f
    void setCurrentQuiz(com.jajeem.quiz.model.Quiz) -> a
    void loadCurrentQuiz() -> g
    int listeningPort() -> h
    void main(java.lang.String[]) -> main
    int access$0(com.jajeem.quiz.design.alt.Quiz_Main) -> a
    void access$1(com.jajeem.quiz.design.alt.Quiz_Main) -> b
    java.lang.String access$2(com.jajeem.quiz.design.alt.Quiz_Main) -> c
    com.alee.laf.panel.WebPanel access$3(com.jajeem.quiz.design.alt.Quiz_Main) -> d
    com.alee.laf.button.WebButton access$4(com.jajeem.quiz.design.alt.Quiz_Main) -> e
    com.alee.laf.button.WebButton access$5(com.jajeem.quiz.design.alt.Quiz_Main) -> f
    com.alee.laf.button.WebButton access$6(com.jajeem.quiz.design.alt.Quiz_Main) -> g
    com.alee.laf.button.WebButton access$7(com.jajeem.quiz.design.alt.Quiz_Main) -> h
    com.alee.laf.button.WebButton access$8(com.jajeem.quiz.design.alt.Quiz_Main) -> i
    void access$9(com.jajeem.quiz.design.alt.Quiz_Main,boolean) -> a
    com.jajeem.quiz.design.alt.Quiz_SecondPage access$10(com.jajeem.quiz.design.alt.Quiz_Main) -> j
    com.jajeem.quiz.design.alt.Quiz_FirstPage access$11(com.jajeem.quiz.design.alt.Quiz_Main) -> k
    com.jajeem.quiz.model.Run access$12(com.jajeem.quiz.design.alt.Quiz_Main) -> l
    com.jajeem.quiz.design.alt.Quiz_Main access$13(com.jajeem.quiz.design.alt.Quiz_Main) -> m
com.jajeem.quiz.design.alt.Quiz_Main$1 -> com.jajeem.quiz.design.alt.t:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$2 -> com.jajeem.quiz.design.alt.u:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
com.jajeem.quiz.design.alt.Quiz_Main$3 -> com.jajeem.quiz.design.alt.v:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.quiz.design.alt.Quiz_Main$4 -> com.jajeem.quiz.design.alt.w:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$5 -> com.jajeem.quiz.design.alt.x:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$6 -> com.jajeem.quiz.design.alt.y:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$7 -> com.jajeem.quiz.design.alt.z:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$8 -> com.jajeem.quiz.design.alt.A:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_Main$9 -> com.jajeem.quiz.design.alt.B:
    com.jajeem.quiz.design.alt.Quiz_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_OpenDialog -> com.jajeem.quiz.design.alt.Quiz_OpenDialog:
    com.alee.laf.table.WebTable wbTblQuestion -> f
    com.alee.laf.table.WebTable wbTblQuiz -> g
    com.jajeem.quiz.design.alt.CustomQuizButton wbtnOpen -> h
    com.jajeem.quiz.design.alt.CustomQuizButton wbtnCancel -> i
    java.util.ArrayList quizList -> j
    com.jajeem.quiz.design.alt.Quiz_Main parentFrame -> k
    void main(java.lang.String[]) -> main
    com.alee.laf.table.WebTable access$0(com.jajeem.quiz.design.alt.Quiz_OpenDialog) -> a
    com.jajeem.quiz.design.alt.Quiz_Main access$1(com.jajeem.quiz.design.alt.Quiz_OpenDialog) -> b
    java.util.ArrayList access$2(com.jajeem.quiz.design.alt.Quiz_OpenDialog) -> c
    com.alee.laf.table.WebTable access$3(com.jajeem.quiz.design.alt.Quiz_OpenDialog) -> d
com.jajeem.quiz.design.alt.Quiz_OpenDialog$1 -> com.jajeem.quiz.design.alt.C:
    void run() -> run
com.jajeem.quiz.design.alt.Quiz_OpenDialog$2 -> com.jajeem.quiz.design.alt.D:
    com.jajeem.quiz.design.alt.Quiz_OpenDialog this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.quiz.design.alt.Quiz_OpenDialog$3 -> com.jajeem.quiz.design.alt.E:
    com.jajeem.quiz.design.alt.Quiz_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_OpenDialog$4 -> com.jajeem.quiz.design.alt.F:
    com.jajeem.quiz.design.alt.Quiz_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_OpenDialog$5 -> com.jajeem.quiz.design.alt.G:
    com.jajeem.quiz.design.alt.Quiz_OpenDialog this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.quiz.design.alt.Quiz_OpenDialog$6 -> com.jajeem.quiz.design.alt.H:
    com.jajeem.quiz.design.alt.Quiz_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel -> com.jajeem.quiz.design.alt.I:
    com.jajeem.quiz.design.alt.Quiz_FirstPage parentPanel -> a
    javax.swing.JTextField textField -> b
    com.jajeem.ui.combobox.JajeemComboBox webComboBoxQuestionType -> c
    javax.swing.JTextArea textPaneQuestionContent -> d
    javax.swing.JTextField textField_1 -> e
    javax.swing.JTextField textField_2 -> f
    javax.swing.JTextField textField_3 -> g
    javax.swing.JTextField textField_4 -> h
    javax.swing.JTextField textField_5 -> i
    com.alee.laf.radiobutton.WebRadioButton radioButton_1 -> j
    com.alee.laf.radiobutton.WebRadioButton radioButton -> k
    com.alee.laf.radiobutton.WebRadioButton radioButton_2 -> l
    com.alee.laf.radiobutton.WebRadioButton radioButton_3 -> m
    com.alee.laf.radiobutton.WebRadioButton radioButton_4 -> n
    com.alee.laf.checkbox.WebCheckBox checkBox -> o
    com.alee.laf.checkbox.WebCheckBox checkBox_1 -> p
    com.alee.laf.checkbox.WebCheckBox checkBox_2 -> q
    com.alee.laf.checkbox.WebCheckBox checkBox_3 -> r
    com.alee.laf.checkbox.WebCheckBox checkBox_4 -> s
    javax.swing.JPanel panel_2 -> t
    javax.swing.JLabel lblQuestion -> u
    javax.swing.JScrollPane scrollPane -> v
    void _itemStateChanged(java.awt.event.ItemEvent) -> a
    javax.swing.JTextArea getWebTextArea() -> a
    com.jajeem.ui.combobox.JajeemComboBox getWebComboBox() -> b
    com.alee.laf.radiobutton.WebRadioButton getWebRadioButton() -> c
    com.alee.laf.radiobutton.WebRadioButton getWebRadioButton_1() -> d
    com.alee.laf.radiobutton.WebRadioButton getWebRadioButton_2() -> e
    com.alee.laf.radiobutton.WebRadioButton getWebRadioButton_3() -> f
    com.alee.laf.radiobutton.WebRadioButton getWebRadioButton_4() -> g
    com.alee.laf.checkbox.WebCheckBox getWebCheckBox() -> h
    com.alee.laf.checkbox.WebCheckBox getWebCheckBox_1() -> i
    com.alee.laf.checkbox.WebCheckBox getWebCheckBox_2() -> j
    com.alee.laf.checkbox.WebCheckBox getWebCheckBox_3() -> k
    com.alee.laf.checkbox.WebCheckBox getWebCheckBox_4() -> l
    javax.swing.JTextField getWebTextField_06() -> m
    javax.swing.JTextField getWebTextField_01() -> n
    javax.swing.JTextField getWebTextField_02() -> o
    javax.swing.JTextField getWebTextField_03() -> p
    javax.swing.JTextField getWebTextField_04() -> q
    javax.swing.JTextField getWebTextField_05() -> r
    void clear() -> s
    void WebComboboxSelectionChanged(java.lang.String) -> a
    javax.swing.JLabel getWblblQuestion() -> t
    javax.swing.JComponent getWebScrollPane() -> u
    com.jajeem.quiz.design.alt.Quiz_FirstPage access$0(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> a
    javax.swing.JTextArea access$1(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> b
    javax.swing.JTextField access$2(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> c
    javax.swing.JTextField access$3(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> d
    javax.swing.JTextField access$4(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> e
    javax.swing.JTextField access$5(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> f
    javax.swing.JTextField access$6(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> g
    javax.swing.JTextField access$7(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> h
    com.alee.laf.radiobutton.WebRadioButton access$8(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> i
    com.alee.laf.radiobutton.WebRadioButton access$9(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> j
    com.alee.laf.radiobutton.WebRadioButton access$10(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> k
    com.alee.laf.radiobutton.WebRadioButton access$11(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> l
    com.alee.laf.radiobutton.WebRadioButton access$12(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> m
    com.alee.laf.checkbox.WebCheckBox access$13(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> n
    com.alee.laf.checkbox.WebCheckBox access$14(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> o
    com.alee.laf.checkbox.WebCheckBox access$15(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> p
    com.alee.laf.checkbox.WebCheckBox access$16(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> q
    com.alee.laf.checkbox.WebCheckBox access$17(com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel) -> r
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$1 -> com.jajeem.quiz.design.alt.J:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$10 -> com.jajeem.quiz.design.alt.K:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$11 -> com.jajeem.quiz.design.alt.L:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$12 -> com.jajeem.quiz.design.alt.M:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$13 -> com.jajeem.quiz.design.alt.N:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$14 -> com.jajeem.quiz.design.alt.O:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$15 -> com.jajeem.quiz.design.alt.P:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$16 -> com.jajeem.quiz.design.alt.Q:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$17 -> com.jajeem.quiz.design.alt.R:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$18 -> com.jajeem.quiz.design.alt.S:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$2 -> com.jajeem.quiz.design.alt.T:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$3 -> com.jajeem.quiz.design.alt.U:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$4 -> com.jajeem.quiz.design.alt.V:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$5 -> com.jajeem.quiz.design.alt.W:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$6 -> com.jajeem.quiz.design.alt.X:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$7 -> com.jajeem.quiz.design.alt.Y:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$8 -> com.jajeem.quiz.design.alt.Z:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel$9 -> com.jajeem.quiz.design.alt.aa:
    com.jajeem.quiz.design.alt.Quiz_QuestionDesignPanel this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_QuestionListPanel -> com.jajeem.quiz.design.alt.ab:
    com.alee.laf.table.WebTable webTable -> a
    com.alee.laf.scroll.WebScrollPane webScrollPane -> b
    com.jajeem.quiz.design.alt.Quiz_FirstPage parentPanel -> c
    com.alee.laf.table.WebTable getWebTable() -> a
    void clear() -> b
    com.jajeem.quiz.design.alt.Quiz_FirstPage access$0(com.jajeem.quiz.design.alt.Quiz_QuestionListPanel) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.quiz.design.alt.Quiz_QuestionListPanel) -> b
com.jajeem.quiz.design.alt.Quiz_QuestionListPanel$1 -> com.jajeem.quiz.design.alt.ac:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.quiz.design.alt.Quiz_QuestionListPanel$2 -> com.jajeem.quiz.design.alt.ad:
    com.jajeem.quiz.design.alt.Quiz_QuestionListPanel this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.quiz.design.alt.Quiz_SecondPage -> com.jajeem.quiz.design.alt.ae:
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View panel_bottom_21 -> b
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View panel_bottom_22 -> c
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Points_View panel_bottom_23 -> d
    com.alee.laf.combobox.WebComboBox webComboBox -> e
    com.alee.laf.panel.WebPanel cards -> f
    com.jajeem.quiz.design.alt.Quiz_Main parentPanel -> g
    com.jajeem.quiz.model.Quiz currentQuiz -> a
    java.util.ArrayList quizResponse -> h
    java.util.ArrayList runResults -> i
    com.jajeem.events.QuizEvent responseRecieved -> j
    com.jajeem.quiz.design.alt.Quiz_Main getParentPanel() -> a
    void clear() -> b
    void LoadQuiz(com.jajeem.quiz.model.Quiz) -> a
    java.util.ArrayList getQuizResponse() -> c
    java.util.ArrayList getRunResults() -> d
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View getPanel_bottom_21() -> e
    com.alee.laf.panel.WebPanel access$0(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> a
    com.alee.laf.combobox.WebComboBox access$1(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> b
    com.jajeem.quiz.design.alt.Quiz_Main access$2(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> c
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View access$3(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> d
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View access$4(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> e
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Points_View access$5(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> f
    java.util.ArrayList access$6(com.jajeem.quiz.design.alt.Quiz_SecondPage) -> g
com.jajeem.quiz.design.alt.Quiz_SecondPage$1 -> com.jajeem.quiz.design.alt.af:
    com.jajeem.quiz.design.alt.Quiz_SecondPage this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.quiz.design.alt.Quiz_SecondPage$2 -> com.jajeem.quiz.design.alt.ag:
    com.jajeem.quiz.design.alt.Quiz_SecondPage this$0 -> a
    void questionAnswered(com.jajeem.events.QuizResponse) -> a
    void quizFinished(com.jajeem.events.QuizFinished) -> a
    java.util.UUID getQuizId() -> a
com.jajeem.quiz.design.alt.Quiz_SecondPage_Points_View -> com.jajeem.quiz.design.alt.ah:
    com.alee.laf.table.WebTable webTable -> a
    com.jajeem.quiz.design.alt.Quiz_SecondPage parentPanel -> b
    java.util.ArrayList studentList -> c
    java.util.ArrayList quizResponse -> d
    void QuestionAnswered(com.jajeem.events.QuizResponse) -> a
    void clearQuiz() -> a
    void LoadQuiz$1fa0ab6() -> b
com.jajeem.quiz.design.alt.Quiz_SecondPage_Points_View$1 -> com.jajeem.quiz.design.alt.ai:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View -> com.jajeem.quiz.design.alt.aj:
    com.alee.laf.table.WebTable webTable -> a
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> b
    com.alee.laf.text.WebTextArea webTextArea -> c
    com.alee.laf.text.WebTextField webTextField -> d
    com.jajeem.quiz.design.alt.Quiz_SecondPage parentPanel -> e
    com.jajeem.quiz.model.Question currentQuestion -> f
    com.alee.laf.text.WebTextField webTextField_1 -> g
    com.alee.laf.text.WebTextField webTextField_2 -> h
    javax.swing.Timer timer -> i
    long remaining -> j
    long lastUpdate -> k
    java.util.ArrayList quizResponse -> l
    com.jajeem.quiz.model.Quiz currentQuiz -> m
    void clearQuiz() -> a
    void LoadQuiz(com.jajeem.quiz.model.Quiz) -> a
    void StopQuizCommand() -> b
    void QuestionAnswered(com.jajeem.events.QuizResponse) -> a
    javax.swing.Timer getTimer() -> c
    com.alee.laf.text.WebTextField getWebTextField_1() -> d
    com.jajeem.quiz.design.alt.Quiz_SecondPage access$0(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$1(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> b
    void access$2(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View,com.jajeem.quiz.model.Question) -> a
    com.alee.laf.text.WebTextArea access$3(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> c
    com.jajeem.quiz.model.Question access$4(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> d
    com.alee.laf.text.WebTextField access$5(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> e
    com.alee.laf.table.WebTable access$6(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> f
    java.util.ArrayList access$7(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> g
    long access$8(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> h
    long access$9(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> i
    void access$10(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View,long) -> a
    void access$11(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View,long) -> b
    com.alee.laf.text.WebTextField access$12(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> j
    javax.swing.Timer access$13(com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View) -> k
com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View$1 -> com.jajeem.quiz.design.alt.ak:
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View$2 -> com.jajeem.quiz.design.alt.al:
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.alt.Quiz_SecondPage_Question_View$WebTableModel -> com.jajeem.quiz.design.alt.am:
    java.lang.Class getColumnClass(int) -> getColumnClass
com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View -> com.jajeem.quiz.design.alt.an:
    javax.swing.JTextField textField -> a
    com.alee.laf.table.WebTable webTable -> b
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> c
    com.alee.laf.label.WebLabel wblblScore -> d
    com.jajeem.quiz.design.alt.Quiz_SecondPage parentPanel -> e
    com.jajeem.core.model.Student currentStudent -> f
    java.util.ArrayList quizResponse -> g
    java.util.ArrayList studentList -> h
    com.jajeem.quiz.model.Quiz currentQuiz -> i
    void QuestionAnswered(com.jajeem.events.QuizResponse) -> a
    void LoadQuiz(com.jajeem.quiz.model.Quiz) -> a
    void clearQuiz() -> a
    java.util.ArrayList access$0(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> a
    void access$1(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View,com.jajeem.core.model.Student) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$2(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> b
    java.util.ArrayList access$3(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> c
    com.alee.laf.table.WebTable access$4(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> d
    com.jajeem.core.model.Student access$5(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> e
    com.jajeem.quiz.model.Quiz access$6(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> f
    com.alee.laf.label.WebLabel access$7(com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View) -> g
com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View$1 -> com.jajeem.quiz.design.alt.ao:
    com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.quiz.design.alt.Quiz_SecondPage_Student_View$WebTableModel -> com.jajeem.quiz.design.alt.ap:
    java.lang.Class getColumnClass(int) -> getColumnClass
com.jajeem.quiz.design.client.alt.BaseQuizClientFrame -> com.jajeem.quiz.design.client.alt.a:
    javax.swing.JPanel panelTop -> a
    com.jajeem.util.CustomPanel panelContent -> b
    javax.swing.JFrame mainFrame -> c
    int posX -> d
    int posY -> e
com.jajeem.quiz.design.client.alt.BaseQuizClientFrame$1 -> com.jajeem.quiz.design.client.alt.b:
    com.jajeem.quiz.design.client.alt.BaseQuizClientFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.BaseQuizClientFrame$2 -> com.jajeem.quiz.design.client.alt.c:
    com.jajeem.quiz.design.client.alt.BaseQuizClientFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.quiz.design.client.alt.BaseQuizClientFrame$3 -> com.jajeem.quiz.design.client.alt.d:
    com.jajeem.quiz.design.client.alt.BaseQuizClientFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.quiz.design.client.alt.BaseQuizClientFrame$4 -> com.jajeem.quiz.design.client.alt.e:
    com.jajeem.quiz.design.client.alt.BaseQuizClientFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.quiz.design.client.alt.Quiz_Window -> com.jajeem.quiz.design.client.alt.Quiz_Window:
    javax.swing.JTextField textFieldDirection -> j
    javax.swing.JTextField textFieldTime -> k
    com.alee.laf.list.DefaultListModel model -> l
    com.jajeem.quiz.model.Question currentQuestion -> f
    com.jajeem.events.QuizEvent quizEvent -> m
    java.util.ArrayList sendQueue -> n
    com.jajeem.core.model.Student privateStudent -> o
    com.jajeem.quiz.model.Run currentRun -> p
    java.awt.event.ActionListener taskPerformer -> q
    long remaining -> g
    long lastUpdate -> h
    javax.swing.Timer timer -> i
    java.lang.String server -> r
    int listenPort -> s
    javax.swing.JTextField textFieldAnswer1Card1 -> t
    javax.swing.JTextField textFieldAnswer2Card1 -> u
    javax.swing.JTextField textFieldAnswer4Card1 -> v
    javax.swing.JTextField textFieldAnswer3Card1 -> w
    javax.swing.JTextField textFieldAnswer5Card1 -> z
    javax.swing.JRadioButton radioButton -> A
    javax.swing.JRadioButton radioButton_1 -> B
    javax.swing.JRadioButton radioButton_2 -> C
    javax.swing.JRadioButton radioButton_3 -> D
    javax.swing.JRadioButton radioButton_4 -> E
    javax.swing.JCheckBox checkBox -> F
    javax.swing.JCheckBox checkBox_1 -> G
    javax.swing.JCheckBox checkBox_2 -> H
    javax.swing.JCheckBox checkBox_3 -> I
    javax.swing.JCheckBox checkBox_4 -> J
    javax.swing.JTextField textFieldAnswer1Card2 -> K
    javax.swing.JTextField textFieldAnswer2Card2 -> L
    javax.swing.JTextField textFieldAnswer3Card2 -> M
    javax.swing.JTextField textFieldAnswer4Card2 -> N
    javax.swing.JTextField textFieldAnswer5Card2 -> O
    com.alee.laf.list.WebList webList_1 -> P
    com.jajeem.quiz.design.alt.CustomQuizButton wbtnNext -> Q
    com.jajeem.quiz.design.alt.CustomQuizButton wbtnPrev -> R
    com.alee.laf.text.WebTextArea webTextAreaEssayAnswer -> S
    com.alee.laf.text.WebTextArea webTextAreaQuestion -> T
    javax.swing.JPanel panelCards -> U
    javax.swing.JLabel lblQuestion -> V
    javax.swing.JLabel lblAnswered -> W
    javax.swing.JLabel lblNumOfQuestion -> X
    void updateDisplay() -> a
    void setServer(java.lang.String) -> a
    void setReceivePort(int) -> a
    void main(java.lang.String[]) -> main
    com.jajeem.quiz.model.Run access$0(com.jajeem.quiz.design.client.alt.Quiz_Window) -> a
    com.alee.laf.list.DefaultListModel access$1(com.jajeem.quiz.design.client.alt.Quiz_Window) -> b
    com.alee.laf.list.WebList access$2(com.jajeem.quiz.design.client.alt.Quiz_Window) -> c
    void access$3(com.jajeem.quiz.design.client.alt.Quiz_Window,java.awt.event.ActionListener) -> a
    javax.swing.JTextField access$4(com.jajeem.quiz.design.client.alt.Quiz_Window) -> d
    java.awt.event.ActionListener access$5(com.jajeem.quiz.design.client.alt.Quiz_Window) -> e
    javax.swing.JTextField access$6(com.jajeem.quiz.design.client.alt.Quiz_Window) -> f
    javax.swing.JLabel access$7(com.jajeem.quiz.design.client.alt.Quiz_Window) -> g
    javax.swing.JRadioButton access$8(com.jajeem.quiz.design.client.alt.Quiz_Window) -> h
    javax.swing.JRadioButton access$9(com.jajeem.quiz.design.client.alt.Quiz_Window) -> i
    javax.swing.JRadioButton access$10(com.jajeem.quiz.design.client.alt.Quiz_Window) -> j
    javax.swing.JRadioButton access$11(com.jajeem.quiz.design.client.alt.Quiz_Window) -> k
    javax.swing.JRadioButton access$12(com.jajeem.quiz.design.client.alt.Quiz_Window) -> l
    javax.swing.JCheckBox access$13(com.jajeem.quiz.design.client.alt.Quiz_Window) -> m
    javax.swing.JCheckBox access$14(com.jajeem.quiz.design.client.alt.Quiz_Window) -> n
    javax.swing.JCheckBox access$15(com.jajeem.quiz.design.client.alt.Quiz_Window) -> o
    javax.swing.JCheckBox access$16(com.jajeem.quiz.design.client.alt.Quiz_Window) -> p
    javax.swing.JCheckBox access$17(com.jajeem.quiz.design.client.alt.Quiz_Window) -> q
    com.alee.laf.text.WebTextArea access$18(com.jajeem.quiz.design.client.alt.Quiz_Window) -> r
    java.util.ArrayList access$19(com.jajeem.quiz.design.client.alt.Quiz_Window) -> s
    int access$20(com.jajeem.quiz.design.client.alt.Quiz_Window) -> t
    java.lang.String access$21(com.jajeem.quiz.design.client.alt.Quiz_Window) -> u
    javax.swing.JLabel access$22(com.jajeem.quiz.design.client.alt.Quiz_Window) -> v
    com.alee.laf.text.WebTextArea access$23(com.jajeem.quiz.design.client.alt.Quiz_Window) -> w
    javax.swing.JPanel access$24(com.jajeem.quiz.design.client.alt.Quiz_Window) -> x
    javax.swing.JTextField access$25(com.jajeem.quiz.design.client.alt.Quiz_Window) -> y
    javax.swing.JTextField access$26(com.jajeem.quiz.design.client.alt.Quiz_Window) -> z
    javax.swing.JTextField access$27(com.jajeem.quiz.design.client.alt.Quiz_Window) -> A
    javax.swing.JTextField access$28(com.jajeem.quiz.design.client.alt.Quiz_Window) -> B
    javax.swing.JTextField access$29(com.jajeem.quiz.design.client.alt.Quiz_Window) -> C
    javax.swing.JTextField access$30(com.jajeem.quiz.design.client.alt.Quiz_Window) -> D
    javax.swing.JTextField access$31(com.jajeem.quiz.design.client.alt.Quiz_Window) -> E
    javax.swing.JTextField access$32(com.jajeem.quiz.design.client.alt.Quiz_Window) -> F
    javax.swing.JTextField access$33(com.jajeem.quiz.design.client.alt.Quiz_Window) -> G
    javax.swing.JTextField access$34(com.jajeem.quiz.design.client.alt.Quiz_Window) -> H
    com.jajeem.quiz.design.alt.CustomQuizButton access$35(com.jajeem.quiz.design.client.alt.Quiz_Window) -> I
com.jajeem.quiz.design.client.alt.Quiz_Window$1 -> com.jajeem.quiz.design.client.alt.f:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    com.jajeem.quiz.design.client.alt.Quiz_Window access$0(com.jajeem.quiz.design.client.alt.Quiz_Window$1) -> a
com.jajeem.quiz.design.client.alt.Quiz_Window$1$1 -> com.jajeem.quiz.design.client.alt.g:
    com.jajeem.quiz.design.client.alt.Quiz_Window$1 this$1 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$10 -> com.jajeem.quiz.design.client.alt.h:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$11 -> com.jajeem.quiz.design.client.alt.i:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$12 -> com.jajeem.quiz.design.client.alt.j:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$13 -> com.jajeem.quiz.design.client.alt.k:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$14 -> com.jajeem.quiz.design.client.alt.l:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
    com.jajeem.quiz.design.client.alt.Quiz_Window access$0(com.jajeem.quiz.design.client.alt.Quiz_Window$14) -> a
com.jajeem.quiz.design.client.alt.Quiz_Window$14$1 -> com.jajeem.quiz.design.client.alt.m:
    com.jajeem.quiz.design.client.alt.Quiz_Window$14 this$1 -> a
    void run() -> run
com.jajeem.quiz.design.client.alt.Quiz_Window$15 -> com.jajeem.quiz.design.client.alt.n:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void questionAnswered(com.jajeem.events.QuizResponse) -> a
    void quizFinished(com.jajeem.events.QuizFinished) -> a
    java.util.UUID getQuizId() -> a
com.jajeem.quiz.design.client.alt.Quiz_Window$2 -> com.jajeem.quiz.design.client.alt.o:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    com.jajeem.quiz.design.client.alt.Quiz_Window access$0(com.jajeem.quiz.design.client.alt.Quiz_Window$2) -> a
com.jajeem.quiz.design.client.alt.Quiz_Window$2$1 -> com.jajeem.quiz.design.client.alt.p:
    com.jajeem.quiz.design.client.alt.Quiz_Window$2 this$1 -> a
    void run() -> run
com.jajeem.quiz.design.client.alt.Quiz_Window$3 -> com.jajeem.quiz.design.client.alt.q:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$4 -> com.jajeem.quiz.design.client.alt.r:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$5 -> com.jajeem.quiz.design.client.alt.s:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$6 -> com.jajeem.quiz.design.client.alt.t:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$7 -> com.jajeem.quiz.design.client.alt.u:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$8 -> com.jajeem.quiz.design.client.alt.v:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.design.client.alt.Quiz_Window$9 -> com.jajeem.quiz.design.client.alt.w:
    com.jajeem.quiz.design.client.alt.Quiz_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.quiz.model.Question -> com.jajeem.quiz.b.a:
    java.util.UUID id -> a
    int instructorId -> b
    java.lang.String title -> c
    java.util.UUID quizId -> d
    byte type -> e
    int point -> f
    java.lang.String imagePath -> g
    java.lang.String url -> h
    java.lang.String answer1 -> i
    java.lang.String answer2 -> j
    java.lang.String answer3 -> k
    java.lang.String answer4 -> l
    java.lang.String answer5 -> m
    boolean[] correctAnswer -> n
    boolean[] studentAnswer -> o
    java.lang.String studentTextAnswer -> p
    boolean validResponse -> q
    com.jajeem.quiz.model.Response response -> r
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.util.UUID getQuizId() -> d
    void setQuizId(java.util.UUID) -> b
    byte getType() -> e
    void setType(byte) -> a
    int getPoint() -> f
    void setPoint(int) -> b
    java.lang.String getImagePath() -> g
    void setImagePath(java.lang.String) -> b
    java.lang.String getUrl() -> h
    void setUrl(java.lang.String) -> c
    java.lang.String getAnswer1() -> i
    void setAnswer1(java.lang.String) -> d
    java.lang.String getAnswer2() -> j
    void setAnswer2(java.lang.String) -> e
    java.lang.String getAnswer3() -> k
    void setAnswer3(java.lang.String) -> f
    java.lang.String getAnswer4() -> l
    void setAnswer4(java.lang.String) -> g
    java.lang.String getAnswer5() -> m
    void setAnswer5(java.lang.String) -> h
    boolean[] getCorrectAnswer() -> n
    void setCorrectAnswer(boolean[]) -> a
    void setStudentAnswer(boolean[]) -> b
    void setStudentAnswer(java.lang.String) -> i
    boolean[] getStudentAnswer() -> o
    java.lang.String getStudentTextAnswer() -> p
    com.jajeem.quiz.model.Response getResponse() -> q
    boolean isResponseValid() -> r
    void setValidResponse(boolean) -> a
com.jajeem.quiz.model.Quiz -> com.jajeem.quiz.b.b:
    java.util.UUID id -> a
    int instructorId -> b
    int courseId -> c
    java.lang.String title -> d
    java.lang.String category -> e
    java.lang.String description -> f
    int points -> g
    int pointing -> h
    int time -> i
    byte shuffle -> j
    java.util.ArrayList questions -> k
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getCategory() -> d
    void setCategory(java.lang.String) -> b
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> c
    int getPoints() -> f
    void setPoints(int) -> b
    int getPointing() -> g
    void setPointing(int) -> c
    int getTime() -> h
    void setTime(int) -> d
    byte getShuffle() -> i
    void setShuffle(byte) -> a
    void addQuestion(com.jajeem.quiz.model.Question) -> a
    java.util.ArrayList getQuestionList() -> j
    int getCourseId() -> k
    void setCourseId(int) -> e
com.jajeem.quiz.model.Response -> com.jajeem.quiz.b.c:
    java.util.UUID id -> a
    java.util.UUID runId -> b
    int studentId -> c
    java.lang.String answer -> d
    boolean[] boolAnswer -> e
    boolean answerValid -> f
    java.util.UUID quizQuestionId -> g
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    java.util.UUID getRunId() -> b
    void setRunId(java.util.UUID) -> b
    int getStudentId() -> c
    void setStudentId(int) -> a
    java.lang.String getAnswer() -> d
    void setAnswer(java.lang.String) -> a
    boolean[] getBoolAnswer() -> e
    void setBoolAnswer(boolean[]) -> a
    boolean isAnswerValid() -> f
    void setAnswerValid(boolean) -> a
    java.util.UUID getQuizQuestionId() -> g
    void setQuizQuestionId(java.util.UUID) -> c
com.jajeem.quiz.model.Run -> com.jajeem.quiz.b.d:
    java.util.UUID id -> a
    com.jajeem.core.model.Instructor instructor -> b
    com.jajeem.quiz.model.Quiz quiz -> c
    com.jajeem.core.model.Student student -> d
    int score -> e
    long start -> f
    long end -> g
    com.jajeem.room.model.Course course -> h
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    java.util.UUID getQuizId() -> c
    void setQuizId(java.util.UUID) -> b
    long getStart() -> d
    void setStart(long) -> a
    long getEnd() -> e
    void setEnd(long) -> b
    int getStudentId() -> f
    int getScore() -> g
    void setScore(int) -> b
    com.jajeem.core.model.Instructor getInstructor() -> h
    void setInstructor(com.jajeem.core.model.Instructor) -> a
    com.jajeem.quiz.model.Quiz getQuiz() -> i
    void setQuiz(com.jajeem.quiz.model.Quiz) -> a
    void setStudent(com.jajeem.core.model.Student) -> a
    void setCourse(com.jajeem.room.model.Course) -> a
    void setCourseId(int) -> c
    int getCourseId() -> j
com.jajeem.quiz.service.QuizService -> com.jajeem.quiz.c.a:
    com.jajeem.quiz.dao.h2.QuizDAO quizDAO -> a
    com.jajeem.quiz.model.Quiz create(com.jajeem.quiz.model.Quiz) -> a
    java.util.ArrayList listByCourseId(int) -> a
    java.util.ArrayList listByInstructorId(int) -> b
com.jajeem.quiz.service.ResultService -> com.jajeem.quiz.c.b:
com.jajeem.recorder.design.Capture -> com.jajeem.recorder.design.a:
    javax.sound.sampled.AudioInputStream audioInputStream -> a
    javax.sound.sampled.TargetDataLine line -> c
    java.lang.Thread thread -> b
    java.lang.String errStr -> d
    void start() -> a
    void shutDown(java.lang.String) -> a
    void run() -> run
com.jajeem.recorder.design.CaptureScreenToFile -> com.jajeem.recorder.design.CaptureScreenToFile:
    com.xuggle.xuggler.IRational FRAME_RATE -> a
    boolean running -> b
    boolean isClient -> c
    java.io.File outputFile -> d
    com.jajeem.recorder.design.TransparentRecordingFrame overlayScreen -> e
    void main(java.lang.String[]) -> main
    void StartCaputre(java.lang.String) -> a
    void StartCaputreWithAudio$552c4e01() -> a
    void StopCapture() -> b
    java.awt.image.BufferedImage convertToType_2(java.awt.image.BufferedImage,int) -> a
    void Synchornize() -> c
    void SendErrorCommand(java.lang.String) -> b
    void SendSuccessCommand(java.lang.String) -> c
    void setClient(boolean) -> a
    com.xuggle.xuggler.IRational access$0() -> d
    boolean access$1() -> e
    boolean access$2() -> f
    java.io.File access$3() -> g
    void access$4(boolean) -> b
    com.jajeem.recorder.design.TransparentRecordingFrame access$5() -> h
com.jajeem.recorder.design.CaptureScreenToFile$1 -> com.jajeem.recorder.design.b:
    java.io.File val$outFile -> a
    void run() -> run
com.jajeem.recorder.design.CaptureScreenToFile$2 -> com.jajeem.recorder.design.c:
    java.io.File val$outFile -> a
    void run() -> run
com.jajeem.recorder.design.CaptureScreenToFile$3 -> com.jajeem.recorder.design.d:
    java.lang.String val$server -> a
    java.io.File val$file -> b
    void run() -> run
com.jajeem.recorder.design.CustomRecordButton -> com.jajeem.recorder.design.e:
    java.awt.image.BufferedImage originalImage -> a
    void init() -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.recorder.design.CustomRecorderDialog -> com.jajeem.recorder.design.CustomRecorderDialog:
    int posX -> a
    int posY -> b
    javax.swing.JPanel contentPanel -> c
    void main(java.lang.String[]) -> main
com.jajeem.recorder.design.CustomRecorderDialog$1 -> com.jajeem.recorder.design.f:
    com.jajeem.recorder.design.CustomRecorderDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.CustomRecorderDialog$2 -> com.jajeem.recorder.design.g:
    com.jajeem.recorder.design.CustomRecorderDialog this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.recorder.design.CustomRecorderDialog$3 -> com.jajeem.recorder.design.h:
    com.jajeem.recorder.design.CustomRecorderDialog this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.recorder.design.CustomRecorderDialog$4 -> com.jajeem.recorder.design.i:
    com.jajeem.recorder.design.CustomRecorderDialog this$0 -> a
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.recorder.design.Playback -> com.jajeem.recorder.design.j:
    java.lang.String errStr -> a
    void run() -> run
com.jajeem.recorder.design.Recorder -> com.jajeem.recorder.design.k:
    boolean isRecordingVoice -> g
    boolean isRecordingDesktop -> h
    boolean isRecordingBoth -> i
    java.util.ArrayList recordingsList -> j
    com.jajeem.recorder.design.Capture capt -> d
    com.alee.laf.button.WebButton wbtnRecord -> k
    com.alee.laf.button.WebButton wbtnRecordDesktopOnly -> l
    com.alee.laf.button.WebButton wbtnRecordBoth -> m
    com.alee.laf.button.WebButton wbtnRecordStudent -> n
    java.util.ArrayList selectedStudent -> o
    com.jajeem.recorder.design.Recorder frame -> p
    javax.swing.ImageIcon stopIconScaled -> e
    javax.swing.ImageIcon recordIconScaled -> f
    void RecordStudent() -> a
    void SendStopRecordCommandTo(java.lang.String) -> a
    void SendStartRecordCommandTo(java.lang.String) -> b
    com.alee.laf.button.WebButton access$0(com.jajeem.recorder.design.Recorder) -> a
    void access$1(com.jajeem.recorder.design.Recorder,javax.sound.sampled.AudioInputStream) -> a
    void access$2(boolean) -> a
    com.alee.laf.button.WebButton access$3(com.jajeem.recorder.design.Recorder) -> b
    com.alee.laf.button.WebButton access$4(com.jajeem.recorder.design.Recorder) -> c
    com.jajeem.recorder.design.Recorder access$5(com.jajeem.recorder.design.Recorder) -> d
    void access$6(boolean) -> b
    void access$7(boolean) -> c
com.jajeem.recorder.design.Recorder$1 -> com.jajeem.recorder.design.l:
    com.alee.extended.filechooser.WebDirectoryChooser directoryChooser -> a
    com.jajeem.recorder.design.Recorder this$0 -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.Recorder$2 -> com.jajeem.recorder.design.m:
    com.jajeem.recorder.design.Recorder this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.Recorder$3 -> com.jajeem.recorder.design.n:
    com.jajeem.recorder.design.Recorder this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.Recorder$4 -> com.jajeem.recorder.design.o:
    com.jajeem.recorder.design.Recorder this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.Recorder$5 -> com.jajeem.recorder.design.p:
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.jajeem.recorder.design.Recorder$6 -> com.jajeem.recorder.design.q:
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
com.jajeem.recorder.design.RecorderProgressWindow -> com.jajeem.recorder.design.RecorderProgressWindow:
    javax.swing.JPanel contentPanel -> a
    com.alee.laf.progressbar.WebProgressBar webProgressBar -> b
    com.jajeem.events.FileTransferEvent event -> c
    void main(java.lang.String[]) -> main
    void setProgressValue(int) -> a
com.jajeem.recorder.design.RecorderProgressWindow$1 -> com.jajeem.recorder.design.r:
    com.jajeem.recorder.design.RecorderProgressWindow this$0 -> a
    void success(com.jajeem.events.FileTransferObject,java.lang.Class) -> a
    void progress(com.jajeem.events.FileTransferObject,java.lang.Class) -> b
    void fileSendRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> c
    void fileRejectRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> e
    void fileAcceptRequest(com.jajeem.events.FileTransferObject,java.lang.Class) -> d
    void fail$dc9f86e(java.lang.Class) -> a
com.jajeem.recorder.design.RecorderServer -> com.jajeem.recorder.design.RecorderServer:
    void Startup() -> a
    void main(java.lang.String[]) -> main
    void access$0(com.jajeem.recorder.design.RecorderServer) -> a
com.jajeem.recorder.design.RecorderServer$1 -> com.jajeem.recorder.design.s:
    com.jajeem.recorder.design.RecorderServer this$0 -> a
    void run() -> run
com.jajeem.recorder.design.RecorderServer$2 -> com.jajeem.recorder.design.t:
    java.net.Socket val$client -> a
    void run() -> run
com.jajeem.recorder.design.RecorderServer$2$1 -> com.jajeem.recorder.design.u:
    com.jajeem.filemanager.client.ClientProgressWindow val$progwin -> a
    void run() -> run
com.jajeem.recorder.design.RecorderStudent -> com.jajeem.recorder.design.RecorderStudent:
    boolean isRecordingVoice -> g
    boolean isRecordingDesktop -> h
    boolean isRecordingBoth -> i
    com.jajeem.recorder.design.Capture capt -> d
    com.alee.laf.button.WebButton wbtnRecord -> j
    com.alee.laf.button.WebButton wbtnRecordDesktopOnly -> k
    com.alee.laf.button.WebButton wbtnRecordBoth -> l
    com.jajeem.recorder.design.RecorderStudent frame -> m
    javax.swing.ImageIcon stopIconScaled -> e
    javax.swing.ImageIcon recordIconScaled -> f
    void main(java.lang.String[]) -> main
    com.alee.laf.button.WebButton access$0(com.jajeem.recorder.design.RecorderStudent) -> a
    void access$1(com.jajeem.recorder.design.RecorderStudent,javax.sound.sampled.AudioInputStream) -> a
    void access$2(boolean) -> a
    com.alee.laf.button.WebButton access$3(com.jajeem.recorder.design.RecorderStudent) -> b
    com.alee.laf.button.WebButton access$4(com.jajeem.recorder.design.RecorderStudent) -> c
    com.jajeem.recorder.design.RecorderStudent access$5(com.jajeem.recorder.design.RecorderStudent) -> d
    void access$6(boolean) -> b
    void access$7(boolean) -> c
com.jajeem.recorder.design.RecorderStudent$1 -> com.jajeem.recorder.design.v:
    com.alee.extended.filechooser.WebDirectoryChooser directoryChooser -> a
    com.jajeem.recorder.design.RecorderStudent this$0 -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.RecorderStudent$2 -> com.jajeem.recorder.design.w:
    com.jajeem.recorder.design.RecorderStudent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.RecorderStudent$3 -> com.jajeem.recorder.design.x:
    com.jajeem.recorder.design.RecorderStudent this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.recorder.design.RecorderStudent$4 -> com.jajeem.recorder.design.y:
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.jajeem.recorder.design.RecorderStudent$5 -> com.jajeem.recorder.design.z:
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
com.jajeem.recorder.design.RecorderStudent$6 -> com.jajeem.recorder.design.A:
    void run() -> run
com.jajeem.recorder.design.SimpleSoundCapture -> com.jajeem.recorder.design.SimpleSoundCapture:
    com.jajeem.recorder.design.SimpleSoundCapture$Capture capture -> f
    com.jajeem.recorder.design.SimpleSoundCapture$Playback playback -> g
    javax.sound.sampled.AudioInputStream audioInputStream -> a
    javax.swing.JButton playB -> b
    javax.swing.JButton captB -> c
    java.lang.String errStr -> d
    double duration -> e
    javax.swing.JButton addButton(java.lang.String,javax.swing.JPanel,boolean) -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void main(java.lang.String[]) -> main
com.jajeem.recorder.design.SimpleSoundCapture$Capture -> com.jajeem.recorder.design.B:
    javax.sound.sampled.TargetDataLine line -> c
    java.lang.Thread thread -> a
    com.jajeem.recorder.design.SimpleSoundCapture this$0 -> b
    void shutDown(java.lang.String) -> a
    void run() -> run
com.jajeem.recorder.design.SimpleSoundCapture$Playback -> com.jajeem.recorder.design.C:
    javax.sound.sampled.SourceDataLine line -> c
    java.lang.Thread thread -> a
    com.jajeem.recorder.design.SimpleSoundCapture this$0 -> b
    void shutDown(java.lang.String) -> a
    void run() -> run
com.jajeem.recorder.design.TransparentRecordingFrame -> com.jajeem.recorder.design.TransparentRecordingFrame:
    javax.swing.JLabel lblTime -> b
    javax.swing.JLabel lblImage -> c
    long startTime -> a
    void main(java.lang.String[]) -> main
    javax.swing.JLabel access$0(com.jajeem.recorder.design.TransparentRecordingFrame) -> a
com.jajeem.recorder.design.TransparentRecordingFrame$1 -> com.jajeem.recorder.design.D:
    com.jajeem.recorder.design.TransparentRecordingFrame this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    com.jajeem.recorder.design.TransparentRecordingFrame access$0(com.jajeem.recorder.design.TransparentRecordingFrame$1) -> a
com.jajeem.recorder.design.TransparentRecordingFrame$1$1 -> com.jajeem.recorder.design.E:
    com.jajeem.recorder.design.TransparentRecordingFrame$1 this$1 -> a
    java.text.NumberFormat val$format -> b
    void run() -> run
com.jajeem.recorder.design.TransparentRecordingFrame$2 -> com.jajeem.recorder.design.F:
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.room.dao.h2.CourseDAO -> com.jajeem.d.a.a.a:
    com.jajeem.room.model.Course create(com.jajeem.room.model.Course) -> a
    boolean update(com.jajeem.room.model.Course) -> b
    boolean delete(com.jajeem.room.model.Course) -> c
    java.util.ArrayList list() -> a
    java.util.ArrayList getCoursesByInstructorId(int) -> a
com.jajeem.room.model.Course -> com.jajeem.d.b.a:
    int id -> a
    int instructorId -> b
    java.lang.String name -> c
    java.lang.String classType -> d
    java.lang.String level -> e
    long startDate -> f
    int session -> g
    java.lang.String day1 -> h
    int startTime1 -> i
    int endTime1 -> j
    java.lang.String day2 -> k
    int startTime2 -> l
    int endTime2 -> m
    java.lang.String day3 -> n
    int startTime3 -> o
    int endTime3 -> p
    java.lang.String day4 -> q
    int startTime4 -> r
    int endTime4 -> s
    java.lang.String day5 -> t
    int startTime5 -> u
    int endTime5 -> v
    java.lang.String instructor -> w
    int getEndTime2() -> a
    void setEndTime2(int) -> a
    java.lang.String getDay3() -> b
    void setDay3(java.lang.String) -> a
    int getStartTime3() -> c
    void setStartTime3(int) -> b
    int getEndTime3() -> d
    void setEndTime3(int) -> c
    java.lang.String getDay4() -> e
    void setDay4(java.lang.String) -> b
    int getStartTime4() -> f
    void setStartTime4(int) -> d
    int getEndTime4() -> g
    void setEndTime4(int) -> e
    java.lang.String getDay5() -> h
    void setDay5(java.lang.String) -> c
    int getStartTime5() -> i
    void setStartTime5(int) -> f
    int getEndTime5() -> j
    void setEndTime5(int) -> g
    int getId() -> k
    void setId(int) -> h
    java.lang.String getName() -> l
    void setName(java.lang.String) -> d
    java.lang.String getClassType() -> m
    void setClassType(java.lang.String) -> e
    java.lang.String getLevel() -> n
    void setLevel(java.lang.String) -> f
    long getStartDate() -> o
    void setStartDate(long) -> a
    int getSession() -> p
    void setSession(int) -> i
    java.lang.String getInstructor() -> q
    void setInstructor(java.lang.String) -> g
    java.lang.String getDay1() -> r
    void setDay1(java.lang.String) -> h
    int getStartTime1() -> s
    void setStartTime1(int) -> j
    int getEndTime1() -> t
    void setEndTime1(int) -> k
    java.lang.String getDay2() -> u
    void setDay2(java.lang.String) -> i
    int getStartTime2() -> v
    void setStartTime2(int) -> l
    int getInstructorId() -> w
    void setInstructorId(int) -> m
com.jajeem.room.service.RoomService -> com.jajeem.d.c.a:
    com.jajeem.room.dao.h2.CourseDAO courseDAO -> a
    com.jajeem.room.dao.h2.CourseDAO getCourseDAO() -> a
    java.util.ArrayList getCoursesByInstructorId(int) -> a
com.jajeem.share.service.VNCCaptureService -> com.jajeem.e.a.a:
    jrdesktop.viewer.Viewer viewer -> a
    void startClient(jrdesktop.Config) -> a
    void stopClient() -> a
    jrdesktop.viewer.Viewer getViewer() -> b
com.jajeem.survey.dao.h2.QuestionDAO -> com.jajeem.survey.a.a.a:
    com.jajeem.survey.model.Question create(com.jajeem.survey.model.Question) -> a
    boolean update(com.jajeem.survey.model.Question) -> b
    java.util.Collection list(java.util.UUID) -> a
    boolean Contains(com.jajeem.survey.model.Question) -> c
com.jajeem.survey.dao.h2.ResponseDAO -> com.jajeem.survey.a.a.b:
    com.jajeem.survey.model.Response create(com.jajeem.survey.model.Response) -> a
    boolean update(com.jajeem.survey.model.Response) -> b
    boolean Contains(com.jajeem.survey.model.Response) -> c
com.jajeem.survey.dao.h2.RunDAO -> com.jajeem.survey.a.a.c:
    com.jajeem.survey.model.Run create(com.jajeem.survey.model.Run) -> a
    boolean update(com.jajeem.survey.model.Run) -> b
    boolean Contains(com.jajeem.survey.model.Run) -> c
com.jajeem.survey.dao.h2.SurveyDAO -> com.jajeem.survey.a.a.d:
    com.jajeem.survey.model.Survey create(com.jajeem.survey.model.Survey) -> a
    boolean update(com.jajeem.survey.model.Survey) -> b
    java.util.ArrayList list() -> a
    boolean Contains(com.jajeem.survey.model.Survey) -> c
com.jajeem.survey.design.alt.BaseSurveyFrame -> com.jajeem.survey.design.alt.BaseSurveyFrame:
    javax.swing.JPanel panelTop -> a
    com.jajeem.survey.design.alt.CustomSurveyPanel panelContent -> b
    javax.swing.JFrame mainFrame -> c
    int posX -> d
    int posY -> e
    com.jajeem.survey.design.alt.CustomSurveyButton customQuizButton -> f
    java.awt.Container getCloseButton() -> a
    void main(java.lang.String[]) -> main
com.jajeem.survey.design.alt.BaseSurveyFrame$1 -> com.jajeem.survey.design.alt.a:
    com.jajeem.survey.design.alt.BaseSurveyFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.survey.design.alt.BaseSurveyFrame$2 -> com.jajeem.survey.design.alt.b:
    com.jajeem.survey.design.alt.BaseSurveyFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.survey.design.alt.BaseSurveyFrame$3 -> com.jajeem.survey.design.alt.c:
    com.jajeem.survey.design.alt.BaseSurveyFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.survey.design.alt.BaseSurveyOpenFrame -> com.jajeem.survey.design.alt.BaseSurveyOpenFrame:
    com.jajeem.survey.design.alt.CustomSurveyPanel panelContent -> a
    javax.swing.JFrame mainFrame -> b
    int posX -> c
    int posY -> d
    com.jajeem.survey.design.alt.CustomSurveyButton customQuizButton -> e
    java.awt.Container getCloseButton() -> a
    void main(java.lang.String[]) -> main
com.jajeem.survey.design.alt.BaseSurveyOpenFrame$1 -> com.jajeem.survey.design.alt.d:
    com.jajeem.survey.design.alt.BaseSurveyOpenFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.survey.design.alt.BaseSurveyOpenFrame$2 -> com.jajeem.survey.design.alt.e:
    com.jajeem.survey.design.alt.BaseSurveyOpenFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.survey.design.alt.BaseSurveyOpenFrame$3 -> com.jajeem.survey.design.alt.f:
    com.jajeem.survey.design.alt.BaseSurveyOpenFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.survey.design.alt.CustomSurveyButton -> com.jajeem.survey.design.alt.g:
    java.awt.image.BufferedImage background -> c
    boolean isRollOver -> a
    boolean isPressed -> b
    java.lang.String uri -> d
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.survey.design.alt.CustomSurveyButton$1 -> com.jajeem.survey.design.alt.h:
    com.jajeem.survey.design.alt.CustomSurveyButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.survey.design.alt.CustomSurveyPanel -> com.jajeem.survey.design.alt.i:
    java.awt.image.BufferedImage originalImage -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.jajeem.survey.design.alt.Survey_AbstractViews -> com.jajeem.survey.design.alt.j:
com.jajeem.survey.design.alt.Survey_FirstPage -> com.jajeem.survey.design.alt.k:
    com.jajeem.survey.design.alt.Survey_QuestionListPanel webQuestionListPanel -> a
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel webQuestionDesignPanel -> b
    com.alee.laf.text.WebTextField wbtxtfldDirection -> c
    com.alee.laf.button.WebButton wbtnAdd -> d
    com.alee.laf.button.WebButton wbtnCopy -> e
    com.alee.laf.button.WebButton wbtnDelete -> f
    com.jajeem.survey.design.alt.Survey_Main parentPanel -> g
    com.jajeem.survey.design.alt.Survey_QuestionListPanel getWebQuestionListPanel() -> a
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel getWebQuestionDesignPanel() -> b
    void clear() -> c
    com.jajeem.survey.design.alt.Survey_Main getParentPanel() -> d
    void loadCurrentSurvey(com.jajeem.survey.model.Survey) -> a
    com.jajeem.survey.design.alt.Survey_Main access$0(com.jajeem.survey.design.alt.Survey_FirstPage) -> a
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel access$1(com.jajeem.survey.design.alt.Survey_FirstPage) -> b
    com.jajeem.survey.design.alt.Survey_QuestionListPanel access$2(com.jajeem.survey.design.alt.Survey_FirstPage) -> c
    com.alee.laf.text.WebTextField access$3(com.jajeem.survey.design.alt.Survey_FirstPage) -> d
com.jajeem.survey.design.alt.Survey_FirstPage$1 -> com.jajeem.survey.design.alt.l:
    com.jajeem.survey.design.alt.Survey_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_FirstPage$2 -> com.jajeem.survey.design.alt.m:
    com.jajeem.survey.design.alt.Survey_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_FirstPage$3 -> com.jajeem.survey.design.alt.n:
    com.jajeem.survey.design.alt.Survey_FirstPage this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_FirstPage$4 -> com.jajeem.survey.design.alt.o:
    com.jajeem.survey.design.alt.Survey_FirstPage this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_Main -> com.jajeem.survey.design.alt.Survey_Main:
    com.jajeem.survey.design.alt.BaseSurveyFrame frame -> a
    com.jajeem.survey.model.Run currentRun -> b
    com.jajeem.survey.model.Question currentQuestion -> c
    boolean eventsEnabled -> d
    com.jajeem.survey.design.alt.Survey_FirstPage firstPage -> e
    com.jajeem.survey.design.alt.Survey_SecondPage secondPage -> f
    com.jajeem.survey.design.alt.Survey_Main mainFrame -> g
    java.util.List studentIps -> h
    int gIndex -> i
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnNew -> j
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnOpen -> k
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnSave -> l
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnSaveResults -> m
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnContent -> n
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnStart -> o
    com.alee.laf.panel.WebPanel webPanel -> p
    void main(java.lang.String[]) -> main
    void newSurveyRun() -> a
    void StartSurveyCommand() -> b
    com.jajeem.core.model.Instructor getCurrentInstructor() -> c
    com.jajeem.room.model.Course getCurrentCourse() -> j
    com.jajeem.survey.model.Question getCurrentQuestion() -> d
    void setCurrentQuestion(com.jajeem.survey.model.Question) -> a
    void setEventsEnabled(boolean) -> a
    com.jajeem.survey.model.Run getCurrentRun() -> e
    boolean isEventsEnabled() -> f
    void setCurrentSurvey(com.jajeem.survey.model.Survey) -> a
    void loadCurrentSurvey() -> g
    int listeningPort() -> h
    javax.swing.JFrame getFrame() -> i
    com.jajeem.survey.design.alt.BaseSurveyFrame access$0(com.jajeem.survey.design.alt.Survey_Main) -> a
    int access$1(com.jajeem.survey.design.alt.Survey_Main) -> b
    void access$2(com.jajeem.survey.design.alt.Survey_Main) -> c
    java.lang.String access$3(com.jajeem.survey.design.alt.Survey_Main) -> d
    com.alee.laf.panel.WebPanel access$4(com.jajeem.survey.design.alt.Survey_Main) -> e
    com.jajeem.survey.design.alt.CustomSurveyButton access$5(com.jajeem.survey.design.alt.Survey_Main) -> f
    com.jajeem.survey.design.alt.CustomSurveyButton access$6(com.jajeem.survey.design.alt.Survey_Main) -> g
    com.jajeem.survey.design.alt.CustomSurveyButton access$7(com.jajeem.survey.design.alt.Survey_Main) -> h
    com.jajeem.survey.design.alt.CustomSurveyButton access$8(com.jajeem.survey.design.alt.Survey_Main) -> i
    com.jajeem.survey.design.alt.CustomSurveyButton access$9(com.jajeem.survey.design.alt.Survey_Main) -> j
    void access$10(com.jajeem.survey.design.alt.Survey_Main,boolean) -> a
    com.jajeem.survey.design.alt.Survey_SecondPage access$11(com.jajeem.survey.design.alt.Survey_Main) -> k
    com.jajeem.survey.design.alt.Survey_FirstPage access$12(com.jajeem.survey.design.alt.Survey_Main) -> l
    com.jajeem.survey.model.Run access$13(com.jajeem.survey.design.alt.Survey_Main) -> m
    com.jajeem.survey.design.alt.Survey_Main access$14(com.jajeem.survey.design.alt.Survey_Main) -> n
com.jajeem.survey.design.alt.Survey_Main$1 -> com.jajeem.survey.design.alt.p:
    void run() -> run
com.jajeem.survey.design.alt.Survey_Main$10 -> com.jajeem.survey.design.alt.q:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$2 -> com.jajeem.survey.design.alt.r:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$3 -> com.jajeem.survey.design.alt.s:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
com.jajeem.survey.design.alt.Survey_Main$4 -> com.jajeem.survey.design.alt.t:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.survey.design.alt.Survey_Main$5 -> com.jajeem.survey.design.alt.u:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$6 -> com.jajeem.survey.design.alt.v:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$7 -> com.jajeem.survey.design.alt.w:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$8 -> com.jajeem.survey.design.alt.x:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_Main$9 -> com.jajeem.survey.design.alt.y:
    com.jajeem.survey.design.alt.Survey_Main this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_OpenDialog -> com.jajeem.survey.design.alt.Survey_OpenDialog:
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnCancel -> e
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnOpen -> f
    com.alee.laf.table.WebTable wbTblQuestion -> g
    com.alee.laf.table.WebTable wbTblSurvey -> h
    java.util.ArrayList surveyList -> i
    com.jajeem.survey.design.alt.Survey_Main parentFrame -> j
    void main(java.lang.String[]) -> main
    com.alee.laf.table.WebTable access$0(com.jajeem.survey.design.alt.Survey_OpenDialog) -> a
    java.util.ArrayList access$1(com.jajeem.survey.design.alt.Survey_OpenDialog) -> b
    com.jajeem.survey.design.alt.Survey_Main access$2(com.jajeem.survey.design.alt.Survey_OpenDialog) -> c
    com.alee.laf.table.WebTable access$3(com.jajeem.survey.design.alt.Survey_OpenDialog) -> d
com.jajeem.survey.design.alt.Survey_OpenDialog$1 -> com.jajeem.survey.design.alt.z:
    void run() -> run
com.jajeem.survey.design.alt.Survey_OpenDialog$2 -> com.jajeem.survey.design.alt.A:
    com.jajeem.survey.design.alt.Survey_OpenDialog this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.survey.design.alt.Survey_OpenDialog$3 -> com.jajeem.survey.design.alt.B:
    com.jajeem.survey.design.alt.Survey_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_OpenDialog$4 -> com.jajeem.survey.design.alt.C:
    com.jajeem.survey.design.alt.Survey_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_OpenDialog$5 -> com.jajeem.survey.design.alt.D:
    com.jajeem.survey.design.alt.Survey_OpenDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.alt.Survey_OpenDialog$6 -> com.jajeem.survey.design.alt.E:
    com.jajeem.survey.design.alt.Survey_OpenDialog this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel -> com.jajeem.survey.design.alt.F:
    com.alee.laf.text.WebTextField webTextField -> a
    com.alee.laf.text.WebTextField webTextField_1 -> b
    com.alee.laf.text.WebTextField webTextField_2 -> c
    com.alee.laf.text.WebTextField webTextField_3 -> d
    com.alee.laf.text.WebTextField webTextField_4 -> e
    com.alee.laf.text.WebTextArea webTextArea -> f
    com.alee.laf.scroll.WebScrollPane webScrollPane -> g
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> h
    com.alee.laf.label.WebLabel wblblQuestion -> i
    com.jajeem.survey.design.alt.Survey_FirstPage parentPanel -> j
    void _itemStateChanged(java.awt.event.ItemEvent) -> a
    com.alee.laf.text.WebTextArea getWebTextArea() -> a
    com.jajeem.ui.combobox.JajeemComboBox getWebComboBox() -> b
    com.alee.laf.text.WebTextField getWebTextField() -> c
    com.alee.laf.text.WebTextField getWebTextField_1() -> d
    com.alee.laf.text.WebTextField getWebTextField_2() -> e
    com.alee.laf.text.WebTextField getWebTextField_3() -> f
    com.alee.laf.text.WebTextField getWebTextField_4() -> g
    com.alee.laf.label.WebLabel getWblblQuestion() -> h
    com.alee.laf.scroll.WebScrollPane getWebScrollPane() -> i
    void clear() -> j
    void WebComboboxSelectionChanged(java.lang.String) -> a
    com.jajeem.survey.design.alt.Survey_FirstPage access$0(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> a
    com.alee.laf.text.WebTextArea access$1(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> b
    com.alee.laf.text.WebTextField access$2(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> c
    com.alee.laf.text.WebTextField access$3(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> d
    com.alee.laf.text.WebTextField access$4(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> e
    com.alee.laf.text.WebTextField access$5(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> f
    com.alee.laf.text.WebTextField access$6(com.jajeem.survey.design.alt.Survey_QuestionDesignPanel) -> g
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$1 -> com.jajeem.survey.design.alt.G:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$2 -> com.jajeem.survey.design.alt.H:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$3 -> com.jajeem.survey.design.alt.I:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$4 -> com.jajeem.survey.design.alt.J:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$5 -> com.jajeem.survey.design.alt.K:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$6 -> com.jajeem.survey.design.alt.L:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionDesignPanel$7 -> com.jajeem.survey.design.alt.M:
    com.jajeem.survey.design.alt.Survey_QuestionDesignPanel this$0 -> a
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.design.alt.Survey_QuestionListPanel -> com.jajeem.survey.design.alt.N:
    com.alee.laf.table.WebTable webTable -> a
    com.alee.laf.scroll.WebScrollPane webScrollPane -> b
    com.jajeem.survey.design.alt.Survey_FirstPage parentPanel -> c
    com.alee.laf.table.WebTable getWebTable() -> a
    void clear() -> b
    com.jajeem.survey.design.alt.Survey_FirstPage access$0(com.jajeem.survey.design.alt.Survey_QuestionListPanel) -> a
    com.alee.laf.table.WebTable access$1(com.jajeem.survey.design.alt.Survey_QuestionListPanel) -> b
com.jajeem.survey.design.alt.Survey_QuestionListPanel$1 -> com.jajeem.survey.design.alt.O:
    boolean[] columnEditables -> a
    boolean isCellEditable(int,int) -> isCellEditable
com.jajeem.survey.design.alt.Survey_QuestionListPanel$2 -> com.jajeem.survey.design.alt.P:
    com.jajeem.survey.design.alt.Survey_QuestionListPanel this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
com.jajeem.survey.design.alt.Survey_SecondPage -> com.jajeem.survey.design.alt.Q:
    com.jajeem.survey.design.alt.Survey_SecondPage_Question_View panel_bottom_21 -> a
    com.jajeem.survey.design.alt.Survey_SecondPage_Student_View panel_bottom_22 -> b
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> c
    com.alee.laf.panel.WebPanel cards -> d
    com.jajeem.survey.design.alt.Survey_Main parentPanel -> e
    com.jajeem.survey.model.Survey currentSurvey -> f
    java.util.ArrayList surveyResponse -> g
    java.util.ArrayList runResults -> h
    com.jajeem.events.SurveyEvent responseRecieved -> i
    void clear() -> a
    void LoadSurvey(com.jajeem.survey.model.Survey) -> a
    java.util.ArrayList getSurveyResponse() -> b
    com.jajeem.survey.model.Survey getCurrentSurvey() -> c
    java.util.ArrayList getRunResults() -> d
    com.jajeem.survey.design.alt.Survey_SecondPage_Question_View getPanel_bottom_21() -> e
    com.alee.laf.panel.WebPanel access$0(com.jajeem.survey.design.alt.Survey_SecondPage) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$1(com.jajeem.survey.design.alt.Survey_SecondPage) -> b
    com.jajeem.survey.design.alt.Survey_Main access$2(com.jajeem.survey.design.alt.Survey_SecondPage) -> c
    com.jajeem.survey.design.alt.Survey_SecondPage_Question_View access$3(com.jajeem.survey.design.alt.Survey_SecondPage) -> d
    com.jajeem.survey.design.alt.Survey_SecondPage_Student_View access$4(com.jajeem.survey.design.alt.Survey_SecondPage) -> e
    java.util.ArrayList access$5(com.jajeem.survey.design.alt.Survey_SecondPage) -> f
com.jajeem.survey.design.alt.Survey_SecondPage$1 -> com.jajeem.survey.design.alt.R:
    com.jajeem.survey.design.alt.Survey_SecondPage this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.survey.design.alt.Survey_SecondPage$2 -> com.jajeem.survey.design.alt.S:
    com.jajeem.survey.design.alt.Survey_SecondPage this$0 -> a
    void questionAnswered(com.jajeem.events.SurveyResponse) -> a
    void surveyFinished(com.jajeem.events.SurveyFinished) -> a
com.jajeem.survey.design.alt.Survey_SecondPage_Question_View -> com.jajeem.survey.design.alt.T:
    com.alee.laf.table.WebTable webTable -> a
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> b
    com.alee.laf.text.WebTextArea webTextArea -> c
    com.alee.laf.text.WebTextField webTextField -> d
    com.jajeem.survey.design.alt.Survey_SecondPage parentPanel -> e
    com.jajeem.survey.model.Question currentQuestion -> f
    com.alee.laf.text.WebTextField webTextField_2 -> g
    java.util.ArrayList surveyResponse -> h
    java.util.ArrayList studentList -> i
    com.jajeem.survey.model.Survey currentSurvey -> j
    void clearSurvey() -> a
    void LoadSurvey(com.jajeem.survey.model.Survey) -> a
    void QuestionAnswered(com.jajeem.events.SurveyResponse) -> a
    com.jajeem.survey.model.Survey access$0(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$1(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> b
    void access$2(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View,com.jajeem.survey.model.Question) -> a
    com.alee.laf.text.WebTextArea access$3(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> c
    com.jajeem.survey.model.Question access$4(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> d
    com.alee.laf.text.WebTextField access$5(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> e
    com.alee.laf.table.WebTable access$6(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> f
    java.util.ArrayList access$7(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> g
    java.util.ArrayList access$8(com.jajeem.survey.design.alt.Survey_SecondPage_Question_View) -> h
com.jajeem.survey.design.alt.Survey_SecondPage_Question_View$1 -> com.jajeem.survey.design.alt.U:
    com.jajeem.survey.design.alt.Survey_SecondPage_Question_View this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.survey.design.alt.Survey_SecondPage_Student_View -> com.jajeem.survey.design.alt.V:
    javax.swing.JTextField textField -> a
    com.alee.laf.table.WebTable webTable -> b
    com.jajeem.ui.combobox.JajeemComboBox webComboBox -> c
    com.jajeem.survey.design.alt.Survey_SecondPage parentPanel -> d
    com.jajeem.core.model.Student currentStudent -> e
    java.util.ArrayList surveyResponse -> f
    com.jajeem.survey.model.Survey currentSurvey -> g
    void QuestionAnswered(com.jajeem.events.SurveyResponse) -> a
    void LoadSurvey(com.jajeem.survey.model.Survey) -> a
    void clearSurvey() -> a
    java.util.ArrayList access$0(com.jajeem.survey.design.alt.Survey_SecondPage_Student_View) -> a
    void access$1(com.jajeem.survey.design.alt.Survey_SecondPage_Student_View,com.jajeem.core.model.Student) -> a
    com.jajeem.ui.combobox.JajeemComboBox access$2(com.jajeem.survey.design.alt.Survey_SecondPage_Student_View) -> b
    com.jajeem.core.model.Student access$3(com.jajeem.survey.design.alt.Survey_SecondPage_Student_View) -> c
    com.alee.laf.table.WebTable access$4(com.jajeem.survey.design.alt.Survey_SecondPage_Student_View) -> d
com.jajeem.survey.design.alt.Survey_SecondPage_Student_View$1 -> com.jajeem.survey.design.alt.W:
    com.jajeem.survey.design.alt.Survey_SecondPage_Student_View this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.survey.design.alt.Survey_SecondPage_Student_View$WebTableModel -> com.jajeem.survey.design.alt.X:
    java.lang.Class getColumnClass(int) -> getColumnClass
com.jajeem.survey.design.client.alt.BaseSurveyClientFrame -> com.jajeem.survey.design.client.alt.a:
    javax.swing.JPanel panelTop -> a
    com.jajeem.util.CustomPanel panelContent -> b
    javax.swing.JFrame mainFrame -> c
    int posX -> d
    int posY -> e
com.jajeem.survey.design.client.alt.BaseSurveyClientFrame$1 -> com.jajeem.survey.design.client.alt.b:
    com.jajeem.survey.design.client.alt.BaseSurveyClientFrame this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.BaseSurveyClientFrame$2 -> com.jajeem.survey.design.client.alt.c:
    com.jajeem.survey.design.client.alt.BaseSurveyClientFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.survey.design.client.alt.BaseSurveyClientFrame$3 -> com.jajeem.survey.design.client.alt.d:
    com.jajeem.survey.design.client.alt.BaseSurveyClientFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.survey.design.client.alt.BaseSurveyClientFrame$4 -> com.jajeem.survey.design.client.alt.e:
    com.jajeem.survey.design.client.alt.BaseSurveyClientFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.survey.design.client.alt.Survey_Window -> com.jajeem.survey.design.client.alt.Survey_Window:
    com.alee.laf.text.WebTextField txtDirection -> g
    com.alee.laf.text.WebTextField txtTime -> h
    com.alee.laf.text.WebTextField textField -> i
    com.alee.laf.text.WebTextField textField_1 -> j
    com.alee.laf.text.WebTextField textField_2 -> k
    com.alee.laf.text.WebTextField textField_3 -> l
    com.alee.laf.text.WebTextField textField_4 -> m
    com.alee.laf.text.WebTextField textField_5 -> n
    com.alee.laf.text.WebTextField textField_6 -> o
    com.alee.laf.text.WebTextField textField_7 -> p
    com.alee.laf.text.WebTextField textField_8 -> q
    com.alee.laf.text.WebTextField textField_9 -> r
    com.jajeem.survey.model.Question currentQuestion -> f
    com.jajeem.events.SurveyEvent surveyEvent -> s
    java.util.ArrayList sendQueue -> t
    int sid -> u
    com.jajeem.core.model.Student privateStudent -> v
    com.jajeem.survey.model.Run currentRun -> w
    java.lang.String server -> z
    int listenPort -> A
    javax.swing.DefaultListModel model -> B
    com.alee.laf.list.WebList webList -> C
    com.alee.laf.radiobutton.WebRadioButton radioButton -> D
    com.alee.laf.radiobutton.WebRadioButton radioButton_1 -> E
    com.alee.laf.radiobutton.WebRadioButton radioButton_2 -> F
    com.alee.laf.radiobutton.WebRadioButton radioButton_3 -> G
    com.alee.laf.radiobutton.WebRadioButton radioButton_4 -> H
    com.alee.laf.checkbox.WebCheckBox webCheckBox -> I
    com.alee.laf.checkbox.WebCheckBox webCheckBox_1 -> J
    com.alee.laf.checkbox.WebCheckBox webCheckBox_2 -> K
    com.alee.laf.checkbox.WebCheckBox webCheckBox_3 -> L
    com.alee.laf.checkbox.WebCheckBox webCheckBox_4 -> M
    com.alee.laf.text.WebTextArea webTextArea -> N
    com.alee.laf.text.WebTextArea webTextArea_1 -> O
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnNext -> P
    com.jajeem.survey.design.alt.CustomSurveyButton wbtnPrevious -> Q
    javax.swing.JLabel lblQuestion -> R
    javax.swing.JPanel mainPanel -> S
    void main(java.lang.String[]) -> main
    void setServer(java.lang.String) -> a
    void setReceivePort(int) -> a
    com.jajeem.survey.model.Run access$0(com.jajeem.survey.design.client.alt.Survey_Window) -> a
    javax.swing.DefaultListModel access$1(com.jajeem.survey.design.client.alt.Survey_Window) -> b
    com.alee.laf.list.WebList access$2(com.jajeem.survey.design.client.alt.Survey_Window) -> c
    com.alee.laf.text.WebTextField access$3(com.jajeem.survey.design.client.alt.Survey_Window) -> d
    com.alee.laf.radiobutton.WebRadioButton access$4(com.jajeem.survey.design.client.alt.Survey_Window) -> e
    com.alee.laf.radiobutton.WebRadioButton access$5(com.jajeem.survey.design.client.alt.Survey_Window) -> f
    com.alee.laf.radiobutton.WebRadioButton access$6(com.jajeem.survey.design.client.alt.Survey_Window) -> g
    com.alee.laf.radiobutton.WebRadioButton access$7(com.jajeem.survey.design.client.alt.Survey_Window) -> h
    com.alee.laf.radiobutton.WebRadioButton access$8(com.jajeem.survey.design.client.alt.Survey_Window) -> i
    com.alee.laf.checkbox.WebCheckBox access$9(com.jajeem.survey.design.client.alt.Survey_Window) -> j
    com.alee.laf.checkbox.WebCheckBox access$10(com.jajeem.survey.design.client.alt.Survey_Window) -> k
    com.alee.laf.checkbox.WebCheckBox access$11(com.jajeem.survey.design.client.alt.Survey_Window) -> l
    com.alee.laf.checkbox.WebCheckBox access$12(com.jajeem.survey.design.client.alt.Survey_Window) -> m
    com.alee.laf.checkbox.WebCheckBox access$13(com.jajeem.survey.design.client.alt.Survey_Window) -> n
    com.alee.laf.text.WebTextArea access$14(com.jajeem.survey.design.client.alt.Survey_Window) -> o
    java.util.ArrayList access$15(com.jajeem.survey.design.client.alt.Survey_Window) -> p
    int access$16(com.jajeem.survey.design.client.alt.Survey_Window) -> q
    java.lang.String access$17(com.jajeem.survey.design.client.alt.Survey_Window) -> r
    com.jajeem.core.model.Student access$18(com.jajeem.survey.design.client.alt.Survey_Window) -> s
    javax.swing.JLabel access$19(com.jajeem.survey.design.client.alt.Survey_Window) -> t
    com.alee.laf.text.WebTextArea access$20(com.jajeem.survey.design.client.alt.Survey_Window) -> u
    javax.swing.JPanel access$21(com.jajeem.survey.design.client.alt.Survey_Window) -> v
    com.alee.laf.text.WebTextField access$22(com.jajeem.survey.design.client.alt.Survey_Window) -> w
    com.alee.laf.text.WebTextField access$23(com.jajeem.survey.design.client.alt.Survey_Window) -> x
    com.alee.laf.text.WebTextField access$24(com.jajeem.survey.design.client.alt.Survey_Window) -> y
    com.alee.laf.text.WebTextField access$25(com.jajeem.survey.design.client.alt.Survey_Window) -> z
    com.alee.laf.text.WebTextField access$26(com.jajeem.survey.design.client.alt.Survey_Window) -> A
    com.alee.laf.text.WebTextField access$27(com.jajeem.survey.design.client.alt.Survey_Window) -> B
    com.alee.laf.text.WebTextField access$28(com.jajeem.survey.design.client.alt.Survey_Window) -> C
    com.alee.laf.text.WebTextField access$29(com.jajeem.survey.design.client.alt.Survey_Window) -> D
    com.alee.laf.text.WebTextField access$30(com.jajeem.survey.design.client.alt.Survey_Window) -> E
    com.alee.laf.text.WebTextField access$31(com.jajeem.survey.design.client.alt.Survey_Window) -> F
    com.jajeem.survey.design.alt.CustomSurveyButton access$32(com.jajeem.survey.design.client.alt.Survey_Window) -> G
com.jajeem.survey.design.client.alt.Survey_Window$1 -> com.jajeem.survey.design.client.alt.f:
    void run() -> run
com.jajeem.survey.design.client.alt.Survey_Window$10 -> com.jajeem.survey.design.client.alt.g:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$11 -> com.jajeem.survey.design.client.alt.h:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$12 -> com.jajeem.survey.design.client.alt.i:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$13 -> com.jajeem.survey.design.client.alt.j:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$14 -> com.jajeem.survey.design.client.alt.k:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$15 -> com.jajeem.survey.design.client.alt.l:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$16 -> com.jajeem.survey.design.client.alt.m:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    com.jajeem.survey.design.client.alt.Survey_Window access$0(com.jajeem.survey.design.client.alt.Survey_Window$16) -> a
com.jajeem.survey.design.client.alt.Survey_Window$16$1 -> com.jajeem.survey.design.client.alt.n:
    com.jajeem.survey.design.client.alt.Survey_Window$16 this$1 -> a
    void run() -> run
com.jajeem.survey.design.client.alt.Survey_Window$2 -> com.jajeem.survey.design.client.alt.o:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
com.jajeem.survey.design.client.alt.Survey_Window$3 -> com.jajeem.survey.design.client.alt.p:
    void questionAnswered(com.jajeem.events.SurveyResponse) -> a
    void surveyFinished(com.jajeem.events.SurveyFinished) -> a
com.jajeem.survey.design.client.alt.Survey_Window$4 -> com.jajeem.survey.design.client.alt.q:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
    com.jajeem.survey.design.client.alt.Survey_Window access$0(com.jajeem.survey.design.client.alt.Survey_Window$4) -> a
com.jajeem.survey.design.client.alt.Survey_Window$4$1 -> com.jajeem.survey.design.client.alt.r:
    com.jajeem.survey.design.client.alt.Survey_Window$4 this$1 -> a
    void run() -> run
com.jajeem.survey.design.client.alt.Survey_Window$5 -> com.jajeem.survey.design.client.alt.s:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$6 -> com.jajeem.survey.design.client.alt.t:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$7 -> com.jajeem.survey.design.client.alt.u:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$8 -> com.jajeem.survey.design.client.alt.v:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.design.client.alt.Survey_Window$9 -> com.jajeem.survey.design.client.alt.w:
    com.jajeem.survey.design.client.alt.Survey_Window this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.model.Question -> com.jajeem.survey.b.a:
    java.util.UUID id -> a
    int instructorId -> b
    java.util.UUID surveyId -> c
    java.lang.String title -> d
    byte type -> e
    java.lang.String imagePath -> f
    java.lang.String url -> g
    java.lang.String answer1 -> h
    java.lang.String answer2 -> i
    java.lang.String answer3 -> j
    java.lang.String answer4 -> k
    java.lang.String answer5 -> l
    com.jajeem.survey.model.Response response -> m
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    java.util.UUID getSurveyId() -> c
    void setSurveyId(java.util.UUID) -> b
    java.lang.String getTitle() -> d
    void setTitle(java.lang.String) -> a
    byte getType() -> e
    void setType(byte) -> a
    java.lang.String getImagePath() -> f
    void setImagePath(java.lang.String) -> b
    java.lang.String getUrl() -> g
    void setUrl(java.lang.String) -> c
    java.lang.String getAnswer1() -> h
    void setAnswer1(java.lang.String) -> d
    java.lang.String getAnswer2() -> i
    void setAnswer2(java.lang.String) -> e
    java.lang.String getAnswer3() -> j
    void setAnswer3(java.lang.String) -> f
    java.lang.String getAnswer4() -> k
    void setAnswer4(java.lang.String) -> g
    java.lang.String getAnswer5() -> l
    void setAnswer5(java.lang.String) -> h
    void setStudentAnswer(boolean[]) -> a
    void setStudentAnswer(java.lang.String) -> i
    boolean[] getStudentAnswer() -> m
    java.lang.String getStudentTextAnswer() -> n
    com.jajeem.survey.model.Response getResponse() -> o
com.jajeem.survey.model.Response -> com.jajeem.survey.b.b:
    java.util.UUID id -> a
    java.util.UUID runId -> b
    int studentId -> c
    java.lang.String answer -> d
    boolean[] boolAnswer -> e
    java.util.UUID surveyQuestionId -> f
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    java.util.UUID getRunId() -> b
    void setRunId(java.util.UUID) -> b
    int getStudentId() -> c
    void setStudentId(int) -> a
    java.lang.String getAnswer() -> d
    void setAnswer(java.lang.String) -> a
    boolean[] getBoolAnswer() -> e
    void setBoolAnswer(boolean[]) -> a
    java.util.UUID getSurveyQuestionId() -> f
    void setSurveyQuestionId(java.util.UUID) -> c
com.jajeem.survey.model.Run -> com.jajeem.survey.b.c:
    java.util.UUID id -> a
    com.jajeem.core.model.Instructor instructor -> b
    com.jajeem.room.model.Course course -> c
    com.jajeem.survey.model.Survey survey -> d
    long start -> e
    long end -> f
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    int getCourseId() -> c
    java.util.UUID getSurveyId() -> d
    void setSurveyId(java.util.UUID) -> b
    long getStart() -> e
    void setStart(long) -> a
    long getEnd() -> f
    void setEnd(long) -> b
    com.jajeem.survey.model.Survey getSurvey() -> g
    void setSurvey(com.jajeem.survey.model.Survey) -> a
    void setInstructor(com.jajeem.core.model.Instructor) -> a
    void setCourse(com.jajeem.room.model.Course) -> a
com.jajeem.survey.model.Survey -> com.jajeem.survey.b.d:
    java.util.UUID id -> a
    int instructorId -> b
    java.lang.String title -> c
    java.lang.String category -> d
    java.lang.String description -> e
    java.util.ArrayList questions -> f
    java.util.UUID getId() -> a
    void setId(java.util.UUID) -> a
    int getInstructorId() -> b
    void setInstructorId(int) -> a
    java.lang.String getTitle() -> c
    void setTitle(java.lang.String) -> a
    java.lang.String getCategory() -> d
    void setCategory(java.lang.String) -> b
    java.lang.String getDescription() -> e
    void setDescription(java.lang.String) -> c
    void addQuestion(com.jajeem.survey.model.Question) -> a
    java.util.ArrayList getQuestionList() -> f
com.jajeem.survey.service.ResultService -> com.jajeem.survey.c.a:
com.jajeem.survey.service.SurveyService -> com.jajeem.survey.c.b:
    com.jajeem.survey.dao.h2.SurveyDAO surveyDAO -> a
    com.jajeem.survey.model.Survey create(com.jajeem.survey.model.Survey) -> a
    java.util.ArrayList list() -> a
com.jajeem.survey.windows.TeacherSurveyWindow -> com.jajeem.survey.windows.TeacherSurveyWindow:
    javax.swing.JFrame frmSurvey -> a
    javax.swing.JTextField textField_9 -> b
    javax.swing.JComboBox comboBoxQuestionType -> c
    javax.swing.JTextArea textArea -> d
    java.util.ArrayList surveyList -> e
    javax.swing.JTextField textField_3 -> f
    javax.swing.JTextField textField_4 -> g
    javax.swing.JTextField textField_5 -> h
    javax.swing.JTextField textField_6 -> i
    javax.swing.JTextField textField_7 -> j
    javax.swing.JTextField textFieldcard2 -> k
    javax.swing.JTextField textField_1card2 -> l
    javax.swing.JPanel panel_1 -> m
    javax.swing.JPanel panel_2 -> n
    javax.swing.JRadioButton radioButton -> o
    javax.swing.JRadioButton radioButton_1 -> p
    javax.swing.JRadioButton radioButton_2 -> q
    javax.swing.JRadioButton radioButton_3 -> r
    javax.swing.JRadioButton radioButton_4 -> s
    javax.swing.JTextField textField_2 -> t
    void main(java.lang.String[]) -> main
    javax.swing.JFrame access$0(com.jajeem.survey.windows.TeacherSurveyWindow) -> a
    void access$1(com.jajeem.survey.windows.TeacherSurveyWindow,java.util.ArrayList) -> a
    java.util.ArrayList access$2(com.jajeem.survey.windows.TeacherSurveyWindow) -> b
    javax.swing.JTextField access$4(com.jajeem.survey.windows.TeacherSurveyWindow) -> c
    javax.swing.JTextArea access$5(com.jajeem.survey.windows.TeacherSurveyWindow) -> d
    javax.swing.JTextField access$6(com.jajeem.survey.windows.TeacherSurveyWindow) -> e
    javax.swing.JTextField access$7(com.jajeem.survey.windows.TeacherSurveyWindow) -> f
    javax.swing.JTextField access$8(com.jajeem.survey.windows.TeacherSurveyWindow) -> g
    javax.swing.JTextField access$9(com.jajeem.survey.windows.TeacherSurveyWindow) -> h
    javax.swing.JTextField access$10(com.jajeem.survey.windows.TeacherSurveyWindow) -> i
    javax.swing.JRadioButton access$11(com.jajeem.survey.windows.TeacherSurveyWindow) -> j
    javax.swing.JRadioButton access$12(com.jajeem.survey.windows.TeacherSurveyWindow) -> k
    javax.swing.JRadioButton access$13(com.jajeem.survey.windows.TeacherSurveyWindow) -> l
    javax.swing.JRadioButton access$14(com.jajeem.survey.windows.TeacherSurveyWindow) -> m
    javax.swing.JRadioButton access$15(com.jajeem.survey.windows.TeacherSurveyWindow) -> n
    javax.swing.JComboBox access$16(com.jajeem.survey.windows.TeacherSurveyWindow) -> o
    javax.swing.JTextField access$17(com.jajeem.survey.windows.TeacherSurveyWindow) -> p
com.jajeem.survey.windows.TeacherSurveyWindow$1 -> com.jajeem.survey.windows.a:
    void run() -> run
com.jajeem.survey.windows.TeacherSurveyWindow$10 -> com.jajeem.survey.windows.b:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$11 -> com.jajeem.survey.windows.c:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$12 -> com.jajeem.survey.windows.d:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$13 -> com.jajeem.survey.windows.e:
    javax.swing.JPanel val$mainPanel -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$14 -> com.jajeem.survey.windows.f:
    javax.swing.JPanel val$mainPanel -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$15 -> com.jajeem.survey.windows.g:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$2 -> com.jajeem.survey.windows.h:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
com.jajeem.survey.windows.TeacherSurveyWindow$3 -> com.jajeem.survey.windows.i:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$4 -> com.jajeem.survey.windows.j:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$5 -> com.jajeem.survey.windows.k:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.survey.windows.TeacherSurveyWindow$6 -> com.jajeem.survey.windows.l:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$7 -> com.jajeem.survey.windows.m:
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
com.jajeem.survey.windows.TeacherSurveyWindow$8 -> com.jajeem.survey.windows.n:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.survey.windows.TeacherSurveyWindow$9 -> com.jajeem.survey.windows.o:
    com.jajeem.survey.windows.TeacherSurveyWindow this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.ui.checkbox.JajeemCheckBoxUI -> com.jajeem.ui.checkbox.JajeemCheckBoxUI:
    float[] fractions -> j
    java.awt.Color borderColor -> k
    java.awt.Color darkBorderColor -> l
    java.awt.Color disabledBorderColor -> m
    java.awt.Color topBgColor -> n
    java.awt.Color bottomBgColor -> o
    java.awt.Color topSelectedBgColor -> p
    java.awt.Color bottomSelectedBgColor -> q
    int round -> r
    int shadeWidth -> s
    java.awt.Insets margin -> t
    boolean animated -> u
    boolean rolloverDarkBorderOnly -> v
    java.awt.Stroke borderStroke -> w
    int iconWidth -> a
    int iconHeight -> b
    int bgDarkness -> c
    boolean rollover -> d
    com.jajeem.ui.checkbox.WebTimer bgTimer -> e
    com.alee.laf.checkbox.CheckIcon checkIcon -> f
    com.jajeem.ui.checkbox.WebTimer checkTimer -> g
    java.awt.Rectangle iconRect -> h
    javax.swing.JCheckBox checkBox -> i
    java.beans.PropertyChangeListener enabledStateListener -> x
    java.awt.event.MouseAdapter mouseAdapter -> y
    java.awt.event.ItemListener itemListener -> z
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void performStateChanged() -> a
    boolean isAnimated() -> b
    int getIconWidth() -> c
    int getIconHeight() -> d
    float getBgDarkness() -> e
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintIcon(java.awt.Graphics2D,int,int) -> a
    void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String) -> paintText
com.jajeem.ui.checkbox.JajeemCheckBoxUI$1 -> com.jajeem.ui.checkbox.a:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.checkbox.JajeemCheckBoxUI$2 -> com.jajeem.ui.checkbox.b:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.ui.checkbox.JajeemCheckBoxUI$3 -> com.jajeem.ui.checkbox.c:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
com.jajeem.ui.checkbox.JajeemCheckBoxUI$4 -> com.jajeem.ui.checkbox.d:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.ui.checkbox.JajeemCheckBoxUI$5 -> com.jajeem.ui.checkbox.e:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.ui.checkbox.JajeemCheckBoxUI$CheckBoxIcon -> com.jajeem.ui.checkbox.f:
    com.jajeem.ui.checkbox.JajeemCheckBoxUI this$0 -> a
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
com.jajeem.ui.checkbox.SimpleCheckIcon -> com.jajeem.ui.checkbox.g:
    java.util.List CHECK_STATES -> a
    java.util.List DISABLED_CHECK_STATES -> b
    int step -> c
    void doStep() -> doStep
    void resetStep() -> resetStep
    boolean isTransitionCompleted() -> isTransitionCompleted
    void finishTransition() -> finishTransition
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
    void paintIcon(java.awt.Component,java.awt.Graphics2D,int,int,int,int) -> paintIcon
com.jajeem.ui.checkbox.WebTimer -> com.jajeem.ui.checkbox.h:
    java.util.List listeners -> a
    int id -> b
    int lastId -> c
    java.util.Map running -> d
    java.lang.Thread exec -> e
    long delay -> f
    long initialDelay -> g
    boolean repeats -> h
    boolean coalesce -> i
    boolean useEventDispatchThread -> j
    java.lang.String actionCommand -> k
    java.lang.String name -> l
    int cyclesLimit -> m
    long getInitialDelay() -> a
    long getDelay() -> b
    void start() -> c
    void stop() -> d
    boolean isRunning() -> e
    void startExec() -> f
    void setAlive(int,boolean) -> a
    void stopExec() -> g
    java.lang.String toString() -> toString
    java.lang.String toStringDelay(long) -> a
    void access$0(com.jajeem.ui.checkbox.WebTimer,int,boolean) -> a
    boolean access$3(com.jajeem.ui.checkbox.WebTimer,int,int) -> a
    boolean access$4(com.jajeem.ui.checkbox.WebTimer) -> a
    void access$5(com.jajeem.ui.checkbox.WebTimer) -> b
    void access$6(com.jajeem.ui.checkbox.WebTimer,int) -> a
com.jajeem.ui.checkbox.WebTimer$1 -> com.jajeem.ui.checkbox.i:
    com.jajeem.ui.checkbox.WebTimer this$0 -> a
    int val$currentId -> b
    void run() -> run
com.jajeem.ui.checkbox.WebTimer$2 -> com.jajeem.ui.checkbox.j:
    java.util.List val$listenerList -> a
    java.awt.event.ActionEvent val$actionEvent -> b
    void run() -> run
com.jajeem.ui.checkbox.WebTimer$3 -> com.jajeem.ui.checkbox.k:
    java.awt.event.ActionListener val$listener -> a
    java.awt.event.ActionEvent val$actionEvent -> b
    void run() -> run
com.jajeem.ui.combobox.JajeemComboBox -> com.jajeem.ui.combobox.a:
    void updateUI() -> updateUI
com.jajeem.ui.combobox.JajeemComboBoxUI -> com.jajeem.ui.combobox.JajeemComboBoxUI:
    javax.swing.ImageIcon expandIcon -> a
    javax.swing.ImageIcon collapseIcon -> b
    int iconSpacing -> c
    boolean drawBorder -> d
    int shadeWidth -> e
    boolean mouseWheelScrollingEnabled -> f
    java.awt.event.MouseWheelListener mouseWheelListener -> g
    com.alee.laf.button.WebButton arrow -> h
    javax.swing.ImageIcon expand -> i
    javax.swing.ImageIcon collapse -> j
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void installComponents() -> installComponents
    javax.swing.ComboBoxEditor createEditor() -> createEditor
    javax.swing.JButton createArrowButton() -> createArrowButton
    void configureArrowButton() -> configureArrowButton
    javax.swing.plaf.basic.ComboPopup createPopup() -> createPopup
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintCurrentValueBackground(java.awt.Graphics,java.awt.Rectangle,boolean) -> paintCurrentValueBackground
    void paintCurrentValue(java.awt.Graphics,java.awt.Rectangle,boolean) -> paintCurrentValue
    java.awt.LayoutManager createLayoutManager() -> createLayoutManager
    javax.swing.JButton access$0(com.jajeem.ui.combobox.JajeemComboBoxUI) -> a
    java.awt.Insets access$1(com.jajeem.ui.combobox.JajeemComboBoxUI) -> b
    javax.swing.JComboBox access$2(com.jajeem.ui.combobox.JajeemComboBoxUI) -> c
    java.awt.Component access$3(com.jajeem.ui.combobox.JajeemComboBoxUI) -> d
    java.awt.Rectangle access$4(com.jajeem.ui.combobox.JajeemComboBoxUI) -> e
    boolean access$5(com.jajeem.ui.combobox.JajeemComboBoxUI) -> f
    com.alee.laf.button.WebButton access$6(com.jajeem.ui.combobox.JajeemComboBoxUI) -> g
    javax.swing.ImageIcon access$7(com.jajeem.ui.combobox.JajeemComboBoxUI) -> h
    javax.swing.ImageIcon access$8(com.jajeem.ui.combobox.JajeemComboBoxUI) -> i
com.jajeem.ui.combobox.JajeemComboBoxUI$1 -> com.jajeem.ui.combobox.b:
    com.jajeem.ui.combobox.JajeemComboBoxUI this$0 -> a
    javax.swing.JComboBox val$comboBox -> b
    void mouseWheelMoved(java.awt.event.MouseWheelEvent) -> mouseWheelMoved
com.jajeem.ui.combobox.JajeemComboBoxUI$2 -> com.jajeem.ui.combobox.c:
    com.jajeem.ui.combobox.JajeemComboBoxUI this$0 -> a
    void focusGained(java.awt.event.FocusEvent) -> focusGained
    void focusLost(java.awt.event.FocusEvent) -> focusLost
com.jajeem.ui.combobox.JajeemComboBoxUI$3 -> com.jajeem.ui.combobox.d:
    com.jajeem.ui.combobox.JajeemComboBoxUI this$0 -> a
    javax.swing.JScrollPane createScroller() -> createScroller
    javax.swing.JList createList() -> createList
    void configurePopup() -> configurePopup
    void show() -> show
    javax.swing.JComboBox access$0(com.jajeem.ui.combobox.JajeemComboBoxUI$3) -> a
    com.jajeem.ui.combobox.JajeemComboBoxUI access$1(com.jajeem.ui.combobox.JajeemComboBoxUI$3) -> b
com.jajeem.ui.combobox.JajeemComboBoxUI$3$1 -> com.jajeem.ui.combobox.e:
    com.jajeem.ui.combobox.JajeemComboBoxUI$3 this$1 -> a
    void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) -> popupMenuWillBecomeVisible
    void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) -> popupMenuWillBecomeInvisible
    void popupMenuCanceled(javax.swing.event.PopupMenuEvent) -> popupMenuCanceled
com.jajeem.ui.combobox.JajeemComboBoxUI$WebComboBoxLayout -> com.jajeem.ui.combobox.f:
    com.jajeem.ui.combobox.JajeemComboBoxUI this$0 -> a
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    void layoutContainer(java.awt.Container) -> layoutContainer
com.jajeem.ui.radiobutton.JajeemRadioButton -> com.jajeem.ui.radiobutton.a:
    boolean isRollOver -> a
    boolean isPressed -> b
    java.awt.image.BufferedImage backgroundSelected -> c
    void updateUI() -> updateUI
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.ui.radiobutton.JajeemRadioButtonUI -> com.jajeem.ui.radiobutton.JajeemRadioButtonUI:
    java.util.List CHECK_STATES -> a
    javax.swing.ImageIcon DISABLED_CHECK -> b
    java.awt.Color borderColor -> d
    java.awt.Color darkBorderColor -> e
    java.awt.Color disabledBorderColor -> f
    java.awt.Color topBgColor -> g
    java.awt.Color bottomBgColor -> h
    java.awt.Color topSelectedBgColor -> i
    java.awt.Color bottomSelectedBgColor -> j
    int shadeWidth -> k
    java.awt.Insets margin -> l
    boolean animated -> m
    boolean rolloverDarkBorderOnly -> n
    java.awt.Stroke borderStroke -> c
    int iconWidth -> o
    int iconHeight -> p
    int bgDarkness -> q
    boolean rollover -> r
    com.jajeem.ui.radiobutton.WebTimer bgTimer -> s
    int checkIcon -> t
    boolean checking -> u
    com.jajeem.ui.radiobutton.WebTimer checkTimer -> v
    com.jajeem.ui.radiobutton.JajeemRadioButton radioButton -> w
    java.awt.event.MouseAdapter mouseAdapter -> x
    java.awt.event.ItemListener itemListener -> y
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    boolean isAnimated() -> a
    float getProgress() -> b
    void paint(java.awt.Graphics,javax.swing.JComponent) -> paint
    void paintText(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle,java.lang.String) -> paintText
    boolean access$0(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> a
    int access$1(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> b
    void access$2(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,int) -> a
    com.jajeem.ui.radiobutton.WebTimer access$3(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> c
    void access$4(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,boolean) -> a
    com.jajeem.ui.radiobutton.JajeemRadioButton access$5(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> d
    boolean access$6(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> e
    int access$7(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> f
    void access$8(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,int) -> b
    com.jajeem.ui.radiobutton.WebTimer access$9(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> g
    boolean access$10(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> h
    void access$11(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,boolean) -> b
    int access$12(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> i
    int access$13(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> j
    void access$14(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,java.awt.Rectangle) -> a
    int access$15(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> k
    java.awt.Color[] access$16(com.jajeem.ui.radiobutton.JajeemRadioButtonUI,javax.swing.JRadioButton) -> a
    boolean access$17(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> l
    java.awt.Color access$18(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> m
    java.awt.Color access$19(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> n
    float access$20(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> o
    java.awt.Color access$21(com.jajeem.ui.radiobutton.JajeemRadioButtonUI) -> p
com.jajeem.ui.radiobutton.JajeemRadioButtonUI$1 -> com.jajeem.ui.radiobutton.b:
    com.jajeem.ui.radiobutton.JajeemRadioButtonUI this$0 -> a
    javax.swing.JComponent val$c -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.ui.radiobutton.JajeemRadioButtonUI$2 -> com.jajeem.ui.radiobutton.c:
    com.jajeem.ui.radiobutton.JajeemRadioButtonUI this$0 -> a
    javax.swing.JComponent val$c -> b
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
com.jajeem.ui.radiobutton.JajeemRadioButtonUI$3 -> com.jajeem.ui.radiobutton.d:
    com.jajeem.ui.radiobutton.JajeemRadioButtonUI this$0 -> a
    javax.swing.JComponent val$c -> b
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
com.jajeem.ui.radiobutton.JajeemRadioButtonUI$4 -> com.jajeem.ui.radiobutton.e:
    com.jajeem.ui.radiobutton.JajeemRadioButtonUI this$0 -> a
    javax.swing.JComponent val$c -> b
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
com.jajeem.ui.radiobutton.JajeemRadioButtonUI$5 -> com.jajeem.ui.radiobutton.f:
    com.jajeem.ui.radiobutton.JajeemRadioButtonUI this$0 -> a
    javax.swing.JRadioButton val$radioButton -> b
    void paintIcon(java.awt.Component,java.awt.Graphics,int,int) -> paintIcon
    int getIconWidth() -> getIconWidth
    int getIconHeight() -> getIconHeight
com.jajeem.ui.radiobutton.WebTimer -> com.jajeem.ui.radiobutton.g:
    java.util.List listeners -> a
    int id -> b
    int lastId -> c
    java.util.Map running -> d
    java.lang.Thread exec -> e
    long delay -> f
    long initialDelay -> g
    boolean repeats -> h
    boolean coalesce -> i
    boolean useEventDispatchThread -> j
    java.lang.String actionCommand -> k
    java.lang.String name -> l
    int cyclesLimit -> m
    long getInitialDelay() -> a
    long getDelay() -> b
    void start() -> c
    void stop() -> d
    boolean isRunning() -> e
    void startExec() -> f
    void setAlive(int,boolean) -> a
    void stopExec() -> g
    java.lang.String toString() -> toString
    java.lang.String toStringDelay(long) -> a
    void access$0(com.jajeem.ui.radiobutton.WebTimer,int,boolean) -> a
    boolean access$3(com.jajeem.ui.radiobutton.WebTimer,int,int) -> a
    boolean access$4(com.jajeem.ui.radiobutton.WebTimer) -> a
    void access$5(com.jajeem.ui.radiobutton.WebTimer) -> b
    void access$6(com.jajeem.ui.radiobutton.WebTimer,int) -> a
com.jajeem.ui.radiobutton.WebTimer$1 -> com.jajeem.ui.radiobutton.h:
    com.jajeem.ui.radiobutton.WebTimer this$0 -> a
    int val$currentId -> b
    void run() -> run
com.jajeem.ui.radiobutton.WebTimer$2 -> com.jajeem.ui.radiobutton.i:
    java.util.List val$listenerList -> a
    java.awt.event.ActionEvent val$actionEvent -> b
    void run() -> run
com.jajeem.ui.radiobutton.WebTimer$3 -> com.jajeem.ui.radiobutton.j:
    java.awt.event.ActionListener val$listener -> a
    java.awt.event.ActionEvent val$actionEvent -> b
    void run() -> run
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI -> com.jajeem.ui.textbox.JajeemPasswordTexFieldUI:
    java.awt.event.FocusListener focusListener -> a
    java.beans.PropertyChangeListener accessibleChangeListener -> b
    java.beans.PropertyChangeListener orientationChangeListener -> c
    java.beans.PropertyChangeListener marginChangeListener -> d
    java.awt.event.ComponentAdapter componentResizeListener -> e
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void paintSafely(java.awt.Graphics) -> paintSafely
    javax.swing.JPasswordField access$0(com.jajeem.ui.textbox.JajeemPasswordTexFieldUI) -> a
    void access$1(com.jajeem.ui.textbox.JajeemPasswordTexFieldUI) -> b
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI$1 -> com.jajeem.ui.textbox.a:
    com.jajeem.ui.textbox.JajeemPasswordTexFieldUI this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI$2 -> com.jajeem.ui.textbox.b:
    com.jajeem.ui.textbox.JajeemPasswordTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI$3 -> com.jajeem.ui.textbox.c:
    com.jajeem.ui.textbox.JajeemPasswordTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI$4 -> com.jajeem.ui.textbox.d:
    com.jajeem.ui.textbox.JajeemPasswordTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemPasswordTexFieldUI$5 -> com.jajeem.ui.textbox.e:
    com.jajeem.ui.textbox.JajeemPasswordTexFieldUI this$0 -> a
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
com.jajeem.ui.textbox.JajeemTexFieldUI -> com.jajeem.ui.textbox.JajeemTexFieldUI:
    java.awt.event.FocusListener focusListener -> a
    java.beans.PropertyChangeListener accessibleChangeListener -> b
    java.beans.PropertyChangeListener orientationChangeListener -> c
    java.beans.PropertyChangeListener marginChangeListener -> d
    java.awt.event.ComponentAdapter componentResizeListener -> e
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
    void installUI(javax.swing.JComponent) -> installUI
    void uninstallUI(javax.swing.JComponent) -> uninstallUI
    void paintSafely(java.awt.Graphics) -> paintSafely
    javax.swing.JTextField access$0(com.jajeem.ui.textbox.JajeemTexFieldUI) -> a
    void access$1(com.jajeem.ui.textbox.JajeemTexFieldUI) -> b
com.jajeem.ui.textbox.JajeemTexFieldUI$1 -> com.jajeem.ui.textbox.f:
    com.jajeem.ui.textbox.JajeemTexFieldUI this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.ui.textbox.JajeemTexFieldUI$2 -> com.jajeem.ui.textbox.g:
    com.jajeem.ui.textbox.JajeemTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemTexFieldUI$3 -> com.jajeem.ui.textbox.h:
    com.jajeem.ui.textbox.JajeemTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemTexFieldUI$4 -> com.jajeem.ui.textbox.i:
    com.jajeem.ui.textbox.JajeemTexFieldUI this$0 -> a
    void propertyChange(java.beans.PropertyChangeEvent) -> propertyChange
com.jajeem.ui.textbox.JajeemTexFieldUI$5 -> com.jajeem.ui.textbox.j:
    com.jajeem.ui.textbox.JajeemTexFieldUI this$0 -> a
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
com.jajeem.util.Audio -> com.jajeem.util.a:
    java.lang.String path -> a
    java.io.File soundFile -> b
    javax.sound.sampled.AudioInputStream audioStream -> c
    javax.sound.sampled.AudioFormat audioFormat -> d
    javax.sound.sampled.SourceDataLine sourceLine -> e
    void mute() -> a
    void unMute() -> b
    void switchMute() -> c
    void increaseVol() -> d
    void decreaseVol() -> e
    void setVol(int) -> a
    void playSound(java.lang.String) -> a
com.jajeem.util.BaseDAO -> com.jajeem.util.b:
    com.jajeem.util.H2Connection h2Connection -> a
    java.sql.Connection getConnection() -> a
com.jajeem.util.Config -> com.jajeem.util.c:
    java.util.Properties props -> a
    java.lang.String getParam(java.lang.String) -> a
    void setParam(java.lang.String,java.lang.String) -> a
com.jajeem.util.Connection -> com.jajeem.util.d:
    com.jajeem.util.ConnectionManager conman -> a
    java.sql.Connection getConnection() -> a
com.jajeem.util.ConnectionManager -> com.jajeem.util.e:
    org.apache.commons.dbcp.PoolingDataSource dataSource -> c
    java.lang.String connectURI -> a
    java.lang.String connectDriver -> b
    java.sql.Connection getConnection() -> a
com.jajeem.util.CustomBottomButton -> com.jajeem.util.f:
    java.awt.image.BufferedImage background -> c
    java.awt.image.BufferedImage backgroundHover -> d
    boolean isRollOver -> a
    boolean isPressed -> b
    java.awt.Color oldColor -> e
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomBottomButton$1 -> com.jajeem.util.g:
    com.jajeem.util.CustomBottomButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.util.CustomButton -> com.jajeem.util.h:
    java.awt.image.BufferedImage background -> c
    java.awt.image.BufferedImage rollover -> d
    java.awt.image.BufferedImage selected -> e
    boolean isRollOver -> a
    boolean isPressed -> b
    void init() -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomButton$1 -> com.jajeem.util.i:
    com.jajeem.util.CustomButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.util.CustomCallAllButton -> com.jajeem.util.j:
    java.awt.image.BufferedImage background -> a
    java.awt.image.BufferedImage backgroundactive -> b
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomCellRenderer -> com.jajeem.util.k:
    javax.swing.ImageIcon shortIcon -> a
    java.awt.Component getListCellRendererComponent(javax.swing.JList,java.lang.Object,int,boolean,boolean) -> getListCellRendererComponent
com.jajeem.util.CustomCloseButton -> com.jajeem.util.l:
    java.awt.image.BufferedImage background -> c
    boolean isRollOver -> a
    boolean isPressed -> b
    java.lang.String uri -> d
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomCloseButton$1 -> com.jajeem.util.m:
    com.jajeem.util.CustomCloseButton this$0 -> a
    void stateChanged(javax.swing.event.ChangeEvent) -> stateChanged
com.jajeem.util.CustomFrame -> com.jajeem.util.CustomFrame:
    int posX -> a
    int posY -> b
    void main(java.lang.String[]) -> main
com.jajeem.util.CustomFrame$1 -> com.jajeem.util.n:
    com.jajeem.util.CustomFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.util.CustomFrame$2 -> com.jajeem.util.o:
    com.jajeem.util.CustomFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.util.CustomFrame$3 -> com.jajeem.util.p:
    com.jajeem.util.CustomFrame this$0 -> a
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.util.CustomJList -> com.jajeem.util.q:
    java.awt.image.BufferedImage background -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomLoginFrame -> com.jajeem.util.CustomLoginFrame:
    int posX -> d
    int posY -> e
    javax.swing.JFrame mainFrame -> f
    javax.swing.JPanel contentPanel -> a
    java.awt.Container getMainContentPane() -> g
    void main(java.lang.String[]) -> main
com.jajeem.util.CustomLoginFrame$1 -> com.jajeem.util.r:
    com.jajeem.util.CustomLoginFrame this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
com.jajeem.util.CustomLoginFrame$2 -> com.jajeem.util.s:
    com.jajeem.util.CustomLoginFrame this$0 -> a
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
com.jajeem.util.CustomLoginFrame$3 -> com.jajeem.util.t:
    com.jajeem.util.CustomLoginFrame this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
com.jajeem.util.CustomLoginFrame$4 -> com.jajeem.util.u:
    com.jajeem.util.CustomLoginFrame this$0 -> a
    void focusLost(java.awt.event.FocusEvent) -> focusLost
    void focusGained(java.awt.event.FocusEvent) -> focusGained
com.jajeem.util.CustomLoginPanel -> com.jajeem.util.v:
    java.awt.image.BufferedImage originalImage -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
    int getWidth() -> getWidth
    int getHeight() -> getHeight
com.jajeem.util.CustomLogoLabel -> com.jajeem.util.w:
    java.awt.image.BufferedImage background -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomPanel -> com.jajeem.util.x:
    java.awt.image.BufferedImage originalImage -> a
    void paint(java.awt.Graphics) -> paint
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomPasswordField -> com.jajeem.util.y:
    java.awt.image.BufferedImage background -> a
    void paintComponents(java.awt.Graphics) -> paintComponents
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomPowerButton -> com.jajeem.util.z:
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomPowerPanel -> com.jajeem.util.A:
    java.awt.image.BufferedImage originalImage -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomScrollPane -> com.jajeem.util.CustomScrollPane:
    java.awt.image.BufferedImage background -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
    void main(java.lang.String[]) -> main
com.jajeem.util.CustomScrollbar -> com.jajeem.util.CustomScrollbar:
    java.awt.Image imageThumb -> a
    java.awt.Image imageTrack -> b
    javax.swing.JButton b -> c
    void paintThumb(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintThumb
    void paintTrack(java.awt.Graphics,javax.swing.JComponent,java.awt.Rectangle) -> paintTrack
    javax.swing.JButton createDecreaseButton(int) -> createDecreaseButton
    javax.swing.JButton createIncreaseButton(int) -> createIncreaseButton
com.jajeem.util.CustomScrollbar$1 -> com.jajeem.util.B:
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.jajeem.util.CustomTextField -> com.jajeem.util.C:
    java.awt.image.BufferedImage background -> a
    void paintComponents(java.awt.Graphics) -> paintComponents
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomTopButton -> com.jajeem.util.D:
    java.awt.image.BufferedImage background -> a
    void paintComponent(java.awt.Graphics) -> paintComponent
com.jajeem.util.CustomTopPanel -> com.jajeem.util.E:
    java.awt.image.BufferedImage originalImage -> a
    void paint(java.awt.Graphics) -> paint
    void paintComponent(java.awt.Graphics) -> paintComponent
    java.awt.Dimension getPreferredSize() -> getPreferredSize
com.jajeem.util.FileUtil -> com.jajeem.util.F:
    java.io.File[] finder(java.lang.String) -> a
    java.lang.String getInboxPath() -> a
    java.lang.String getRecorderPath() -> b
    java.lang.String getOutboxPath() -> c
    void createDirectories() -> d
    void copyFileUsingStream(java.io.File,java.io.File) -> a
com.jajeem.util.GPanel -> com.jajeem.util.G:
    java.awt.MultipleGradientPaint mgp -> a
    java.awt.MultipleGradientPaint$ColorSpaceType cst -> b
    java.awt.MultipleGradientPaint$CycleMethod cm -> c
    java.awt.geom.AffineTransform at -> d
    void paintComponent(java.awt.Graphics) -> paintComponent
    void setColorSpaceType(java.awt.MultipleGradientPaint$ColorSpaceType) -> a
    void setCycleMethod(java.awt.MultipleGradientPaint$CycleMethod) -> a
    void createGradientPaint() -> a
com.jajeem.util.H2Connection -> com.jajeem.util.H:
com.jajeem.util.KeyHook -> com.jajeem.util.I:
    com.sun.jna.platform.win32.WinUser$HHOOK hhk -> a
    com.sun.jna.platform.win32.WinUser$LowLevelKeyboardProc keyboardHook -> b
    boolean ignoreCallback -> c
    java.lang.Thread thread -> d
    void start() -> a
    boolean isIgnoreCallback() -> b
    void setIgnoreCallback(boolean) -> a
    void run() -> run
    com.sun.jna.platform.win32.WinUser$HHOOK access$0() -> c
com.jajeem.util.KeyHook$1 -> com.jajeem.util.J:
    com.jajeem.util.KeyHook this$0 -> a
    com.sun.jna.platform.win32.User32 val$lib -> b
    com.sun.jna.platform.win32.WinDef$LRESULT callback(int,com.sun.jna.platform.win32.WinDef$WPARAM,com.sun.jna.platform.win32.WinUser$KBDLLHOOKSTRUCT) -> callback
com.jajeem.util.LGPDemo -> com.jajeem.util.LGPDemo:
    com.jajeem.util.GPanel gp -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void main(java.lang.String[]) -> main
com.jajeem.util.LGPDemo$1 -> com.jajeem.util.K:
    void run() -> run
com.jajeem.util.LnkParser -> com.jajeem.util.L:
    boolean isLocal -> a
    java.lang.String real_file -> b
    java.lang.String getRealFilename() -> a
    void parse(java.io.File) -> a
    java.lang.String getNullDelimitedString(byte[],int) -> a
com.jajeem.util.MemoryDiag -> com.jajeem.util.M:
com.jajeem.util.MouseHook -> com.jajeem.util.N:
    com.jajeem.util.MouseHook$LowLevelMouseProc mouseHook -> a
    boolean ignoreCallback -> b
    java.lang.Thread thread -> c
    void start() -> a
    boolean isIgnoreCallback() -> b
    void setIgnoreCallback(boolean) -> a
    void run() -> run
com.jajeem.util.MouseHook$1 -> com.jajeem.util.O:
com.jajeem.util.MouseHook$LowLevelMouseProc -> com.jajeem.util.P:
com.jajeem.util.MultiLineCellRenderer -> com.jajeem.util.Q:
    int verticalAlignment -> a
    int horizontalAlignment -> b
    float alignmentX -> c
    java.awt.Color foreground -> d
    java.awt.Color background -> e
    java.awt.Font font -> f
    javax.swing.border.Border border -> g
    void setForeground(java.awt.Color) -> setForeground
    void setBackground(java.awt.Color) -> setBackground
    void setFont(java.awt.Font) -> setFont
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
com.jajeem.util.Query -> com.jajeem.util.R:
    java.lang.String studentByCourse(int) -> a
com.jajeem.util.Session -> com.jajeem.util.S:
    com.jajeem.core.model.Student student -> a
    com.jajeem.core.model.Instructor instructor -> b
    boolean isQuizWindowOpen -> c
    boolean isSurveyWindowOpen -> d
    java.util.ArrayList fileRequestList -> e
    boolean[] isQuizWindowsOpen -> f
    boolean[] isSurveyWindowsOpen -> g
    java.util.ArrayList recordingList -> h
    java.util.HashMap loggedInStudents -> i
    com.jajeem.room.model.Course course -> j
    com.jajeem.share.service.VNCCaptureService modelingWindowHndl -> k
    void setInstructor(com.jajeem.core.model.Instructor) -> a
    com.jajeem.core.model.Instructor getInstructor() -> a
    com.jajeem.core.model.Student getStudent() -> b
    void setStudent(com.jajeem.core.model.Student) -> a
    boolean isQuizWindowOpen() -> c
    void setQuizWindowOpen(boolean) -> a
    boolean isSurveyWindowOpen() -> d
    void setSurveyWindowOpen(boolean) -> b
    java.util.ArrayList getFileRequestList() -> e
    boolean[] getIsQuizWindowsOpen() -> f
    boolean[] getIsSurveyWindowsOpen() -> g
    java.util.ArrayList getRecordingList() -> h
    com.jajeem.room.model.Course getCourse() -> i
    void setCourse(com.jajeem.room.model.Course) -> a
    java.util.HashMap getLoggedInStudents() -> j
    void setModelingWindowHandle(com.jajeem.share.service.VNCCaptureService) -> a
    com.jajeem.share.service.VNCCaptureService getModelingWindow() -> k
com.jajeem.util.StartUp -> com.jajeem.util.T:
com.jajeem.util.StartUp$1 -> com.jajeem.util.U:
    void run() -> run
com.jajeem.util.StartUp$2 -> com.jajeem.util.V:
    void run() -> run
com.jajeem.util.StripedTableCellRenderer -> com.jajeem.util.W:
    javax.swing.table.TableCellRenderer targetRenderer -> a
    java.awt.Color evenBack -> b
    java.awt.Color evenFore -> c
    java.awt.Color oddBack -> d
    java.awt.Color oddFore -> e
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
    void installInTable(javax.swing.JTable,java.awt.Color,java.awt.Color,java.awt.Color,java.awt.Color) -> a
com.jajeem.util.Unzipper -> com.jajeem.util.Unzipper:
    void main(java.lang.String[]) -> main
com.jajeem.util.WinRegistry -> com.jajeem.util.X:
    java.util.prefs.Preferences userRoot -> a
    java.util.prefs.Preferences systemRoot -> b
    java.lang.Class userClass -> c
    java.lang.reflect.Method regOpenKey -> d
    java.lang.reflect.Method regCloseKey -> e
    java.lang.reflect.Method regQueryValueEx -> f
    java.lang.reflect.Method regEnumValue -> g
    java.lang.reflect.Method regQueryInfoKey -> h
    java.lang.reflect.Method regEnumKeyEx -> i
    java.lang.reflect.Method regCreateKeyEx -> j
    java.lang.reflect.Method regSetValueEx -> k
    java.lang.reflect.Method regDeleteKey -> l
    java.lang.reflect.Method regDeleteValue -> m
    java.lang.String readString(int,java.lang.String,java.lang.String) -> a
    void createKey(int,java.lang.String) -> a
    void writeStringValue(int,java.lang.String,java.lang.String,java.lang.String) -> a
    void deleteValue(int,java.lang.String,java.lang.String) -> b
    byte[] toCstr(java.lang.String) -> a
com.jajeem.util.WindowResizeAdapter -> com.jajeem.util.Y:
    boolean resizing -> a
    int prevX -> b
    int prevY -> c
    int resizeSide -> d
    java.awt.Component componentTemp -> e
    void install(java.awt.Component,int) -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
com.jajeem.util.i18n -> com.jajeem.util.Z:
    java.util.Properties props -> a
    java.lang.String getParam(java.lang.String) -> a
com.jajeem.util.initDatabase -> com.jajeem.util.initDatabase:
    void main(java.lang.String[]) -> main
com.jajeem.util.test -> com.jajeem.util.test:
    void main(java.lang.String[]) -> main
jrdesktop.Commons -> jrdesktop.a:
    java.lang.String defaultServerAddress -> a
    java.net.URL IDLE_ICON -> b
    java.net.URL ALIVE_ICON -> c
    java.net.URL WAIT_ICON -> d
    java.net.URL START_ICON -> e
    java.net.URL STOP_ICON -> f
    java.net.URL INPUTS_ICON -> g
    java.net.URL LOCKED_INPUTS_ICON -> h
    java.net.URL FULL_SCREEN_ICON -> i
    java.net.URL NORMAL_SCREEN_ICON -> j
    java.net.URL DEFAULT_SCREEN_ICON -> k
    java.net.URL CUSTOM_SCREEN_ICON -> l
    java.lang.String HOME_DIR -> m
    java.lang.String CONFIG_FILE -> n
    java.lang.String downloadsLocation -> o
    java.lang.String KEY_STORE -> p
    java.lang.String TRUST_STORE -> q
    float java_version -> r
    java.lang.String jrdesktop_build_date -> s
    java.awt.Rectangle emptyRect -> t
    java.awt.Rectangle diffRect -> u
    void init() -> a
jrdesktop.Config -> jrdesktop.b:
    java.lang.String server_address -> a
    int server_port -> b
    int http_port -> c
    java.lang.String username -> d
    java.lang.String password -> e
    boolean ssl_enabled -> f
    boolean multihomed_enabled -> g
    boolean default_address -> h
    boolean reverseConnection -> i
    void loadData(java.lang.String) -> a
    void loadConfiguration(boolean,java.lang.String) -> a
    void storeConfiguration(boolean,java.lang.String) -> b
    void setConfiguration(boolean,java.lang.String,java.lang.String,boolean,boolean,int,int,java.lang.String,java.lang.String,boolean,boolean) -> a
jrdesktop.ConnectionInfos -> jrdesktop.c:
    long previous -> a
    long startedAt -> b
    long duration -> c
    long dataSize -> d
    long sentData -> e
    long receivedData -> f
    long transferSpeed -> g
    void display() -> a
    java.util.ArrayList getData() -> b
    void incSentData(long) -> a
    void incReceivedData(long) -> b
    void refresh() -> c
    java.lang.String getDuration() -> d
    java.lang.String getSpeed() -> e
jrdesktop.SecurityMng -> jrdesktop.d:
    void checkAccept(java.lang.String,int) -> checkAccept
    void checkAccess(java.lang.Thread) -> checkAccess
    void checkConnect(java.lang.String,int) -> checkConnect
    void checkAwtEventQueueAccess() -> checkAwtEventQueueAccess
    void checkCreateClassLoader() -> checkCreateClassLoader
    void checkDelete(java.lang.String) -> checkDelete
    void checkExec(java.lang.String) -> checkExec
    void checkExit(int) -> checkExit
    void checkListen(int) -> checkListen
    void checkPermission(java.security.Permission) -> checkPermission
    void checkPropertiesAccess() -> checkPropertiesAccess
    void checkPropertyAccess(java.lang.String) -> checkPropertyAccess
    void checkRead(java.io.FileDescriptor) -> checkRead
    void checkRead(java.lang.String) -> checkRead
    void checkSecurityAccess(java.lang.String) -> checkSecurityAccess
    void checkSetFactory() -> checkSetFactory
    void checkSystemClipboardAccess() -> checkSystemClipboardAccess
    void checkWrite(java.io.FileDescriptor) -> checkWrite
    void checkWrite(java.lang.String) -> checkWrite
jrdesktop.Settings -> jrdesktop.e:
    boolean guiDisabled -> a
    boolean exitDisabled -> b
    boolean systrayDisabled -> c
    boolean proxyManual -> l
    java.lang.String proxyServer -> d
    int proxyPort -> e
    java.lang.String home -> f
    java.lang.String downloadsDir -> g
    java.lang.String configFile -> m
    java.lang.String keyStore -> h
    java.lang.String trustStore -> i
    java.lang.String lookAndFeel -> j
    byte displayMode -> k
    void loadConfig() -> a
    void storeConfig() -> b
    void setConfig(boolean,boolean,boolean,boolean,java.lang.String,int,java.lang.String,java.lang.String) -> a
    void updateFilePaths(java.lang.String) -> a
    void applyConfig(boolean) -> a
jrdesktop.SysTray -> jrdesktop.f:
    java.awt.MenuItem serverItem -> b
    java.awt.TrayIcon trayIcon -> c
    boolean enabled -> d
    byte customMsg -> a
    void updateServerStatus(byte) -> a
    void updateServerStatus(byte,java.lang.String) -> a
    void displayViewer(java.lang.String,int,boolean) -> a
    boolean isSupported() -> a
    void close() -> b
    void display() -> c
    void access$0(java.awt.TrayIcon) -> a
    java.awt.TrayIcon access$1() -> d
    void access$2(java.awt.MenuItem) -> a
    java.awt.MenuItem access$3() -> e
jrdesktop.SysTray$1 -> jrdesktop.g:
    void run() -> run
jrdesktop.SysTray$1$1 -> jrdesktop.h:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$2 -> jrdesktop.i:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$3 -> jrdesktop.j:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$4 -> jrdesktop.k:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$5 -> jrdesktop.l:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$6 -> jrdesktop.m:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$7 -> jrdesktop.n:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$8 -> jrdesktop.o:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.SysTray$1$9 -> jrdesktop.p:
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.main -> jrdesktop.main:
    jrdesktop.Config serverConfig -> c
    jrdesktop.Config viewerConfig -> a
    int activeConnection -> b
    void main(java.lang.String[]) -> main
    void displayHelp(boolean) -> a
    void startViewer() -> a
    void exit() -> b
    void quit() -> c
jrdesktop.rmi.client.MultihomeRMIClientSocketFactory -> jrdesktop.rmi.a.a:
    java.rmi.server.RMIClientSocketFactory factory -> a
    java.lang.String[] hosts -> b
    boolean $assertionsDisabled -> c
    java.net.Socket createSocket(java.lang.String,int) -> createSocket
    java.rmi.server.RMIClientSocketFactory factory() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
jrdesktop.rmi.client.RMIClient -> jrdesktop.rmi.a.b:
    jrdesktop.Config clientConfig -> a
    java.rmi.registry.Registry registry -> c
    jrdesktop.rmi.server.ServerInterface rmiServer -> b
    int index -> d
    int connect() -> a
    void disconnect() -> b
jrdesktop.rmi.server.RMIServer -> jrdesktop.rmi.server.a:
    java.rmi.registry.Registry registry -> b
    jrdesktop.rmi.server.ServerImpl serverImpl -> c
    jrdesktop.Config serverConfig -> a
    boolean Start(jrdesktop.Config) -> a
    boolean Start() -> a
    void Stop() -> b
jrdesktop.rmi.server.ServerImpl -> jrdesktop.rmi.server.ServerImpl:
    boolean isOptionsChanged(int) -> isOptionsChanged
    void setOptionsChanged(int,boolean) -> setOptionsChanged
    int startViewer(java.net.InetAddress,java.lang.String,java.lang.String,boolean) -> startViewer
    void stopViewer(int) -> stopViewer
    void setScreenCapture(byte[],int) -> setScreenCapture
    java.util.HashMap getChangedScreenBlocks(int,boolean) -> getChangedScreenBlocks
    void setChangedScreenBlocks(java.util.HashMap,int) -> setChangedScreenBlocks
    byte[] getScreenCapture(int) -> getScreenCapture
    void setScreenRect(java.awt.Rectangle,int) -> setScreenRect
    java.awt.Rectangle getScreenRect(int) -> getScreenRect
    void setMouseEvents(int,java.util.ArrayList) -> setMouseEvents
    java.util.ArrayList getMouseEvents(int) -> getMouseEvents
    void setKeyEvents(java.util.ArrayList) -> setKeyEvents
    java.util.ArrayList getKeyEvents(int) -> getKeyEvents
    void setClipboardContent(java.lang.Object) -> setClipboardContent
    void setClipboardContent(java.lang.Object,int) -> setClipboardContent
    java.lang.Object getClipboardContent() -> getClipboardContent
    java.lang.Object getClipboardContent(int) -> getClipboardContent
    void setOptions(java.lang.Object,int) -> setOptions
    java.lang.Object getOptions(int) -> getOptions
    void setOption(java.lang.Object,int,int) -> setOption
    java.lang.Object getOption(int,int) -> getOption
    java.util.ArrayList getFileList() -> getFileList
    void SendFile(byte[],java.lang.String,int) -> SendFile
    byte[] ReceiveFile(java.lang.String,int) -> ReceiveFile
    java.util.ArrayList getConnectionInfos(int) -> getConnectionInfos
    java.util.Hashtable getHostProperties() -> getHostProperties
    void setHostProperties(int,java.util.Hashtable) -> setHostProperties
jrdesktop.rmi.server.ServerInterface -> jrdesktop.rmi.server.ServerInterface:
    boolean isOptionsChanged(int) -> isOptionsChanged
    void setOptionsChanged(int,boolean) -> setOptionsChanged
    int startViewer(java.net.InetAddress,java.lang.String,java.lang.String,boolean) -> startViewer
    void stopViewer(int) -> stopViewer
    java.util.HashMap getChangedScreenBlocks(int,boolean) -> getChangedScreenBlocks
    void setChangedScreenBlocks(java.util.HashMap,int) -> setChangedScreenBlocks
    byte[] getScreenCapture(int) -> getScreenCapture
    void setScreenCapture(byte[],int) -> setScreenCapture
    java.awt.Rectangle getScreenRect(int) -> getScreenRect
    void setScreenRect(java.awt.Rectangle,int) -> setScreenRect
    java.util.ArrayList getMouseEvents(int) -> getMouseEvents
    void setMouseEvents(int,java.util.ArrayList) -> setMouseEvents
    java.util.ArrayList getKeyEvents(int) -> getKeyEvents
    void setKeyEvents(java.util.ArrayList) -> setKeyEvents
    java.lang.Object getClipboardContent() -> getClipboardContent
    void setClipboardContent(java.lang.Object) -> setClipboardContent
    java.lang.Object getClipboardContent(int) -> getClipboardContent
    void setClipboardContent(java.lang.Object,int) -> setClipboardContent
    java.lang.Object getOptions(int) -> getOptions
    void setOptions(java.lang.Object,int) -> setOptions
    java.lang.Object getOption(int,int) -> getOption
    void setOption(java.lang.Object,int,int) -> setOption
    java.util.ArrayList getFileList() -> getFileList
    byte[] ReceiveFile(java.lang.String,int) -> ReceiveFile
    void SendFile(byte[],java.lang.String,int) -> SendFile
    java.util.ArrayList getConnectionInfos(int) -> getConnectionInfos
    java.util.Hashtable getHostProperties() -> getHostProperties
    void setHostProperties(int,java.util.Hashtable) -> setHostProperties
jrdesktop.server.Server -> jrdesktop.a.a:
    boolean running -> a
    jrdesktop.server.robot rt -> b
    jrdesktop.utilities.ClipbrdUtility clipbrdUtility -> c
    java.util.Hashtable viewers -> d
    int index -> e
    jrdesktop.viewer.Recorder recorder -> f
    jrdesktop.server.http.HttpServer httpServer -> g
    jrdesktop.rmi.client.RMIClient client -> h
    boolean connected -> i
    void Start() -> a
    void Start(jrdesktop.Config) -> a
    void init() -> m
    void Stop() -> b
    boolean isRunning() -> c
    byte[] getScreenCapture(int) -> a
    java.util.HashMap getChangedScreenBlocks(int,boolean) -> a
    java.awt.Rectangle getScreenRect(int) -> b
    void setKeyEvents(java.util.ArrayList) -> a
    void setMouseEvents(int,java.util.ArrayList) -> a
    void setOptions(java.lang.Object,int) -> a
    void setOption(java.lang.Object,int,int) -> a
    int addViewer(java.net.InetAddress) -> a
    int removeViewer(int) -> c
    byte[] ReceiveFile(java.lang.String,int) -> a
    void SendFile(byte[],java.lang.String,int) -> a
    java.util.ArrayList getFileList() -> d
    int getViewersCount() -> e
    void setHostProperties(int,java.util.Hashtable) -> a
    java.util.ArrayList getConnectionInfos(int) -> d
    java.util.Hashtable getHostProperties() -> f
    void setClipboardContent(java.lang.Object) -> a
    java.lang.Object getClipboardContent() -> g
    boolean isConnected() -> h
    void _Start() -> i
    int connect() -> j
    void getOptions() -> n
    boolean isOptionsChanged() -> o
    void sendData() -> k
    void receiveData() -> l
jrdesktop.server.http.HttpConnection -> jrdesktop.a.a.a:
    java.net.Socket client -> a
    void run() -> run
    java.lang.String getJNLP(java.lang.String,boolean) -> a
jrdesktop.server.http.HttpServer -> jrdesktop.a.a.b:
    java.net.ServerSocket ss -> a
    boolean connected -> b
    void run() -> run
    void disconnected() -> a
    void interrupt() -> interrupt
jrdesktop.server.robot -> jrdesktop.a.b:
    java.awt.Robot rt -> b
    jrdesktop.server.Server server -> c
    boolean running -> a
    java.awt.Rectangle screenRect -> d
    java.awt.Rectangle oldScreenRect -> e
    void init() -> a
    void run() -> run
    java.util.HashMap getChangedScreenBlocks(jrdesktop.viewer.ViewerOptions,boolean) -> a
    void updateScreenRect(jrdesktop.viewer.ViewerOptions) -> b
    byte[] CaptureScreenByteArray(jrdesktop.viewer.ViewerOptions) -> a
    void setMouseEvents(jrdesktop.viewer.ViewerOptions,java.util.ArrayList) -> a
    void setKeyEvents(java.util.ArrayList) -> a
jrdesktop.utilities.ClipbrdUtility -> jrdesktop.b.a:
    java.awt.datatransfer.Clipboard clipboard -> a
    java.awt.datatransfer.FlavorListener flavorlistener -> b
    java.lang.Object object -> c
    java.lang.String txt -> d
    javax.swing.ImageIcon img -> e
    void setContent(java.lang.Object) -> a
    java.lang.Object getContent() -> a
    java.io.File[] getFiles() -> b
    void addFlavorListener() -> c
    void removeFlavorListener() -> d
    java.awt.datatransfer.Clipboard access$0(jrdesktop.utilities.ClipbrdUtility) -> a
    java.lang.String access$1(jrdesktop.utilities.ClipbrdUtility) -> b
    void access$2(jrdesktop.utilities.ClipbrdUtility,java.lang.String) -> a
    void access$3(jrdesktop.utilities.ClipbrdUtility,java.lang.Object) -> a
    javax.swing.ImageIcon access$4(jrdesktop.utilities.ClipbrdUtility) -> c
    void access$5(jrdesktop.utilities.ClipbrdUtility,javax.swing.ImageIcon) -> a
jrdesktop.utilities.ClipbrdUtility$1 -> jrdesktop.b.b:
    jrdesktop.utilities.ClipbrdUtility this$0 -> a
    void flavorsChanged(java.awt.datatransfer.FlavorEvent) -> flavorsChanged
jrdesktop.utilities.ClipbrdUtility$ImageSelection -> jrdesktop.b.c:
    java.awt.Image img -> a
    java.awt.datatransfer.DataFlavor[] flavors -> b
    java.awt.datatransfer.DataFlavor[] getTransferDataFlavors() -> getTransferDataFlavors
    boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) -> isDataFlavorSupported
    java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) -> getTransferData
jrdesktop.utilities.FileUtility -> jrdesktop.b.d:
    java.lang.String[] BYTES -> a
    java.lang.String[] BYTES_PER_SECOND -> b
    java.lang.String getSizeHumanFormat(long,java.lang.String[]) -> a
    void extractFile(java.lang.String) -> a
    java.lang.String getBuiltDate() -> a
    java.util.ArrayList getFiles(java.io.File[]) -> b
    java.io.File[] getAllFiles(java.io.File[]) -> a
    java.lang.String[] getSideConfigFiles(boolean) -> a
    java.lang.String getSide(boolean) -> b
    java.lang.String getConfigFilename(boolean,java.lang.String) -> a
    java.util.List textURIListToFileList(java.lang.String) -> b
    java.util.List textToFileList(java.lang.String) -> c
    java.lang.String getJarnameURI() -> c
    java.lang.String getJarnameURL() -> b
    byte[] fileToByteArray(java.lang.String) -> d
jrdesktop.utilities.FileUtility$2 -> jrdesktop.b.e:
    boolean val$side -> a
    boolean accept(java.io.File,java.lang.String) -> accept
jrdesktop.utilities.ImageUtility -> jrdesktop.b.f:
    javax.imageio.ImageWriter writer -> a
    javax.imageio.ImageWriteParam param -> b
    void init() -> a
    byte[] toByteArray(java.awt.image.BufferedImage,float) -> a
    java.awt.image.BufferedImage toBufferedImage(byte[]) -> a
jrdesktop.utilities.PasswordUtility -> jrdesktop.b.g:
    javax.crypto.SecretKey key -> a
    javax.crypto.SecretKey genetateKey() -> b
    java.lang.String encodeString(java.lang.String) -> a
    java.lang.String decodeString(java.lang.String) -> b
    void passwordGenerator() -> a
jrdesktop.utilities.screenCaptureCompressor.Screen -> jrdesktop.b.a.a:
    java.util.HashMap screenBlocks -> a
    double screenSizeWidth -> b
    double screenSizeHeight -> c
    int rowScreenBlocks -> d
    int columnScreenBlocks -> e
    double screenBlockHeight -> f
    double screenBlockWidth -> g
    java.util.Vector changedScreenBlocks -> h
    void updateScreenSize(java.awt.Rectangle) -> a
    java.lang.String getScreenBlockName(int,int) -> a
    jrdesktop.utilities.screenCaptureCompressor.ScreenBlock getScreenBlockImage(java.lang.String) -> a
    void addScreenBlock(jrdesktop.utilities.screenCaptureCompressor.ScreenBlock) -> a
    java.util.Vector getChangedScreenBlocks() -> a
    java.util.HashMap getScreenBlocks() -> b
    int getRowScreenBlocks() -> c
    int getColumnScreenBlocks() -> d
    double getScreenBlockHeight() -> e
    double getScreenBlockWidth() -> f
    double getScreenSizeHeight() -> g
    double getScreenSizeWidth() -> h
jrdesktop.utilities.screenCaptureCompressor.ScreenBlock -> jrdesktop.b.a.b:
    byte[] data -> a
    java.lang.String name -> b
    int differences -> c
    java.lang.String getName() -> a
    byte[] getData() -> b
    boolean isModified(byte[],int) -> a
jrdesktop.utilities.screenCaptureCompressor.ScreenCapture -> jrdesktop.b.a.c:
    jrdesktop.utilities.screenCaptureCompressor.Screen screen -> a
    int modified -> b
    boolean isEmpty() -> a
    void clearScreen() -> b
    void takeAndSaveImage(java.awt.Robot,float,int,double,java.awt.Rectangle) -> a
    long getChangedBlocksSize(java.util.HashMap) -> a
    java.util.HashMap getChangedBlocks() -> c
    java.awt.image.BufferedImage setChangedBlocks(java.awt.image.BufferedImage,java.util.HashMap) -> a
    java.awt.Rectangle getScreenRect() -> d
    void updateScreenSize(java.awt.Rectangle) -> a
jrdesktop.viewer.ConnectionDialog -> jrdesktop.viewer.ConnectionDialog:
    jrdesktop.viewer.ConnectionDialog frame -> a
    boolean visible -> b
    int lastConfigIndex -> c
    jrdesktop.Config viewerConfig -> d
    javax.swing.JButton jButtonCancel -> e
    javax.swing.JButton jButtonOK -> f
    javax.swing.JCheckBox jCheckBoxReverseConnection -> g
    javax.swing.JCheckBox jCheckBoxSSLEnabled -> h
    javax.swing.JComboBox jComboBoxConfig -> i
    javax.swing.JLabel jLabel1 -> j
    javax.swing.JLabel jLabel2 -> k
    javax.swing.JLabel jLabel3 -> l
    javax.swing.JLabel jLabel4 -> m
    javax.swing.JLabel jLabel5 -> n
    javax.swing.JPanel jPanel1 -> o
    javax.swing.JPanel jPanel2 -> p
    javax.swing.JPanel jPanel3 -> q
    javax.swing.JPasswordField jPasswordField -> r
    javax.swing.JTextField jTextFieldIPAdr -> s
    javax.swing.JTextField jTextFieldPort -> t
    javax.swing.JTextField jTextFieldUsername -> u
    void main(java.lang.String[]) -> main
    void close() -> a
    void access$0(jrdesktop.viewer.ConnectionDialog,java.awt.event.WindowEvent) -> a
    void access$1(jrdesktop.viewer.ConnectionDialog,java.awt.event.ActionEvent) -> a
    void access$2(jrdesktop.viewer.ConnectionDialog,java.awt.event.ActionEvent) -> b
    void access$3(jrdesktop.viewer.ConnectionDialog,java.awt.event.ActionEvent) -> c
    void access$4(jrdesktop.viewer.ConnectionDialog) -> a
    jrdesktop.viewer.ConnectionDialog access$5() -> b
    void access$6(boolean) -> a
jrdesktop.viewer.ConnectionDialog$1 -> jrdesktop.viewer.a:
    jrdesktop.viewer.ConnectionDialog this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
jrdesktop.viewer.ConnectionDialog$2 -> jrdesktop.viewer.b:
    jrdesktop.viewer.ConnectionDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ConnectionDialog$3 -> jrdesktop.viewer.c:
    jrdesktop.viewer.ConnectionDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ConnectionDialog$4 -> jrdesktop.viewer.d:
    jrdesktop.viewer.ConnectionDialog this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ConnectionDialog$5 -> jrdesktop.viewer.e:
    void run() -> run
jrdesktop.viewer.EventsListener -> jrdesktop.viewer.f:
    jrdesktop.viewer.ScreenPlayer player -> a
    boolean isActive -> b
    java.awt.event.KeyAdapter keyAdapter -> c
    java.awt.event.MouseAdapter mouseAdapter -> d
    java.awt.event.MouseWheelListener mouseWheelListener -> e
    java.awt.event.MouseMotionAdapter mouseMotionAdapter -> f
    jrdesktop.viewer.FileMng.FilesDropTargetListener filesDropTargetListener -> g
    java.awt.dnd.DropTarget dropTarget -> h
    java.util.ArrayList keyEvents -> i
    java.util.ArrayList mouseEvents -> j
    java.util.ArrayList getMouseEvents() -> a
    java.util.ArrayList getKeyEvents() -> b
    void addAdapters() -> c
    void addAdapters(boolean) -> a
    void removeAdapters() -> d
    void removeAdapters(boolean) -> b
    java.util.ArrayList access$0(jrdesktop.viewer.EventsListener) -> a
    java.util.ArrayList access$1(jrdesktop.viewer.EventsListener) -> b
    jrdesktop.viewer.ScreenPlayer access$2(jrdesktop.viewer.EventsListener) -> c
jrdesktop.viewer.EventsListener$1 -> jrdesktop.viewer.g:
    jrdesktop.viewer.EventsListener this$0 -> a
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
jrdesktop.viewer.EventsListener$2 -> jrdesktop.viewer.h:
    jrdesktop.viewer.EventsListener this$0 -> a
    void mouseWheelMoved(java.awt.event.MouseWheelEvent) -> mouseWheelMoved
jrdesktop.viewer.EventsListener$3 -> jrdesktop.viewer.i:
    jrdesktop.viewer.EventsListener this$0 -> a
    void mouseMoved(java.awt.event.MouseEvent) -> mouseMoved
    void mouseDragged(java.awt.event.MouseEvent) -> mouseDragged
jrdesktop.viewer.EventsListener$4 -> jrdesktop.viewer.j:
    jrdesktop.viewer.EventsListener this$0 -> a
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
jrdesktop.viewer.FileMng.FileManager -> jrdesktop.viewer.a.a:
    java.io.File[] files -> a
    java.lang.String downloadingFolder -> b
    java.lang.String uploadingFolder -> c
    jrdesktop.viewer.Recorder recorder -> d
    java.io.File[] getFiles() -> a
    void setFiles(java.io.File[]) -> a
    void ReceiveFiles(jrdesktop.viewer.FileMng.FileTransGUI,java.io.File[]) -> a
    long ReceiveFile(java.lang.String,java.lang.String) -> a
    long SendFile(java.io.File) -> a
    void setUploadingFolder(java.lang.String) -> a
    void setDownloadingFolder(java.lang.String) -> b
jrdesktop.viewer.FileMng.FileTransGUI -> jrdesktop.viewer.a.b:
    jrdesktop.viewer.Recorder recorder -> a
    boolean canceled -> b
    boolean done -> c
    java.io.File[] files -> d
    long index -> e
    long count -> f
    long startedAt -> g
    long duration -> h
    long speed -> i
    float leftEstim -> j
    float totalEstim -> k
    org.jdesktop.swingworker.SwingWorker sendingWorker -> l
    org.jdesktop.swingworker.SwingWorker receivingWorker -> m
    javax.swing.JButton jButtonClose -> n
    javax.swing.JLabel jLabel1 -> o
    javax.swing.JLabel jLabelCurrentFile -> p
    javax.swing.JLabel jLabelDuration -> q
    javax.swing.JLabel jLabelFileCount -> r
    javax.swing.JLabel jLabelSpeed -> s
    javax.swing.JLabel jLabelTotalSize -> t
    javax.swing.JPanel jPanel1 -> u
    javax.swing.JProgressBar jProgressBar1 -> v
    void jButtonCloseActionPerformed$69169593() -> c
    boolean isCanceled() -> a
    void Done() -> b
    void ReceiveFiles(java.util.ArrayList) -> a
    void SendFiles(java.io.File[]) -> a
    void setCurrentFile(java.lang.String) -> a
    void updateData(long) -> a
    jrdesktop.viewer.Recorder access$0(jrdesktop.viewer.FileMng.FileTransGUI) -> a
    java.io.File[] access$1(jrdesktop.viewer.FileMng.FileTransGUI) -> b
    void access$2(jrdesktop.viewer.FileMng.FileTransGUI,java.awt.event.WindowEvent) -> a
    void access$3(jrdesktop.viewer.FileMng.FileTransGUI,java.awt.event.ActionEvent) -> a
jrdesktop.viewer.FileMng.FileTransGUI$1 -> jrdesktop.viewer.a.c:
    jrdesktop.viewer.FileMng.FileTransGUI this$0 -> a
    java.lang.Object doInBackground() -> a
    void done() -> b
jrdesktop.viewer.FileMng.FileTransGUI$2 -> jrdesktop.viewer.a.d:
    jrdesktop.viewer.FileMng.FileTransGUI this$0 -> a
    java.lang.Object doInBackground() -> a
    void done() -> b
jrdesktop.viewer.FileMng.FileTransGUI$3 -> jrdesktop.viewer.a.e:
    jrdesktop.viewer.FileMng.FileTransGUI this$0 -> a
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
jrdesktop.viewer.FileMng.FileTransGUI$4 -> jrdesktop.viewer.a.f:
    jrdesktop.viewer.FileMng.FileTransGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.FileMng.FilesDropTargetListener -> jrdesktop.viewer.a.g:
    jrdesktop.viewer.Recorder recorder -> a
    void dragEnter(java.awt.dnd.DropTargetDragEvent) -> dragEnter
    void dragExit(java.awt.dnd.DropTargetEvent) -> dragExit
    void dragOver(java.awt.dnd.DropTargetDragEvent) -> dragOver
    void dropActionChanged(java.awt.dnd.DropTargetDragEvent) -> dropActionChanged
    void drop(java.awt.dnd.DropTargetDropEvent) -> drop
    boolean isDragAcceptable(java.awt.dnd.DropTargetDragEvent) -> a
jrdesktop.viewer.Recorder -> jrdesktop.viewer.k:
    boolean recording -> j
    boolean viewOnly -> k
    boolean pause -> l
    boolean hold -> m
    boolean side -> n
    boolean thumbs -> o
    jrdesktop.Config config -> a
    jrdesktop.server.Server server -> p
    jrdesktop.viewer.Viewer viewer -> b
    jrdesktop.viewer.ViewerGUI viewerGUI -> c
    jrdesktop.viewer.ViewerGUIThumbs viewerGUIThumbs -> d
    jrdesktop.viewer.ScreenPlayer screenPlayer -> e
    jrdesktop.viewer.EventsListener eventsListener -> f
    jrdesktop.utilities.ClipbrdUtility clipbrdUtility -> g
    jrdesktop.viewer.ViewerOptions viewerOptions -> h
    jrdesktop.viewer.FileMng.FileManager fileManager -> i
    void init() -> h
    void run() -> run
    void Notify() -> a
    void Stop() -> b
    void terminate() -> c
    void Start() -> d
    boolean isRecording() -> e
    boolean isPaused() -> f
    void setPause(boolean) -> a
    void setViewOnly(boolean) -> b
    void setHold(boolean) -> c
    boolean isViewOnly() -> g
jrdesktop.viewer.ScreenPlayer -> jrdesktop.viewer.l:
    jrdesktop.viewer.Recorder recorder -> h
    float screenScale -> i
    float oldscreenScale -> j
    boolean PartialScreenMode -> a
    java.awt.image.BufferedImage screenImage -> k
    java.awt.Rectangle selectionRect -> l
    java.awt.Rectangle oldselectionRect -> m
    java.awt.Rectangle screenRect -> n
    java.awt.Rectangle oldScreenRect -> o
    boolean isSelecting -> b
    boolean thumb -> c
    int srcx -> d
    int srcy -> e
    int destx -> f
    int desty -> g
    java.awt.BasicStroke bs -> p
    java.awt.GradientPaint gp -> q
    void updateScreenRect() -> c
    void paint(java.awt.Graphics) -> paint
    void UpdateScreen(byte[]) -> a
    void UpdateScreen(java.util.HashMap) -> a
    void DrawSelectingRect(java.awt.Graphics) -> a
    void stopSelectingMode() -> a
    void doneSelecting() -> b
jrdesktop.viewer.Viewer -> jrdesktop.viewer.m:
    int index -> a
    jrdesktop.viewer.Recorder recorder -> b
    jrdesktop.rmi.client.RMIClient client -> c
    boolean connected -> d
    java.util.Hashtable viewers -> e
    boolean running -> f
    boolean isConnected() -> a
    void Start() -> b
    void StartThumbs(javax.swing.JInternalFrame) -> a
    void Stop() -> c
    int connect() -> d
    void disconnect() -> e
    void setOptions(java.lang.Object) -> a
    void setOption(int) -> a
    void setKeyEvents() -> f
    void setMouseEvents() -> g
    void getClipboardContent() -> h
    void setClipboardContect() -> i
    void getScreenCapture() -> j
    void getScreenRect() -> k
    void getConnectionInfos() -> l
    void getHostProperties() -> m
    void SendFiles() -> n
    void ReceiveFiles() -> o
    byte[] ReceiveFile(java.lang.String) -> a
    void SendFile(byte[],java.lang.String) -> a
    int addViewer(java.net.InetAddress) -> a
    int removeViewer(int) -> b
    int getViewerIndex(jrdesktop.viewer.Recorder) -> b
    int removeViewer(jrdesktop.viewer.Recorder) -> a
    void setPause(jrdesktop.viewer.Recorder,boolean) -> a
    void _Start(jrdesktop.Config) -> a
    void _Stop() -> p
    boolean isRunning() -> q
    void setScreenCapture(byte[],int) -> a
    void setChangedScreenBlocks(java.util.HashMap,int) -> a
    void setScreenRect(java.awt.Rectangle,int) -> a
    java.util.ArrayList getMouseEvents(int) -> c
    java.util.ArrayList getKeyEvents(int) -> d
    void setClipboardContent(java.lang.Object,int) -> a
    java.lang.Object getClipboardContent(int) -> e
    void setOptionsChanged(int,boolean) -> a
    boolean isOptionsChanged(int) -> f
    java.lang.Object getOptions(int) -> g
    java.lang.Object getOption(int,int) -> a
    java.util.ArrayList getConnectionInfos(int) -> h
    void setHostProperties(int,java.util.Hashtable) -> a
    jrdesktop.viewer.Recorder getRecorder() -> r
jrdesktop.viewer.ViewerGUI -> jrdesktop.viewer.n:
    boolean fullScreenMode -> b
    jrdesktop.viewer.Recorder recorder -> c
    javax.swing.JButton jBtnClose -> d
    javax.swing.JButton jBtnFileTransfer -> e
    javax.swing.JButton jBtnFullNormal -> f
    javax.swing.JButton jBtnHelp -> g
    javax.swing.JButton jBtnPartialComplete -> a
    javax.swing.JButton jBtnStartStop -> h
    javax.swing.JButton jBtnViewCtrl -> i
    javax.swing.JCheckBox jCheckBoxClipTrans -> j
    javax.swing.JCheckBox jCheckBoxImageQuality -> k
    javax.swing.JCheckBox jCheckBoxScreenCompress -> l
    javax.swing.JComboBox jComboBoxColorQuality -> m
    javax.swing.JComboBox jComboBoxImageQuality -> n
    javax.swing.JComboBox jComboBoxRefreshRate -> o
    javax.swing.JComboBox jComboBoxScreenZoom -> p
    javax.swing.JLabel jLabel1 -> q
    javax.swing.JLabel jLabel2 -> r
    javax.swing.JLabel jLabel3 -> s
    javax.swing.JLabel jLabel4 -> t
    javax.swing.JLabel jLabel5 -> u
    javax.swing.JLabel jLabel6 -> v
    javax.swing.JMenuItem jMenuItemAbout -> w
    javax.swing.JMenuItem jMenuItemConnectInfo -> z
    javax.swing.JMenuItem jMenuItemHostProps -> A
    javax.swing.JMenuItem jMenuItemReceiveFilesFromClipbrd -> B
    javax.swing.JMenuItem jMenuItemSendFilesFromClipbrd -> C
    javax.swing.JPopupMenu jPopupMenuFileTranfer -> D
    javax.swing.JPopupMenu jPopupMenuHelp -> E
    javax.swing.JScrollPane jScrollPane1 -> F
    javax.swing.JToolBar$Separator jSeparator1 -> G
    javax.swing.JToolBar$Separator jSeparator10 -> H
    javax.swing.JToolBar$Separator jSeparator11 -> I
    javax.swing.JToolBar$Separator jSeparator12 -> J
    javax.swing.JToolBar$Separator jSeparator13 -> K
    javax.swing.JToolBar$Separator jSeparator14 -> L
    javax.swing.JToolBar$Separator jSeparator15 -> M
    javax.swing.JToolBar$Separator jSeparator4 -> N
    javax.swing.JToolBar$Separator jSeparator5 -> O
    javax.swing.JToolBar$Separator jSeparator6 -> P
    javax.swing.JToolBar$Separator jSeparator9 -> Q
    javax.swing.JToggleButton jToggleBtnPauseResume -> R
    javax.swing.JToolBar jToolBar1 -> S
    void Start() -> a
    void jBtnStartStopActionPerformed$69169593() -> d
    void jBtnCloseActionPerformed$69169593() -> e
    boolean isFullScreenMode() -> b
    void changeFullScreenMode() -> c
    void access$0(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> a
    void access$1(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> b
    void access$2(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> c
    void access$3(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> d
    void access$4(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> e
    void access$5(jrdesktop.viewer.ViewerGUI,java.awt.event.WindowEvent) -> a
    void access$6(jrdesktop.viewer.ViewerGUI,java.awt.event.WindowEvent) -> b
    void access$7(jrdesktop.viewer.ViewerGUI,java.awt.event.WindowEvent) -> c
    void access$8(jrdesktop.viewer.ViewerGUI,java.awt.event.WindowEvent) -> d
    void access$9(jrdesktop.viewer.ViewerGUI,java.awt.event.WindowEvent) -> e
    void access$10(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> f
    void access$11(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> g
    void access$12(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> h
    void access$13(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> i
    void access$14(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> j
    void access$15(jrdesktop.viewer.ViewerGUI,java.awt.event.ItemEvent) -> a
    void access$16(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> k
    void access$17(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> l
    void access$18(jrdesktop.viewer.ViewerGUI,java.awt.event.ItemEvent) -> b
    void access$19(jrdesktop.viewer.ViewerGUI,java.awt.event.ItemEvent) -> c
    void access$20(jrdesktop.viewer.ViewerGUI,java.awt.event.ItemEvent) -> d
    void access$21(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> m
    void access$22(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> n
    void access$23(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> o
    void access$24(jrdesktop.viewer.ViewerGUI,java.awt.event.ActionEvent) -> p
jrdesktop.viewer.ViewerGUI$1 -> jrdesktop.viewer.o:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$10 -> jrdesktop.viewer.p:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$11 -> jrdesktop.viewer.q:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$12 -> jrdesktop.viewer.r:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
jrdesktop.viewer.ViewerGUI$13 -> jrdesktop.viewer.s:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$14 -> jrdesktop.viewer.t:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$15 -> jrdesktop.viewer.u:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
jrdesktop.viewer.ViewerGUI$16 -> jrdesktop.viewer.v:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
jrdesktop.viewer.ViewerGUI$17 -> jrdesktop.viewer.w:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void itemStateChanged(java.awt.event.ItemEvent) -> itemStateChanged
jrdesktop.viewer.ViewerGUI$18 -> jrdesktop.viewer.x:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$19 -> jrdesktop.viewer.y:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$2 -> jrdesktop.viewer.z:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$20 -> jrdesktop.viewer.A:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$21 -> jrdesktop.viewer.B:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$3 -> jrdesktop.viewer.C:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$4 -> jrdesktop.viewer.D:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$5 -> jrdesktop.viewer.E:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$6 -> jrdesktop.viewer.F:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void windowActivated(java.awt.event.WindowEvent) -> windowActivated
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
    void windowDeactivated(java.awt.event.WindowEvent) -> windowDeactivated
    void windowDeiconified(java.awt.event.WindowEvent) -> windowDeiconified
    void windowIconified(java.awt.event.WindowEvent) -> windowIconified
jrdesktop.viewer.ViewerGUI$7 -> jrdesktop.viewer.G:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$8 -> jrdesktop.viewer.H:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUI$9 -> jrdesktop.viewer.I:
    jrdesktop.viewer.ViewerGUI this$0 -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
jrdesktop.viewer.ViewerGUIThumbs -> jrdesktop.viewer.J:
    jrdesktop.viewer.Recorder recorder -> a
    javax.swing.JScrollPane jScrollPane1 -> b
    void Start(javax.swing.JInternalFrame) -> a
jrdesktop.viewer.ViewerOptions -> jrdesktop.viewer.K:
    boolean changed -> f
    java.net.InetAddress inetAddress -> g
    float imageQuality -> h
    float screenScale -> i
    int colorQuality -> j
    boolean clipboardTransfer -> k
    java.awt.Rectangle screenRect -> l
    java.util.Hashtable properties -> m
    jrdesktop.ConnectionInfos connectionInfos -> a
    java.awt.image.BufferedImage screenImage -> b
    jrdesktop.utilities.screenCaptureCompressor.ScreenCapture capture -> c
    int blocks -> n
    boolean screenCompression -> d
    int refreshRate -> e
    boolean isChanged() -> a
    void setChanged(boolean) -> a
    java.net.InetAddress getInetAddress() -> b
    void setImageQuality(float) -> a
    float getImageQuality() -> c
    void setColorQuality(int) -> a
    int getColorQuality() -> d
    void setScreenScale(float) -> b
    float getScreenScale() -> e
    void setScreenRect(java.awt.Rectangle) -> a
    java.awt.Rectangle getScreenRect() -> f
    void setClipboardTransfer(boolean) -> b
    boolean getClipboardTransfer() -> g
    java.util.Hashtable getProperties() -> h
    void setProperties(java.util.Hashtable) -> a
    java.util.ArrayList getOptions() -> i
    void setOptions(java.lang.Object) -> a
    java.lang.Object getOption(int) -> b
    void setOption(java.lang.Object,int) -> a
    void setNewScreenImage(java.awt.Rectangle,int) -> a
licensejni.License -> licensejni.License:
    void __ctorLicense0(net.sf.jni4net.inj.IClrProxy) -> __ctorLicense0
    int Validate(boolean) -> Validate
org.eclipse.wb.swing.FocusTraversalOnArray -> org.a.a.a.a:
    java.awt.Component[] m_Components -> a
    java.awt.Component cycle(java.awt.Component,int) -> a
    java.awt.Component getComponentAfter(java.awt.Container,java.awt.Component) -> getComponentAfter
    java.awt.Component getComponentBefore(java.awt.Container,java.awt.Component) -> getComponentBefore
    java.awt.Component getFirstComponent(java.awt.Container) -> getFirstComponent
    java.awt.Component getLastComponent(java.awt.Container) -> getLastComponent
    java.awt.Component getDefaultComponent(java.awt.Container) -> getDefaultComponent
org.jdesktop.layout.AquaLayoutStyle -> org.b.a.a:
    java.awt.Insets EMPTY_INSETS -> a
    java.lang.Object[][] containerGapDefinitions -> b
    java.lang.Object[][] relatedGapDefinitions -> c
    java.lang.Object[][] unrelatedGapDefinitions -> d
    java.lang.Object[][] indentGapDefinitions -> e
    java.lang.Object[][] visualMarginDefinitions -> f
    java.util.Map RELATED_GAPS -> g
    java.util.Map UNRELATED_GAPS -> h
    java.util.Map CONTAINER_GAPS -> i
    java.util.Map INDENT_GAPS -> j
    java.util.Map VISUAL_MARGINS -> k
    boolean $assertionsDisabled -> l
    java.util.Map createInsetsMap(java.lang.Object[][]) -> a
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    java.awt.Insets getPreferredGap(javax.swing.JComponent,int,int) -> b
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
    java.awt.Insets getInsets(java.util.Map,java.lang.String,java.lang.String,int) -> a
    java.awt.Insets getVisualMargin(javax.swing.JComponent) -> a
    int getSizeStyle(java.awt.Component) -> a
    java.awt.Insets access$0() -> a
org.jdesktop.layout.AquaLayoutStyle$ComponentInsets -> org.b.a.b:
    java.util.Map children -> a
    java.awt.Insets[] insets -> b
    void setInsets(java.awt.Insets[]) -> a
    java.awt.Insets[] getInsets() -> a
    java.awt.Insets getInsets(int) -> a
    void addSubinsets(java.lang.String,org.jdesktop.layout.AquaLayoutStyle$ComponentInsets) -> a
    org.jdesktop.layout.AquaLayoutStyle$ComponentInsets getSubinsets(java.lang.String) -> a
org.jdesktop.layout.Baseline -> org.b.a.c:
    java.awt.Rectangle viewRect -> a
    java.awt.Rectangle textRect -> b
    java.awt.Rectangle iconRect -> c
    java.awt.Insets EMPTY_INSETS -> d
    javax.swing.JLabel TABLE_LABEL -> e
    javax.swing.JLabel LIST_LABEL -> f
    javax.swing.JLabel TREE_LABEL -> g
    java.lang.Class CLASSIC_WINDOWS -> h
    boolean checkedForClassic -> i
    java.lang.Class WINDOWS_CLASS -> j
    boolean checkedForWindows -> k
    boolean inSandbox -> l
    boolean checkedForOcean -> m
    boolean usingOcean -> n
    java.util.Map BASELINE_MAP -> o
    java.util.Map BRB_I_MAP -> p
    java.lang.reflect.Method COMPONENT_BASELINE_METHOD -> q
    java.lang.reflect.Method COMPONENT_BRB_METHOD -> r
    java.lang.Object ENUM_BRB_CENTER_OFFSET -> s
    java.lang.Object ENUM_BRB_CONSTANT_ASCENT -> t
    java.lang.Object ENUM_BRB_CONSTANT_DESCENT -> u
    javax.swing.JList brbList -> v
    javax.swing.ListCellRenderer brbListCellRenderer -> w
    boolean $assertionsDisabled -> x
    java.lang.Object getFieldValue(java.lang.Class,java.lang.String) -> a
    int getBaselineResizeBehavior(java.awt.Component) -> a
    int getBaselineResizeBehavior(javax.swing.JComponent) -> a
    int getBaselineResizeBehaviorUsingMustang(javax.swing.JComponent) -> b
    int invokeBRBIMethod(java.lang.reflect.Method,java.awt.Component) -> a
    int invokeBaseline(java.lang.reflect.Method,javax.swing.JComponent,int,int) -> a
    int getBaseline(javax.swing.JComponent,int,int) -> a
    int getMaxTabHeight(javax.swing.JTabbedPane) -> a
    java.lang.Integer getMaxSliderValue(javax.swing.JSlider) -> a
    java.lang.Integer getMinSliderValue(javax.swing.JSlider) -> b
    int getLabelBaseline(javax.swing.JLabel,int) -> a
    int getSingleLineTextBaseline(javax.swing.text.JTextComponent,int) -> a
    void resetRects(javax.swing.JComponent,int) -> a
    boolean isOceanTheme() -> a
    boolean isWindows(javax.swing.LookAndFeel) -> a
    boolean isMetal(javax.swing.LookAndFeel) -> b
    boolean isGTK() -> b
    boolean isAqua() -> c
    boolean isXP() -> d
org.jdesktop.layout.GnomeLayoutStyle -> org.b.a.d:
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
org.jdesktop.layout.GroupLayout -> org.b.a.e:
    org.jdesktop.layout.GroupLayout$Group horizontalGroup -> a
    org.jdesktop.layout.GroupLayout$Group verticalGroup -> b
    java.util.Map componentInfos -> c
    java.awt.Container host -> d
    java.util.Set tmpParallelSet -> e
    boolean springsChanged -> f
    boolean isValid -> g
    boolean hasPreferredPaddingSprings -> h
    boolean honorsVisibility -> i
    void checkResizeType(int,boolean) -> b
    void checkLessThan(int,int) -> a
    boolean getHonorsVisibility() -> a
    java.lang.String toString() -> toString
    void dump(java.lang.StringBuffer,org.jdesktop.layout.GroupLayout$Spring,java.lang.String,int) -> a
    void setHorizontalGroup(org.jdesktop.layout.GroupLayout$Group) -> a
    void setVerticalGroup(org.jdesktop.layout.GroupLayout$Group) -> b
    org.jdesktop.layout.GroupLayout$Group createTopLevelGroup(org.jdesktop.layout.GroupLayout$Group) -> c
    org.jdesktop.layout.GroupLayout$SequentialGroup createSequentialGroup() -> b
    org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int) -> a
    org.jdesktop.layout.GroupLayout$ParallelGroup createParallelGroup(int,boolean) -> a
    void invalidateHost() -> c
    void addLayoutComponent(java.lang.String,java.awt.Component) -> addLayoutComponent
    void removeLayoutComponent(java.awt.Component) -> removeLayoutComponent
    java.awt.Dimension preferredLayoutSize(java.awt.Container) -> preferredLayoutSize
    java.awt.Dimension minimumLayoutSize(java.awt.Container) -> minimumLayoutSize
    void layoutContainer(java.awt.Container) -> layoutContainer
    void addLayoutComponent(java.awt.Component,java.lang.Object) -> addLayoutComponent
    java.awt.Dimension maximumLayoutSize(java.awt.Container) -> maximumLayoutSize
    float getLayoutAlignmentX(java.awt.Container) -> getLayoutAlignmentX
    float getLayoutAlignmentY(java.awt.Container) -> getLayoutAlignmentY
    void invalidateLayout(java.awt.Container) -> invalidateLayout
    void prepare(int) -> b
    void calculateAutopadding(org.jdesktop.layout.GroupLayout$Group,int,int,int,int) -> a
    void registerComponents(org.jdesktop.layout.GroupLayout$Group,int) -> a
    java.awt.Dimension adjustSize(int,int) -> b
    void checkParent(java.awt.Container) -> a
    org.jdesktop.layout.GroupLayout$ComponentInfo getComponentInfo(java.awt.Component) -> a
    void insertAutopadding(boolean) -> a
    boolean isLeftToRight() -> d
    void access$0(org.jdesktop.layout.GroupLayout,boolean) -> a
    void access$1(org.jdesktop.layout.GroupLayout,boolean) -> b
    void access$2(int,int,int,boolean) -> a
    org.jdesktop.layout.GroupLayout$ComponentInfo access$3(org.jdesktop.layout.GroupLayout,java.awt.Component) -> a
    org.jdesktop.layout.LayoutStyle access$4(org.jdesktop.layout.GroupLayout) -> a
    java.awt.Container access$5(org.jdesktop.layout.GroupLayout) -> b
    boolean access$6(org.jdesktop.layout.GroupLayout) -> c
    boolean access$7(org.jdesktop.layout.GroupLayout,java.awt.Component,java.awt.Component,int) -> a
org.jdesktop.layout.GroupLayout$AutopaddingMatch -> org.b.a.f:
    org.jdesktop.layout.GroupLayout$ComponentSpring source -> a
    org.jdesktop.layout.GroupLayout$ComponentSpring target -> b
    java.lang.String toString() -> toString
org.jdesktop.layout.GroupLayout$AutopaddingSpring -> org.b.a.g:
    java.util.List sources -> a
    org.jdesktop.layout.GroupLayout$ComponentSpring source -> b
    java.util.List matches -> e
    int size -> c
    int lastSize -> d
    int pref -> f
    int max -> g
    int type -> h
    boolean userCreated -> i
    org.jdesktop.layout.GroupLayout this$0 -> j
    void setSources(java.util.List) -> a
    void setUserCreated(boolean) -> a
    boolean getUserCreated() -> a_
    void unset() -> b
    void reset() -> b_
    void calculatePadding(int) -> a
    void addTarget(org.jdesktop.layout.GroupLayout$ComponentSpring,int) -> a
    int calculateMinimumSize(int) -> b
    int calculatePreferredSize(int) -> c
    int calculateMaximumSize(int) -> d
    java.lang.String getMatchDescription() -> d
    java.lang.String toString() -> toString
    boolean willHaveZeroSize(boolean) -> b
org.jdesktop.layout.GroupLayout$BaselineGroup -> org.b.a.h:
    boolean allSpringsHaveBaseline -> b
    int prefAscent -> c
    int prefDescent -> d
    boolean baselineAnchoredToTop -> e
    boolean calcedBaseline -> f
    void unset() -> b
    void setValidSize(int,int,int) -> a_
    int calculateSize(int,int) -> a
    int getBaseline() -> a
    int getBaselineResizeBehavior() -> c
    void checkAxis(int) -> f
org.jdesktop.layout.GroupLayout$ComponentInfo -> org.b.a.i:
    java.awt.Component component -> c
    org.jdesktop.layout.GroupLayout$ComponentSpring horizontalSpring -> a
    org.jdesktop.layout.GroupLayout$ComponentSpring verticalSpring -> b
    org.jdesktop.layout.GroupLayout$LinkInfo horizontalMaster -> d
    org.jdesktop.layout.GroupLayout$LinkInfo verticalMaster -> e
    boolean visible -> f
    org.jdesktop.layout.GroupLayout this$0 -> g
    boolean $assertionsDisabled -> h
    void dispose() -> a
    void removeSpring(org.jdesktop.layout.GroupLayout$Spring) -> a
    boolean isVisible() -> b
    boolean updateVisibility() -> c
    void setBounds(java.awt.Insets,int,boolean) -> a
    java.awt.Component getComponent() -> d
    boolean isLinked(int) -> a
    void clearCachedSize() -> e
    int getLinkSize$255f288(int) -> b
    void access$1(org.jdesktop.layout.GroupLayout$ComponentInfo,int,org.jdesktop.layout.GroupLayout$LinkInfo) -> a
    java.awt.Component access$2(org.jdesktop.layout.GroupLayout$ComponentInfo) -> a
org.jdesktop.layout.GroupLayout$ComponentSpring -> org.b.a.j:
    java.awt.Component component -> a
    int origin -> b
    int min -> c
    int pref -> d
    int max -> e
    int baseline -> f
    boolean installed -> g
    org.jdesktop.layout.GroupLayout this$0 -> h
    boolean $assertionsDisabled -> i
    int calculateMinimumSize(int) -> b
    int calculatePreferredSize(int) -> c
    int calculateMaximumSize(int) -> d
    boolean isVisible() -> d
    int calculateNonlinkedPreferredSize(int) -> a
    int getSizeAlongAxis(int,java.awt.Dimension) -> a
    int getLinkSize(int,int) -> a
    void setSize(int,int,int) -> a
    int getOrigin() -> e
    java.awt.Component getComponent() -> f
    int getBaseline() -> a
    int getBaselineResizeBehavior() -> c
    boolean isLinked(int) -> f
    void installIfNecessary(int) -> e
    boolean willHaveZeroSize(boolean) -> b
org.jdesktop.layout.GroupLayout$ContainerAutopaddingSpring -> org.b.a.k:
    java.util.List targets -> e
    org.jdesktop.layout.GroupLayout this$0 -> f
    void addTarget(org.jdesktop.layout.GroupLayout$ComponentSpring,int) -> a
    void calculatePadding(int) -> a
    java.lang.String getMatchDescription() -> d
org.jdesktop.layout.GroupLayout$GapSpring -> org.b.a.l:
    int min -> a
    int pref -> b
    int max -> c
    int calculateMinimumSize(int) -> b
    int calculatePreferredSize(int) -> c
    int calculateMaximumSize(int) -> d
    boolean willHaveZeroSize(boolean) -> b
org.jdesktop.layout.GroupLayout$Group -> org.b.a.m:
    java.util.List springs -> a
    org.jdesktop.layout.GroupLayout this$0 -> b
    boolean $assertionsDisabled -> c
    org.jdesktop.layout.GroupLayout$Group addSpring(org.jdesktop.layout.GroupLayout$Spring) -> a
    void setSize(int,int,int) -> a
    void setValidSize(int,int,int) -> a_
    int calculateMinimumSize(int) -> b
    int calculatePreferredSize(int) -> c
    int calculateMaximumSize(int) -> d
    int operator(int,int) -> b
    int calculateSize(int,int) -> a
    org.jdesktop.layout.GroupLayout$Spring getSpring(int) -> a
    int getSpringSize(org.jdesktop.layout.GroupLayout$Spring,int,int) -> a
    void insertAutopadding(int,java.util.List,java.util.List,java.util.List,java.util.List,boolean) -> a
    void removeAutopadding() -> d
    void unsetAutopadding() -> e
    void calculateAutopadding(int) -> e
    boolean willHaveZeroSize(boolean) -> b
org.jdesktop.layout.GroupLayout$LinkInfo -> org.b.a.n:
    int axis -> a
    java.util.List linked -> b
    int size -> c
    boolean $assertionsDisabled -> d
    void remove(org.jdesktop.layout.GroupLayout$ComponentInfo) -> a
    void clearCachedSize() -> a
    int getSize(int) -> a
org.jdesktop.layout.GroupLayout$ParallelGroup -> org.b.a.o:
    int childAlignment -> b
    boolean resizable -> c
    org.jdesktop.layout.GroupLayout this$0 -> d
    org.jdesktop.layout.GroupLayout$ParallelGroup add(org.jdesktop.layout.GroupLayout$Group) -> a
    org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component) -> a
    org.jdesktop.layout.GroupLayout$ParallelGroup add(java.awt.Component,int,int,int) -> a
    org.jdesktop.layout.GroupLayout$ParallelGroup add(int,org.jdesktop.layout.GroupLayout$Group) -> a
    org.jdesktop.layout.GroupLayout$ParallelGroup add(int,java.awt.Component,int,int,int) -> a
    int operator(int,int) -> b
    int calculateMinimumSize(int) -> b
    int calculateMaximumSize(int) -> d
    void setValidSize(int,int,int) -> a_
    void setChildSize(org.jdesktop.layout.GroupLayout$Spring,int,int,int) -> a
    void insertAutopadding(int,java.util.List,java.util.List,java.util.List,java.util.List,boolean) -> a
    void checkChildAlignment(int) -> f
org.jdesktop.layout.GroupLayout$SequentialGroup -> org.b.a.p:
    org.jdesktop.layout.GroupLayout this$0 -> b
    boolean $assertionsDisabled -> c
    org.jdesktop.layout.GroupLayout$SequentialGroup add(org.jdesktop.layout.GroupLayout$Group) -> a
    org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component) -> a
    org.jdesktop.layout.GroupLayout$SequentialGroup add(java.awt.Component,int,int,int) -> a
    org.jdesktop.layout.GroupLayout$SequentialGroup add(int,int,int) -> b
    org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int) -> f
    org.jdesktop.layout.GroupLayout$SequentialGroup addPreferredGap(int,int,int) -> c
    org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap() -> f
    org.jdesktop.layout.GroupLayout$SequentialGroup addContainerGap(int,int) -> c
    int operator(int,int) -> b
    void setValidSize(int,int,int) -> a_
    java.util.List buildResizableList(int,boolean) -> a
    int indexOfNextNonZeroSpring(int,boolean) -> b
    void insertAutopadding(int,java.util.List,java.util.List,java.util.List,java.util.List,boolean) -> a
    int getBaseline() -> a
    int getBaselineResizeBehavior() -> c
org.jdesktop.layout.GroupLayout$Spring -> org.b.a.q:
    int size -> a
    int min -> b
    int max -> c
    int pref -> d
    org.jdesktop.layout.GroupLayout$Spring parent -> e
    int alignment -> f
    int calculateMinimumSize(int) -> b
    int calculatePreferredSize(int) -> c
    int calculateMaximumSize(int) -> d
    void setParent(org.jdesktop.layout.GroupLayout$Spring) -> b
    org.jdesktop.layout.GroupLayout$Spring getParent() -> g
    void setAlignment(int) -> g
    int getAlignment() -> h
    int getMinimumSize(int) -> h
    int getPreferredSize(int) -> i
    int getMaximumSize(int) -> j
    void unset() -> b
    void setSize(int,int,int) -> a
    int getSize() -> i
    int getBaseline() -> a
    int getBaselineResizeBehavior() -> c
    boolean isResizable(int) -> k
    boolean willHaveZeroSize(boolean) -> b
org.jdesktop.layout.GroupLayout$SpringDelta -> org.b.a.r:
    int index -> a
    int delta -> b
    int compareTo(java.lang.Object) -> compareTo
    java.lang.String toString() -> toString
org.jdesktop.layout.LayoutStyle -> org.b.a.s:
    boolean USE_CORE_LAYOUT_STYLE -> a
    org.jdesktop.layout.LayoutStyle layoutStyle -> b
    javax.swing.LookAndFeel laf -> c
    boolean $assertionsDisabled -> d
    org.jdesktop.layout.LayoutStyle getSharedInstance() -> b
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
    int getCBRBPadding(javax.swing.JComponent,javax.swing.JComponent,int,int) -> a
    int getCBRBPadding(javax.swing.JComponent,int,int) -> a
    int flipDirection(int) -> a
    int getCBRBPadding(javax.swing.JComponent,int) -> b
    int getButtonChildIndent(javax.swing.JComponent,int) -> a
org.jdesktop.layout.MetalLayoutStyle -> org.b.a.t:
    boolean isOcean -> a
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    int getCBRBPadding(javax.swing.JComponent,javax.swing.JComponent,int,int) -> a
    int getButtonAdjustment(javax.swing.JComponent,int) -> b
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
org.jdesktop.layout.SwingLayoutStyle -> org.b.a.u:
    java.lang.reflect.Method SWING_GET_LAYOUT_STYLE_METHOD -> a
    java.lang.reflect.Method SWING_GET_PREFERRED_GAP_METHOD -> b
    java.lang.reflect.Method SWING_GET_CONTAINER_GAP_METHOD -> c
    java.lang.Object RELATED_TYPE -> d
    java.lang.Object UNRELATED_TYPE -> e
    java.lang.Object INDENT_TYPE -> f
    boolean $assertionsDisabled -> g
    java.lang.Object getSwingLayoutStyle() -> a
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
org.jdesktop.layout.WindowsLayoutStyle -> org.b.a.v:
    int baseUnitX -> a
    int baseUnitY -> b
    boolean $assertionsDisabled -> c
    int getPreferredGap(javax.swing.JComponent,javax.swing.JComponent,int,int,java.awt.Container) -> a
    int getContainerGap(javax.swing.JComponent,int,java.awt.Container) -> a
    int dluToPixels(int,int) -> a
org.jdesktop.swingworker.AccumulativeRunnable -> org.b.b.a:
    java.util.List arguments -> a
    void run(java.util.List) -> a
    void run() -> run
    void add(boolean,java.lang.Object[]) -> a
    void submit() -> a
    java.util.List flush() -> b
org.jdesktop.swingworker.SwingWorker -> org.b.b.b:
    org.jdesktop.swingworker.SwingWorker$StateValue state -> a
    java.util.concurrent.FutureTask future -> b
    java.beans.PropertyChangeSupport propertyChangeSupport -> c
    org.jdesktop.swingworker.AccumulativeRunnable doSubmit -> d
    java.util.concurrent.ExecutorService executorService -> e
    java.lang.Object doInBackground() -> a
    void run() -> run
    void done() -> b
    void execute() -> c
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.util.concurrent.ExecutorService getWorkersExecutorService() -> e
    org.jdesktop.swingworker.AccumulativeRunnable access$0() -> d
    void access$1(org.jdesktop.swingworker.SwingWorker,org.jdesktop.swingworker.SwingWorker$StateValue) -> a
    void access$2(org.jdesktop.swingworker.SwingWorker) -> a
org.jdesktop.swingworker.SwingWorker$1 -> org.b.b.c:
    org.jdesktop.swingworker.SwingWorker this$0 -> a
    java.lang.Object call() -> call
org.jdesktop.swingworker.SwingWorker$2 -> org.b.b.d:
    org.jdesktop.swingworker.SwingWorker this$0 -> a
    void done() -> done
org.jdesktop.swingworker.SwingWorker$5 -> org.b.b.e:
    org.jdesktop.swingworker.SwingWorker this$0 -> a
    void run() -> run
org.jdesktop.swingworker.SwingWorker$6 -> org.b.b.f:
    java.util.concurrent.atomic.AtomicInteger threadNumber -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
org.jdesktop.swingworker.SwingWorker$7 -> org.b.b.g:
    java.util.concurrent.locks.ReentrantLock pauseLock -> a
    java.util.concurrent.locks.Condition unpaused -> b
    boolean isPaused -> c
    java.util.concurrent.locks.ReentrantLock executeLock -> d
    void execute(java.lang.Runnable) -> execute
    void afterExecute(java.lang.Runnable,java.lang.Throwable) -> afterExecute
org.jdesktop.swingworker.SwingWorker$DoSubmitAccumulativeRunnable -> org.b.b.h:
    void run(java.util.List) -> a
    void submit() -> a
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.jdesktop.swingworker.SwingWorker$StateValue -> org.b.b.i:
    org.jdesktop.swingworker.SwingWorker$StateValue PENDING -> a
    org.jdesktop.swingworker.SwingWorker$StateValue STARTED -> b
    org.jdesktop.swingworker.SwingWorker$StateValue DONE -> c
    org.jdesktop.swingworker.SwingWorker$StateValue[] ENUM$VALUES -> d
    org.jdesktop.swingworker.SwingWorker$StateValue[] values() -> values
    org.jdesktop.swingworker.SwingWorker$StateValue valueOf(java.lang.String) -> valueOf
org.jdesktop.swingworker.SwingWorker$SwingWorkerPropertyChangeSupport -> org.b.b.j:
    void firePropertyChange(java.beans.PropertyChangeEvent) -> firePropertyChange
org.jdesktop.swingworker.SwingWorker$SwingWorkerPropertyChangeSupport$1 -> org.b.b.k:
    org.jdesktop.swingworker.SwingWorker$SwingWorkerPropertyChangeSupport this$1 -> a
    java.beans.PropertyChangeEvent val$evt -> b
    void run() -> run
org.jitsi.examples.AVReceiveOnly -> org.jitsi.examples.AVReceiveOnly:
    javax.swing.JDialog frame -> a
    int localPortBase -> b
    org.jitsi.service.neomedia.MediaStream[] mediaStreams -> c
    java.net.InetAddress remoteAddr -> d
    int remotePortBase -> e
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType -> f
    boolean initialize(java.lang.String) -> a
    void close() -> a
    void main(java.lang.String[]) -> main
    void setRemoteAddr(java.net.InetAddress) -> a
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType() -> b
org.jitsi.examples.AVSendOnly -> org.jitsi.examples.AVSendOnly:
    javax.swing.JDialog frame -> a
    boolean transmitting -> b
    int localPortBase -> c
    org.jitsi.service.neomedia.MediaStream[] mediaStreams -> d
    java.net.InetAddress remoteAddr -> e
    int remotePortBase -> f
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType -> g
    java.lang.String start(java.lang.String) -> a
    void stop() -> a
    void main(java.lang.String[]) -> main
    java.net.InetAddress getRemoteAddr() -> b
    void setRemoteAddr(java.net.InetAddress) -> a
    boolean isTransmitting() -> c
    void setTransmitting(boolean) -> a
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType() -> d
org.jitsi.examples.AVTransmit2 -> org.jitsi.examples.a:
    boolean transmitting -> a
    int localPortBase -> b
    org.jitsi.service.neomedia.MediaStream[] mediaStreams -> c
    java.net.InetAddress remoteAddr -> d
    int remotePortBase -> e
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType -> f
    java.lang.String start(java.lang.String) -> a
    void stop() -> a
    java.net.InetAddress getRemoteAddr() -> b
    void setRemoteAddr(java.net.InetAddress) -> a
    boolean isTransmitting() -> c
    int[] $SWITCH_TABLE$org$jitsi$service$neomedia$MediaType() -> d
org.jitsi.service.libjitsi.LibJitsi -> org.jitsi.a.a.a:
    org.jitsi.util.Logger logger -> a
    org.jitsi.service.libjitsi.LibJitsi impl -> b
    org.jitsi.service.neomedia.MediaService getMediaService() -> a
    void start() -> b
    void stop() -> c
    java.lang.Object getService$659effca() -> d
org.jitsi.service.neomedia.DefaultStreamConnector -> org.jitsi.a.b.a:
org.jitsi.service.neomedia.MediaDirection -> org.jitsi.a.b.b:
    org.jitsi.service.neomedia.MediaDirection INACTIVE -> d
    org.jitsi.service.neomedia.MediaDirection SENDONLY -> a
    org.jitsi.service.neomedia.MediaDirection RECVONLY -> b
    org.jitsi.service.neomedia.MediaDirection SENDRECV -> c
    java.lang.String directionName -> e
    org.jitsi.service.neomedia.MediaDirection[] ENUM$VALUES -> f
    java.lang.String toString() -> toString
    org.jitsi.service.neomedia.MediaDirection[] values() -> values
    org.jitsi.service.neomedia.MediaDirection valueOf(java.lang.String) -> valueOf
org.jitsi.service.neomedia.MediaService -> org.jitsi.a.b.c:
    org.jitsi.service.neomedia.MediaStream createMediaStream$2ee91316() -> a
    org.jitsi.service.neomedia.device.MediaDevice getDefaultDevice$5e4d418a() -> b
org.jitsi.service.neomedia.MediaStream -> org.jitsi.a.b.d:
    java.lang.String getName() -> a
    java.awt.Component getLocalVisualComponent() -> b
    java.awt.Component getVisualComponent() -> c
org.jitsi.service.neomedia.MediaStreamTarget -> org.jitsi.a.b.e:
    java.net.InetSocketAddress rtpTarget -> a
    java.net.InetSocketAddress rtcpTarget -> b
    boolean addressesAreEqual(java.net.InetSocketAddress,java.net.InetSocketAddress) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.jitsi.service.neomedia.MediaType -> org.jitsi.a.b.f:
    org.jitsi.service.neomedia.MediaType AUDIO -> a
    org.jitsi.service.neomedia.MediaType VIDEO -> b
    java.lang.String mediaTypeName -> c
    org.jitsi.service.neomedia.MediaType[] ENUM$VALUES -> d
    java.lang.String toString() -> toString
    org.jitsi.service.neomedia.MediaType[] values() -> values
    org.jitsi.service.neomedia.MediaType valueOf(java.lang.String) -> valueOf
org.jitsi.service.neomedia.MediaUseCase -> org.jitsi.a.b.g:
    org.jitsi.service.neomedia.MediaUseCase ANY -> b
    org.jitsi.service.neomedia.MediaUseCase CALL -> a
    org.jitsi.service.neomedia.MediaUseCase DESKTOP -> c
    java.lang.String mediaUseCase -> d
    org.jitsi.service.neomedia.MediaUseCase[] ENUM$VALUES -> e
    java.lang.String toString() -> toString
    org.jitsi.service.neomedia.MediaUseCase[] values() -> values
    org.jitsi.service.neomedia.MediaUseCase valueOf(java.lang.String) -> valueOf
org.jitsi.service.neomedia.StreamConnector -> org.jitsi.a.b.h:
org.jitsi.service.neomedia.device.MediaDevice -> org.jitsi.a.b.a.a:
    org.jitsi.service.neomedia.MediaType getMediaType() -> a
org.jitsi.util.Logger -> org.jitsi.util.a:
    java.util.logging.Logger loggerDelegate -> a
    org.jitsi.util.Logger getLogger(java.lang.Class) -> a
    boolean isInfoEnabled() -> a
org.jitsi.util.swing.TransparentIntercomInProgressFrame -> org.jitsi.util.swing.TransparentIntercomInProgressFrame:
    javax.swing.JLabel lblTime -> b
    javax.swing.JLabel lblImage -> c
    long startTime -> a
    void main(java.lang.String[]) -> main
    javax.swing.JLabel access$0(org.jitsi.util.swing.TransparentIntercomInProgressFrame) -> a
org.jitsi.util.swing.TransparentIntercomInProgressFrame$1 -> org.jitsi.util.swing.a:
    org.jitsi.util.swing.TransparentIntercomInProgressFrame this$0 -> a
    void windowOpened(java.awt.event.WindowEvent) -> windowOpened
    org.jitsi.util.swing.TransparentIntercomInProgressFrame access$0(org.jitsi.util.swing.TransparentIntercomInProgressFrame$1) -> a
org.jitsi.util.swing.TransparentIntercomInProgressFrame$1$1 -> org.jitsi.util.swing.b:
    org.jitsi.util.swing.TransparentIntercomInProgressFrame$1 this$1 -> a
    java.text.NumberFormat val$format -> b
    void run() -> run
org.jitsi.util.swing.TransparentIntercomInProgressFrame$2 -> org.jitsi.util.swing.c:
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
org.jscroll.JScrollDesktopPane -> org.jscroll.a:
    org.jscroll.widgets.DesktopMediator desktopMediator -> a
    javax.swing.JInternalFrame getSelectedFrame() -> a
    org.jscroll.widgets.DesktopMediator getDesktopMediator() -> b
org.jscroll.widgets.DesktopListener -> org.jscroll.widgets.a:
    org.jscroll.widgets.DesktopMediator desktopMediator -> a
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.jscroll.widgets.DesktopMediator -> org.jscroll.widgets.b:
    org.jscroll.widgets.DesktopScrollPane desktopScrollpane -> a
    void removeAssociatedComponents$bc69798() -> a
    void resizeDesktop() -> b
    void tileInternalFrames() -> c
    void setAutoTile(boolean) -> a
    org.jscroll.widgets.DesktopScrollPane getDesktopScrollpane() -> d
org.jscroll.widgets.DesktopScrollPane -> org.jscroll.widgets.c:
    org.jscroll.widgets.DesktopMediator desktopMediator -> a
    org.jscroll.widgets.RootDesktopPane desktopPane -> b
    org.jscroll.widgets.FramePositioning positioning -> c
    javax.swing.JInternalFrame[] getAllFrames() -> a
    javax.swing.JInternalFrame getSelectedFrame() -> b
    void setDesktopSize(java.awt.Dimension) -> a
    void setAutoTile(boolean) -> a
    void cascadeInternalFrames() -> c
    void tileInternalFrames() -> d
    void resizeDesktop() -> e
    void removeAssociatedComponents(org.jscroll.widgets.JScrollInternalFrame) -> a
    org.jscroll.widgets.RootDesktopPane getDesktopPane() -> f
org.jscroll.widgets.DesktopScrollPane$1 -> org.jscroll.widgets.d:
    org.jscroll.widgets.DesktopScrollPane this$0 -> a
    void run() -> run
org.jscroll.widgets.EmptyDesktopIconUI -> org.jscroll.widgets.EmptyDesktopIconUI:
    org.jscroll.widgets.EmptyDesktopIconUI desktopIconUI -> a
    javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) -> createUI
org.jscroll.widgets.FrameAccessorInterface -> org.jscroll.widgets.e:
    org.jscroll.widgets.JScrollInternalFrame getAssociatedFrame() -> a
org.jscroll.widgets.FramePositioning -> org.jscroll.widgets.f:
    org.jscroll.widgets.DesktopScrollPane desktopScrollpane -> a
    void cascadeInternalFrames() -> a
    void tileInternalFrames() -> b
org.jscroll.widgets.JScrollDesktopManager -> org.jscroll.widgets.g:
    org.jscroll.widgets.RootDesktopPane desktopPane -> a
    void maximizeFrame(javax.swing.JInternalFrame) -> maximizeFrame
    void activateFrame(javax.swing.JInternalFrame) -> activateFrame
    void closeFrame(javax.swing.JInternalFrame) -> closeFrame
org.jscroll.widgets.JScrollInternalFrame -> org.jscroll.widgets.h:
    int initialWidth -> a
    int initialHeight -> b
    void saveSize() -> b
    java.awt.Dimension getInitialDimensions() -> a
    java.lang.String toString() -> toString
    void addNotify() -> addNotify
org.jscroll.widgets.RootDesktopPane -> org.jscroll.widgets.i:
    org.jscroll.widgets.DesktopScrollPane desktopScrollpane -> a
    org.jscroll.widgets.DesktopScrollPane getDesktopScrollpane() -> a
