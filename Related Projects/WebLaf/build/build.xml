<?xml version="1.0"?>
<project name="Web Look and Feel" basedir="../" default="build.artifacts">

    <!-- Property files -->
    <property name="version.properties" value="build/version.properties" />
    <property name="build.properties" value="build/build.properties" />
    <property file="${version.properties}" />
    <property file="${build.properties}" />

    <!-- Classpath -->
    <path id="java">
        <fileset dir="${lib.dir}" includes="*.jar" />
    </path>

    <!-- Dist directory -->
    <target name="clean.dist">
        <delete dir="${dist.dir}" />
    </target>
    <target name="create.dist" depends="clean.dist">
        <mkdir dir="${dist.dir}" />
    </target>

    <!-- Artifacts directory -->
    <target name="clean.artifacts">
        <delete dir="${artifacts.dir}" />
    </target>
    <target name="create.artifacts">
        <mkdir dir="${artifacts.dir}" />
    </target>

    <!-- Compile classes -->
    <target name="compile" depends="create.dist">
        <javac debug="true" includeantruntime="false" destdir="${dist.dir}" encoding="utf-8" source="1.6" target="1.6">
            <src path="${src.dir}" />
            <classpath refid="java" />
        </javac>
    </target>

    <!-- Resources copy -->
    <target name="src.copy.build">
        <copy todir="${dist.dir}/build">
            <fileset file="${build.dir}/build.xml" />
        </copy>
    </target>
    <target name="src.copy.lib">
        <copy todir="${dist.dir}/lib">
            <fileset dir="${lib.dir}" />
        </copy>
    </target>
    <target name="src.copy.lic">
        <copy todir="${dist.dir}/licenses">
            <fileset dir="${lic.dir}" />
        </copy>
    </target>
    <target name="src.copy.src">
        <copy todir="${dist.dir}/src">
            <fileset dir="${src.dir}" />
        </copy>
    </target>
    <target name="copy.res">
        <copy todir="${dist.dir}">
            <fileset dir="${src.dir}" excludes="**/*.java" />
        </copy>
    </target>
    <target name="copy.src">
        <copy todir="${dist.dir}">
            <fileset dir="${src.dir}" />
        </copy>
    </target>
    <target name="copy.lic">
        <copy todir="${dist.dir}/licenses">
            <fileset dir="${lic.dir}" />
        </copy>
    </target>

    <!-- Assemble library sources -->
    <target name="build.sources.zip" depends="create.dist,src.copy.build,src.copy.lib,src.copy.lic,src.copy.src,create.artifacts">
        <zip destfile="${sources.zip}">
            <fileset dir="${dist.dir}">
                <exclude name="src/com/test/**" />
            </fileset>
        </zip>
    </target>

    <!-- Assemble library jar -->
    <target name="build.weblaf.jar" depends="compile,copy.res,copy.lic,create.artifacts">
        <jar destfile="${library.jar}">
            <!-- Base libraries -->
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xmlpull.jar}" />
            <zipfileset src="${lib.dir}/${xpp3.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <!-- Excluded classes -->
            <fileset dir="${dist.dir}">
                <exclude name="com/test/**" />
                <exclude name="com/alee/examples/**" />
            </fileset>
            <!-- WebLaF library manifest -->
            <manifest>
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Product-Name" value="${library.title}" />
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Main-Class" value="${library.main}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble simple library jar -->
    <target name="build.weblaf.simple.jar" depends="compile,copy.res,copy.lic,create.artifacts">
        <!-- Copying libraries -->
        <copy todir="${artifacts.dir}">
            <fileset dir="${lib.dir}" />
        </copy>
        <!-- Building jar -->
        <jar destfile="${library.simple.jar}">
            <!-- Excluded classes -->
            <fileset dir="${dist.dir}">
                <exclude name="com/test/**" />
                <exclude name="com/alee/examples/**" />
            </fileset>
            <!-- WebLaF library manifest -->
            <manifest>
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Product-Name" value="${library.simple.title}" />
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Main-Class" value="${library.simple.main}" />
                <attribute name="Class-Path" value="${imagescaling.jar} ${jericho.jar} ${xmlpull.jar} ${xpp3.jar} ${xstream.jar}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble library demo jar -->
    <target name="build.weblaf.demo.jar" depends="compile,copy.src,copy.lic,create.artifacts">
        <jar destfile="${demo.jar}">
            <!-- Demo libraries -->
            <zipfileset src="${lib.dir}/${rsyntaxtextarea.jar}" />
            <!-- Base libraries -->
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xmlpull.jar}" />
            <zipfileset src="${lib.dir}/${xpp3.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <!-- Excluded classes -->
            <fileset dir="${dist.dir}">
                <exclude name="com/test/**" />
            </fileset>
            <!-- WebLaF demo manifest -->
            <manifest>
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Product-Name" value="${demo.title}" />
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Main-Class" value="${demo.main}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble nine-patch editor jar -->
    <target name="build.npe.jar" depends="compile,copy.res,copy.lic,create.artifacts">
        <jar destfile="${npe.jar}">
            <!-- Base libraries -->
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xmlpull.jar}" />
            <zipfileset src="${lib.dir}/${xpp3.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <!-- Excluded classes -->
            <fileset dir="${dist.dir}">
                <exclude name="com/test/**" />
                <exclude name="com/alee/examples/**" />
            </fileset>
            <!-- Nine-patch editor manifest -->
            <manifest>
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Product-Name" value="${npe.title}" />
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Main-Class" value="${npe.main}" />
            </manifest>
        </jar>
    </target>

    <!-- Assemble JavaDoc -->
    <target name="create.javadoc" depends="create.artifacts">
        <javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" source="">
            <packageset dir="${src.dir}" defaultexcludes="yes">
                <exclude name="com/test/**" />
                <exclude name="com/alee/examples/**" />
            </packageset>
            <classpath refid="java" />
        </javadoc>
    </target>
    <target name="build.javadoc" depends="create.javadoc">
        <zip destfile="${javadoc.zip}">
            <fileset dir="${javadoc.dir}" />
        </zip>
    </target>

    <!-- Assemble and run version updater jar -->
    <target name="update.library.build" depends="compile,copy.res,copy.lic,create.artifacts">
        <jar destfile="${vupdater.jar}">
            <!-- Base libraries -->
            <zipfileset src="${lib.dir}/${imagescaling.jar}" />
            <zipfileset src="${lib.dir}/${jericho.jar}" />
            <zipfileset src="${lib.dir}/${xmlpull.jar}" />
            <zipfileset src="${lib.dir}/${xpp3.jar}" />
            <zipfileset src="${lib.dir}/${xstream.jar}" />
            <!-- Excluded classes -->
            <fileset dir="${dist.dir}">
                <exclude name="com/test/**" />
                <exclude name="com/alee/examples/**" />
            </fileset>
            <!-- WebLaF library manifest -->
            <manifest>
                <attribute name="Package-Vendor" value="${dev}" />
                <attribute name="Product-Name" value="${vupdater.title}" />
                <attribute name="Package-Title" value="${package}" />
                <attribute name="Package-Version" value="${version.info}" />
                <attribute name="Main-Class" value="${vupdater.main}" />
            </manifest>
        </jar>
        <java jar="${vupdater.jar}" fork="true" />
        <delete file="${vupdater.jar}" />
    </target>

    <!-- Copy XML version file into artifacts folder -->
    <target name="copy.version">
        <copy file="${xml.version.file}" todir="${artifacts.dir}" />
    </target>

    <!-- Assemble all artifacts -->
    <target name="build.artifacts">
        <antcall description="Cleanup artifacts" target="clean.artifacts" />
        <antcall description="Build ${sources.zip.name}" target="build.sources.zip" />
        <antcall description="Build ${library.jar.name}" target="build.weblaf.jar" />
        <antcall description="Build ${library.simple.jar.name}" target="build.weblaf.simple.jar" />
        <antcall description="Build ${demo.jar.name}" target="build.weblaf.demo.jar" />
        <antcall description="Build ${npe.jar.name}" target="build.npe.jar" />
        <antcall description="Build ${javadoc.name}" target="build.javadoc" />
        <antcall description="Copy library version XML file" target="copy.version" />
        <antcall description="Cleanup dist" target="clean.dist" />
    </target>

    <!-- Assemble release artifacts -->
    <target name="build.release.artifacts">
        <antcall description="Cleanup artifacts" target="clean.artifacts" />
        <antcall description="Build ${sources.zip.name}" target="build.sources.zip" />
        <antcall description="Build ${library.jar.name}" target="build.weblaf.jar" />
        <antcall description="Build ${library.simple.jar.name}" target="build.weblaf.simple.jar" />
        <antcall description="Build ${demo.jar.name}" target="build.weblaf.demo.jar" />
        <antcall description="Build ${npe.jar.name}" target="build.npe.jar" />
        <antcall description="Build ${javadoc.name}" target="build.javadoc" />
        <antcall description="Copy library version XML file" target="copy.version" />
        <antcall description="Update library version files" target="update.library.build" />
        <antcall description="Cleanup dist" target="clean.dist" />
    </target>

    <!-- Run targets -->
    <target name="run.weblaf.demo" depends="build.weblaf.demo.jar">
        <java jar="${demo.jar}" fork="true" />
    </target>
    <target name="run.weblaf" depends="build.weblaf.jar">
        <java jar="${library.jar}" fork="true" />
    </target>
    <target name="run.npe" depends="build.npe.jar">
        <java jar="${npe.jar}" fork="true" />
    </target>

</project>